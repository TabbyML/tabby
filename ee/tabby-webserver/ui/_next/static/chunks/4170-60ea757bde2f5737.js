"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4170,3240],{48537:function(n,e,t){t.d(e,{q:function(){return o}});var r=t(36164);t(3546);var i=t(28312),a=t(31458),s=t(81565);function o(n){let{className:e,value:t,onCopyContent:o,text:d,...u}=n,{isCopied:l,copyToClipboard:c}=(0,i.m)({timeout:2e3,onCopyContent:o});return t?(0,r.jsxs)(a.z,{variant:"ghost",size:d?"default":"icon",className:e,onClick:()=>{l||c(t)},...u,children:[l?(0,r.jsx)(s.IconCheck,{className:"text-green-600"}):(0,r.jsx)(s.IconCopy,{}),d&&(0,r.jsx)("span",{children:d}),!d&&(0,r.jsx)("span",{className:"sr-only",children:"Copy"})]}):null}},90379:function(n,e,t){t.d(e,{PF:function(){return d},cg:function(){return s},tB:function(){return o}});var r=t(36164),i=t(57288),a=t(3448);let s=n=>{let{className:e,...t}=n;return(0,r.jsxs)("div",{className:(0,i.cn)("space-y-3",e),...t,children:[(0,r.jsx)(a.O,{className:"h-4 w-full"}),(0,r.jsx)(a.O,{className:"h-4 w-full"}),(0,r.jsx)(a.O,{className:"h-4 w-full"}),(0,r.jsx)(a.O,{className:"h-4 w-full"})]})},o=n=>{let{className:e,...t}=n;return(0,r.jsx)(a.O,{className:(0,i.cn)("h-4 w-full",e),...t})},d=n=>{let{className:e,...t}=n;return(0,r.jsxs)("div",{className:(0,i.cn)("flex flex-col gap-3",e),...t,children:[(0,r.jsx)(a.O,{className:"h-4 w-[20%]"}),(0,r.jsx)(a.O,{className:"h-4 w-full"}),(0,r.jsx)(a.O,{className:"h-4 w-[20%]"}),(0,r.jsx)(a.O,{className:"h-4 w-full"})]})}},11208:function(n,e,t){t.d(e,{Z:function(){return o}});var r=t(36164),i=t(3546),a=t(74225),s=t(57288);let o=i.forwardRef((n,e)=>{let{className:t,orientation:i="horizontal",decorative:o=!0,...d}=n;return(0,r.jsx)(a.f,{ref:e,decorative:o,orientation:i,className:(0,s.cn)("shrink-0 bg-border","horizontal"===i?"h-[1px] w-full":"h-full w-[1px]",t),...d})});o.displayName=a.f.displayName},3448:function(n,e,t){t.d(e,{O:function(){return a}});var r=t(36164),i=t(57288);function a(n){let{className:e,...t}=n;return(0,r.jsx)("div",{className:(0,i.cn)("h-4 animate-pulse rounded-md bg-border",e),...t})}},29:function(n,e,t){t.d(e,{_v:function(){return l},aJ:function(){return u},pn:function(){return o},u:function(){return d}});var r=t(36164),i=t(3546),a=t(44421),s=t(57288);let o=a.zt,d=a.fC,u=a.xz;a.h_;let l=i.forwardRef((n,e)=>{let{className:t,sideOffset:i=4,...o}=n;return(0,r.jsx)(a.VY,{ref:e,sideOffset:i,className:(0,s.cn)("z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-xs font-medium text-popover-foreground shadow-md animate-in fade-in-50 data-[side=bottom]:slide-in-from-top-1 data-[side=left]:slide-in-from-right-1 data-[side=right]:slide-in-from-left-1 data-[side=top]:slide-in-from-bottom-1",t),...o})});l.displayName=a.VY.displayName},75561:function(n,e,t){t.d(e,{B:function(){return a}});var r=t(18500);let i={"\n  query ListUserEvents(\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n    $start: DateTime!\n    $end: DateTime!\n    $users: [ID!]\n  ) {\n    userEvents(\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n      start: $start\n      end: $end\n      users: $users\n    ) {\n      edges {\n        node {\n          id\n          userId\n          createdAt\n          kind\n          payload\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":r.UQ,"\n  mutation uploadUserAvatarBase64($id: ID!, $avatarBase64: String!) {\n    uploadUserAvatarBase64(id: $id, avatarBase64: $avatarBase64)\n  }\n":r.eI,"\n  mutation UpdateUserName($id: ID!, $name: String!) {\n    updateUserName(id: $id, name: $name)\n  }\n":r.DQ,"\n  mutation PasswordChange($input: PasswordChangeInput!) {\n    passwordChange(input: $input)\n  }\n":r.oZ,"\n  mutation updateEmailSetting($input: EmailSettingInput!) {\n    updateEmailSetting(input: $input)\n  }\n":r.gl,"\n  mutation deleteEmailSetting {\n    deleteEmailSetting\n  }\n":r.wZ,"\n  mutation SendTestEmail($to: String!) {\n    sendTestEmail(to: $to)\n  }\n":r.nI,"\n  query emailSetting {\n    emailSetting {\n      smtpUsername\n      smtpServer\n      fromAddress\n      encryption\n      authMethod\n      smtpPort\n    }\n  }\n":r.k6,"\n  mutation UpdateIntegration($input: UpdateIntegrationInput!) {\n    updateIntegration(input: $input)\n  }\n":r.fc,"\n  mutation DeleteIntegration($id: ID!, $kind: IntegrationKind!) {\n    deleteIntegration(id: $id, kind: $kind)\n  }\n":r.AU,"\n  mutation UpdateIntegratedRepositoryActive($id: ID!, $active: Boolean!) {\n    updateIntegratedRepositoryActive(id: $id, active: $active)\n  }\n":r.o7,"\n  mutation CreateIntegration($input: CreateIntegrationInput!) {\n    createIntegration(input: $input)\n  }\n":r.fY,"\n  mutation grantSourceIdReadAccess($sourceId: String!, $userGroupId: ID!) {\n    grantSourceIdReadAccess(sourceId: $sourceId, userGroupId: $userGroupId)\n  }\n":r.Yr,"\n  mutation revokeSourceIdReadAccess($sourceId: String!, $userGroupId: ID!) {\n    revokeSourceIdReadAccess(sourceId: $sourceId, userGroupId: $userGroupId)\n  }\n":r.z,"\n  mutation CreateCustomDocument($input: CreateCustomDocumentInput!) {\n    createCustomDocument(input: $input)\n  }\n":r.Gf,"\n  query CustomWebDocuments(\n    $ids: [ID!]\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    customWebDocuments(\n      ids: $ids\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          url\n          name\n          id\n          sourceId\n          jobInfo {\n            lastJobRun {\n              id\n              job\n              createdAt\n              finishedAt\n              exitCode\n            }\n            command\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":r.wx,"\n  mutation DeleteCustomDocument($id: ID!) {\n    deleteCustomDocument(id: $id)\n  }\n":r.c3,"\n  query PresetWebDocuments(\n    $ids: [ID!]\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n    $isActive: Boolean\n  ) {\n    presetWebDocuments(\n      ids: $ids\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n      isActive: $isActive\n    ) {\n      edges {\n        node {\n          id\n          name\n          isActive\n          sourceId\n          jobInfo {\n            lastJobRun {\n              id\n              job\n              createdAt\n              finishedAt\n              exitCode\n            }\n            command\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":r.z1,"\n  mutation SetPresetDocumentActive($input: SetPresetDocumentActiveInput!) {\n    setPresetDocumentActive(input: $input)\n  }\n":r.h_,"\n  mutation deleteGitRepository($id: ID!) {\n    deleteGitRepository(id: $id)\n  }\n":r.TS,"\n  mutation createGitRepository($name: String!, $gitUrl: String!) {\n    createGitRepository(name: $name, gitUrl: $gitUrl)\n  }\n":r.ad,"\n  mutation triggerJobRun($command: String!) {\n    triggerJobRun(command: $command)\n  }\n":r.uk,"\n  mutation testLdapConnection($input: UpdateLdapCredentialInput!) {\n    testLdapConnection(input: $input)\n  }\n":r.rL,"\n  mutation updateLdapCredential($input: UpdateLdapCredentialInput!) {\n    updateLdapCredential(input: $input)\n  }\n":r.xn,"\n  mutation deleteLdapCredential {\n    deleteLdapCredential\n  }\n":r.X6,"\n  mutation updateOauthCredential($input: UpdateOAuthCredentialInput!) {\n    updateOauthCredential(input: $input)\n  }\n":r.m,"\n  mutation deleteOauthCredential($provider: OAuthProvider!) {\n    deleteOauthCredential(provider: $provider)\n  }\n":r.ZH,"\n  query OAuthCallbackUrl($provider: OAuthProvider!) {\n    oauthCallbackUrl(provider: $provider)\n  }\n":r.L$,"\n  mutation updateNetworkSettingMutation($input: NetworkSettingInput!) {\n    updateNetworkSetting(input: $input)\n  }\n":r.rN,"\n  mutation updateSecuritySetting($input: SecuritySettingInput!) {\n    updateSecuritySetting(input: $input)\n  }\n":r.Nl,"\n  query SecuritySetting {\n    securitySetting {\n      allowedRegisterDomainList\n      disableClientSideTelemetry\n    }\n  }\n":r.rU,"\n  mutation UploadLicense($license: String!) {\n    uploadLicense(license: $license)\n  }\n":r.Yo,"\n  mutation ResetLicense {\n    resetLicense\n  }\n":r.d0,"\n  mutation CreateInvitation($email: String!) {\n    createInvitation(email: $email)\n  }\n":r.ib,"\n  mutation DeleteInvitation($id: ID!) {\n    deleteInvitation(id: $id)\n  }\n":r.YM,"\n  mutation updateUserRole($id: ID!, $isAdmin: Boolean!) {\n    updateUserRole(id: $id, isAdmin: $isAdmin)\n  }\n":r.XF,"\n  mutation UpdateUserActive($id: ID!, $active: Boolean!) {\n    updateUserActive(id: $id, active: $active)\n  }\n":r.dv,"\n  mutation generateResetPasswordUrl($userId: ID!) {\n    generateResetPasswordUrl(userId: $userId)\n  }\n":r.nh,"\n  mutation createUserGroup($input: CreateUserGroupInput!) {\n    createUserGroup(input: $input)\n  }\n":r.e8,"\n  mutation DeleteUserGroupMembership($userGroupId: ID!, $userId: ID!) {\n    deleteUserGroupMembership(userGroupId: $userGroupId, userId: $userId)\n  }\n":r.zD,"\n  mutation UpsertUserGroupMembership($input: UpsertUserGroupMembershipInput!) {\n    upsertUserGroupMembership(input: $input)\n  }\n":r.uI,"\n  mutation DeleteUserGroup($id: ID!) {\n    deleteUserGroup(id: $id)\n  }\n":r.hQ,"\n  query GetRegistrationToken {\n    registrationToken\n  }\n":r.bh,"\n  mutation ResetRegistrationToken {\n    resetRegistrationToken\n  }\n":r.wW,"\n  query TestModelConnection($backend: ModelHealthBackend!) {\n    testModelConnection(backend: $backend) {\n      latencyMs\n    }\n  }\n":r.rE,"\n  query GetDiskUsageStats {\n    diskUsageStats {\n      events {\n        filepath\n        sizeKb\n      }\n      indexedRepositories {\n        filepath\n        sizeKb\n      }\n      database {\n        filepath\n        sizeKb\n      }\n      models {\n        filepath\n        sizeKb\n      }\n    }\n  }\n":r.xX,"\n  query readRepositoryRelatedQuestions($sourceId: String!) {\n    readRepositoryRelatedQuestions(sourceId: $sourceId)\n  }\n":r.pu,"\n  query ListThreads(\n    $ids: [ID!]\n    $isEphemeral: Boolean\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    threads(\n      ids: $ids\n      isEphemeral: $isEphemeral\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          userId\n          createdAt\n          updatedAt\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":r.qk,"\n  mutation passwordReset($input: PasswordResetInput!) {\n    passwordReset(input: $input)\n  }\n":r.vK,"\n  mutation tokenAuthLdap($userId: String!, $password: String!) {\n    tokenAuthLdap(userId: $userId, password: $password) {\n      accessToken\n      refreshToken\n    }\n  }\n":r.Wv,"\n  mutation requestPasswordResetEmail($input: RequestPasswordResetEmailInput!) {\n    requestPasswordResetEmail(input: $input)\n  }\n":r.i8,"\n  mutation requestInvitationEmail($input: RequestInvitationInput!) {\n    requestInvitationEmail(input: $input) {\n      email\n      code\n    }\n  }\n":r.S_,"\n  query authProviders {\n    authProviders {\n      kind\n    }\n  }\n":r.c1,"\n  mutation tokenAuth($email: String!, $password: String!) {\n    tokenAuth(email: $email, password: $password) {\n      accessToken\n      refreshToken\n    }\n  }\n":r.UO,"\n  mutation register(\n    $name: String!\n    $email: String!\n    $password1: String!\n    $password2: String!\n    $invitationCode: String\n  ) {\n    register(\n      name: $name\n      email: $email\n      password1: $password1\n      password2: $password2\n      invitationCode: $invitationCode\n    ) {\n      accessToken\n      refreshToken\n    }\n  }\n":r.YR,"\n  query RepositoryGrep(\n    $id: ID!\n    $kind: RepositoryKind!\n    $rev: String\n    $query: String!\n  ) {\n    repositoryGrep(kind: $kind, id: $id, rev: $rev, query: $query) {\n      files {\n        path\n        lines {\n          line {\n            text\n            base64\n          }\n          byteOffset\n          lineNumber\n          subMatches {\n            bytesStart\n            bytesEnd\n          }\n        }\n      }\n      elapsedMs\n    }\n  }\n":r.lq,"\n  mutation DeletePage($id: ID!) {\n    deletePage(id: $id)\n  }\n":r.$Q,"\n  subscription createThreadToPageRun($threadId: ID!) {\n    createThreadToPageRun(threadId: $threadId) {\n      __typename\n      ... on PageCreated {\n        id\n        authorId\n        title\n      }\n      ... on PageContentDelta {\n        delta\n      }\n      ... on PageContentCompleted {\n        id\n      }\n      ... on PageSectionsCreated {\n        sections {\n          id\n          title\n          position\n        }\n      }\n      ... on PageSectionContentDelta {\n        id\n        delta\n      }\n      ... on PageSectionContentCompleted {\n        id\n      }\n      ... on PageCompleted {\n        id\n      }\n    }\n  }\n":r.dQ,"\n  mutation DeletePageSection($sectionId: ID!) {\n    deletePageSection(sectionId: $sectionId)\n  }\n":r.$g,"\n  mutation movePageSection($id: ID!, $direction: MoveSectionDirection!) {\n    movePageSection(id: $id, direction: $direction)\n  }\n":r.nA,"\n  mutation DeleteThread($id: ID!) {\n    deleteThread(id: $id)\n  }\n":r.xW,"\n  mutation UpdateThreadMessage($input: UpdateMessageInput!) {\n    updateThreadMessage(input: $input)\n  }\n":r.Tj,"\n  mutation markNotificationsRead($notificationId: ID) {\n    markNotificationsRead(notificationId: $notificationId)\n  }\n":r.yR,"\n  mutation ResetUserAuthToken {\n    resetUserAuthToken\n  }\n":r.qq,"\n  query GetLicenseInfo {\n    license {\n      type\n      status\n      seats\n      seatsUsed\n      issuedAt\n      expiresAt\n    }\n  }\n":r.eZ,"\n  query MeQuery {\n    me {\n      id\n      email\n      name\n      isAdmin\n      isOwner\n      authToken\n      isPasswordSet\n      isSsoUser\n    }\n  }\n":r.fk,"\n  query NetworkSetting {\n    networkSetting {\n      externalUrl\n    }\n  }\n":r.m2,"\n  query GetServerInfo {\n    serverInfo {\n      isAdminInitialized\n      isEmailConfigured\n      isChatEnabled\n      allowSelfSignup\n      isDemoMode\n    }\n  }\n":r.a,"\n  subscription CreateThreadAndRun($input: CreateThreadAndRunInput!) {\n    createThreadAndRun(input: $input) {\n      __typename\n      ... on ThreadCreated {\n        id\n      }\n      ... on ThreadUserMessageCreated {\n        id\n      }\n      ... on ThreadAssistantMessageCreated {\n        id\n      }\n      ... on ThreadAssistantMessageReadingCode {\n        snippet\n        fileList\n      }\n      ... on ThreadRelevantQuestions {\n        questions\n      }\n      ... on ThreadAssistantMessageAttachmentsCodeFileList {\n        codeFileList: fileList\n      }\n      ... on ThreadAssistantMessageAttachmentsCode {\n        hits {\n          code {\n            gitUrl\n            commit\n            filepath\n            language\n            content\n            startLine\n          }\n          scores {\n            rrf\n            bm25\n            embedding\n          }\n        }\n      }\n      ... on ThreadAssistantMessageAttachmentsDoc {\n        hits {\n          doc {\n            __typename\n            ... on MessageAttachmentWebDoc {\n              title\n              link\n              content\n            }\n            ... on MessageAttachmentIssueDoc {\n              title\n              link\n              author {\n                id\n                email\n                name\n              }\n              body\n              closed\n            }\n            ... on MessageAttachmentPullDoc {\n              title\n              link\n              author {\n                id\n                email\n                name\n              }\n              body\n              merged\n            }\n          }\n          score\n        }\n      }\n      ... on ThreadAssistantMessageContentDelta {\n        delta\n      }\n      ... on ThreadAssistantMessageCompleted {\n        id\n      }\n    }\n  }\n":r.VL,"\n  subscription CreateThreadRun($input: CreateThreadRunInput!) {\n    createThreadRun(input: $input) {\n      __typename\n      ... on ThreadCreated {\n        id\n      }\n      ... on ThreadUserMessageCreated {\n        id\n      }\n      ... on ThreadAssistantMessageCreated {\n        id\n      }\n      ... on ThreadAssistantMessageReadingCode {\n        snippet\n        fileList\n      }\n      ... on ThreadRelevantQuestions {\n        questions\n      }\n      ... on ThreadAssistantMessageAttachmentsCodeFileList {\n        codeFileList: fileList\n      }\n      ... on ThreadAssistantMessageAttachmentsCode {\n        hits {\n          code {\n            gitUrl\n            commit\n            filepath\n            language\n            content\n            startLine\n          }\n          scores {\n            rrf\n            bm25\n            embedding\n          }\n        }\n      }\n      ... on ThreadAssistantMessageAttachmentsDoc {\n        hits {\n          doc {\n            __typename\n            ... on MessageAttachmentWebDoc {\n              title\n              link\n              content\n            }\n            ... on MessageAttachmentIssueDoc {\n              title\n              link\n              author {\n                id\n                email\n                name\n              }\n              body\n              closed\n            }\n            ... on MessageAttachmentPullDoc {\n              title\n              link\n              author {\n                id\n                email\n                name\n              }\n              body\n              merged\n            }\n          }\n          score\n        }\n      }\n      ... on ThreadAssistantMessageContentDelta {\n        delta\n      }\n      ... on ThreadAssistantMessageCompleted {\n        id\n      }\n    }\n  }\n":r.uM,"\n  mutation DeleteThreadMessagePair(\n    $threadId: ID!\n    $userMessageId: ID!\n    $assistantMessageId: ID!\n  ) {\n    deleteThreadMessagePair(\n      threadId: $threadId\n      userMessageId: $userMessageId\n      assistantMessageId: $assistantMessageId\n    )\n  }\n":r.ou,"\n  mutation refreshToken($refreshToken: String!) {\n    refreshToken(refreshToken: $refreshToken) {\n      accessToken\n      refreshToken\n    }\n  }\n":r.FR,"\n  mutation LogoutAllSessions {\n    logoutAllSessions\n  }\n":r.Il,"\n  query ListInvitations(\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    invitations(after: $after, before: $before, first: $first, last: $last) {\n      edges {\n        node {\n          id\n          email\n          code\n          createdAt\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":r.Xx,"\n  query gitRepositories(\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    gitRepositories(\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          name\n          gitUrl\n          sourceId\n          jobInfo {\n            lastJobRun {\n              id\n              job\n              createdAt\n              finishedAt\n              exitCode\n            }\n            command\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":r.Mi,"\n  query ListJobRuns(\n    $ids: [ID!]\n    $jobs: [String!]\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    jobRuns(\n      ids: $ids\n      jobs: $jobs\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          job\n          createdAt\n          startedAt\n          finishedAt\n          exitCode\n          stdout\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":r.$S,"\n  query GetJobRunStats($jobs: [String!]) {\n    jobRunStats(jobs: $jobs) {\n      success\n      failed\n      pending\n    }\n  }\n":r.np,"\n  query ListJobs {\n    jobs\n  }\n":r.Ax,"\n  query ListUsers(\n    $ids: [ID!]\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    users(\n      ids: $ids\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          email\n          isAdmin\n          isOwner\n          createdAt\n          active\n          name\n          isSsoUser\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":r.by,"\n  query DailyStatsInPastYear($users: [ID!]) {\n    dailyStatsInPastYear(users: $users) {\n      start\n      end\n      completions\n      selects\n      views\n    }\n  }\n":r.Wd,"\n  query DailyStats(\n    $start: DateTime!\n    $end: DateTime!\n    $users: [ID!]\n    $languages: [Language!]\n  ) {\n    dailyStats(start: $start, end: $end, users: $users, languages: $languages) {\n      start\n      end\n      completions\n      selects\n      views\n      language\n    }\n  }\n":r.Sm,"\n  query ListIntegrations(\n    $ids: [ID!]\n    $kind: IntegrationKind\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    integrations(\n      ids: $ids\n      kind: $kind\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          displayName\n          status\n          apiBase\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":r.KZ,"\n  query ListIntegratedRepositories(\n    $ids: [ID!]\n    $kind: IntegrationKind\n    $active: Boolean\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    integratedRepositories(\n      ids: $ids\n      kind: $kind\n      active: $active\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          displayName\n          gitUrl\n          active\n          sourceId\n          jobInfo {\n            lastJobRun {\n              id\n              job\n              createdAt\n              finishedAt\n              startedAt\n              exitCode\n            }\n            command\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":r.qt,"\n  query RepositoryList {\n    repositoryList {\n      id\n      name\n      kind\n      gitUrl\n      refs {\n        name\n        commit\n      }\n    }\n  }\n":r.HC,"\n  query RepositorySearch(\n    $kind: RepositoryKind!\n    $id: ID!\n    $rev: String\n    $pattern: String!\n  ) {\n    repositorySearch(kind: $kind, id: $id, rev: $rev, pattern: $pattern) {\n      type\n      path\n      indices\n    }\n  }\n":r.BH,"\n  query ContextInfo {\n    contextInfo {\n      sources {\n        id\n        sourceKind\n        sourceId\n        sourceName\n      }\n    }\n  }\n":r.w4,"\n  query UserGroups {\n    userGroups {\n      id\n      name\n      createdAt\n      updatedAt\n      members {\n        user {\n          id\n          email\n          name\n          createdAt\n        }\n        isGroupAdmin\n        createdAt\n        updatedAt\n      }\n    }\n  }\n":r.hx,"\n  query sourceIdAccessPolicies($sourceId: String!) {\n    sourceIdAccessPolicies(sourceId: $sourceId) {\n      sourceId\n      read {\n        id\n        name\n      }\n    }\n  }\n":r.NL,"\n  query ListThreadMessages(\n    $threadId: ID!\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    threadMessages(\n      threadId: $threadId\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          threadId\n          codeSourceId\n          role\n          content\n          attachment {\n            code {\n              gitUrl\n              commit\n              filepath\n              language\n              content\n              startLine\n            }\n            clientCode {\n              filepath\n              content\n              startLine\n            }\n            doc {\n              __typename\n              ... on MessageAttachmentWebDoc {\n                title\n                link\n                content\n              }\n              ... on MessageAttachmentIssueDoc {\n                title\n                link\n                author {\n                  id\n                  email\n                  name\n                }\n                body\n                closed\n              }\n              ... on MessageAttachmentPullDoc {\n                title\n                link\n                author {\n                  id\n                  email\n                  name\n                }\n                body\n                merged\n              }\n            }\n            codeFileList {\n              fileList\n            }\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":r.f7,"\n  mutation SetThreadPersisted($threadId: ID!) {\n    setThreadPersisted(threadId: $threadId)\n  }\n":r.qu,"\n  query Notifications {\n    notifications {\n      id\n      content\n      read\n      createdAt\n    }\n  }\n":r.Qw,"\n  query LdapCredential {\n    ldapCredential {\n      host\n      port\n      bindDn\n      baseDn\n      userFilter\n      encryption\n      skipTlsVerify\n      emailAttribute\n      nameAttribute\n      createdAt\n      updatedAt\n    }\n  }\n":r.Ee,"\n  query OAuthCredential($provider: OAuthProvider!) {\n    oauthCredential(provider: $provider) {\n      provider\n      clientId\n      createdAt\n      updatedAt\n    }\n  }\n":r.Fd,"\n  query RepositorySourceList {\n    repositoryList {\n      id\n      name\n      kind\n      gitUrl\n      sourceId\n      sourceName\n      sourceKind\n    }\n  }\n":r.mO,"\n  query ListPages(\n    $ids: [ID!]\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    pages(\n      ids: $ids\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          authorId\n          title\n          content\n          createdAt\n          updatedAt\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":r.fv,"\n  query ListPageSections(\n    $pageId: ID!\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    pageSections(\n      pageId: $pageId\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          pageId\n          title\n          content\n          position\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":r.$N};function a(n){var e;return null!==(e=i[n])&&void 0!==e?e:{}}},43240:function(n,e,t){t.d(e,{BX:function(){return r.B}});var r=t(75561)},28312:function(n,e,t){t.d(e,{m:function(){return o}});var r=t(3546),i=t(61200),a=t.n(i),s=t(2578);function o(n){let{timeout:e=2e3,onError:t,onCopyContent:i}=n,[o,d]=r.useState(!1),u=()=>{d(!0),setTimeout(()=>{d(!1)},e)},l=n=>{if("function"==typeof t){null==t||t(n);return}s.A.error("Failed to copy.")};return{isCopied:o,copyToClipboard:n=>{var e;if(n){if(i){i(n),u();return}if(null===(e=navigator.clipboard)||void 0===e?void 0:e.writeText)navigator.clipboard.writeText(n).then(u).catch(l);else{let e=a()(n);e?u():l()}}}}}},24449:function(n,e,t){t.d(e,{S:function(){return o},n:function(){return d}});var r=t(3546),i=t(45391),a=t(16784);let s=n=>{let e=(0,a.d)(n);r.useEffect(()=>()=>{e.current()},[])};function o(n,e,t){let o=(0,a.d)(n),d=r.useMemo(()=>(0,i.Z)(function(){for(var n=arguments.length,e=Array(n),t=0;t<n;t++)e[t]=arguments[t];return o.current(...e)},e,t),[]);return s(()=>{var n;null==t||null===(n=t.onUnmount)||void 0===n||n.call(t,d),d.cancel()}),{run:d,cancel:d.cancel,flush:d.flush}}function d(n,e,t){let[i,a]=r.useState(n),{run:s}=o(()=>{a(n)},e,t);return r.useEffect(()=>{s()},[n]),[i,a]}},16784:function(n,e,t){t.d(e,{d:function(){return i}});var r=t(3546);function i(n){let e=r.useRef(n);return e.current=n,e}},98454:function(n,e,t){t.d(e,{P:function(){return s}});var r=t(40055),i=t(43240);let a=(0,i.BX)("\n  query MeQuery {\n    me {\n      id\n      email\n      name\n      isAdmin\n      isOwner\n      authToken\n      isPasswordSet\n      isSsoUser\n    }\n  }\n"),s=()=>(0,r.aM)({query:a})},3765:function(n,e,t){t.d(e,{Z:function(){return d}});var r=t(44745),i=t(57778),a=t(79716),s=t(91302),o=t(66794);async function d(n,e){var t;let r=null!==(t=null==e?void 0:e.customFetch)&&void 0!==t?t:window.fetch;if(function(n){var e;if(n.startsWith("/oauth/providers"))return!1;let t=null===(e=(0,o.bW)())||void 0===e?void 0:e.accessToken;if(!t)return!0;try{let{exp:n}=(0,a.o)(t);return(0,o.pw)(n)}catch(n){return!0}}(n))return o.gN.refreshToken(u).then(t=>f(n,e));let i=await r(n,l(e));return 401===i.status?(o.gN.clearAccessToken(),o.gN.refreshToken(u).then(t=>f(n,e))):p(i,e)}async function u(){var n,e;let t=null===(n=(0,o.bW)())||void 0===n?void 0:n.refreshToken;if(!t)return;let r=await c(t);return null==r?void 0:null===(e=r.data)||void 0===e?void 0:e.refreshToken}function l(n){var e;let t=new Headers(null==n?void 0:n.headers);return t.append("authorization","Bearer ".concat(null===(e=(0,o.bW)())||void 0===e?void 0:e.accessToken)),{...n||{},headers:t}}async function c(n){let e=new r.KU({url:"/graphql",requestPolicy:"network-only",exchanges:[r.Ek]}),t=e.createRequestOperation("mutation",(0,i.h)(s.Dp,{refreshToken:n}));return e.executeMutation(t)}function f(n,e){var t;let r=null!==(t=null==e?void 0:e.customFetch)&&void 0!==t?t:window.fetch;return r(n,l(e)).then(n=>p(n,e))}function p(n,e){return(null==n?void 0:n.ok)?(null==e?void 0:e.responseFormatter)?e.responseFormatter(n):(null==e?void 0:e.responseFormat)==="blob"?n.blob():n.json():(null==e?void 0:e.errorHandler)?e.errorHandler(n):void 0}},11075:function(n,e,t){t.d(e,{eI:function(){return a},n0:function(){return s},uL:function(){return i}});var r=t(44494);let i="0.7.0";async function a(n,e){let t=(0,r.K9)(n,{expose:{refresh:e.refresh,onApplyInEditor:e.onApplyInEditor,onApplyInEditorV2:e.onApplyInEditorV2,onLoaded:e.onLoaded,onCopy:e.onCopy,onKeyboardEvent:e.onKeyboardEvent,lookupSymbol:e.lookupSymbol,openInEditor:e.openInEditor,openExternal:e.openExternal,readWorkspaceGitRepositories:e.readWorkspaceGitRepositories,getActiveEditorSelection:e.getActiveEditorSelection,fetchSessionState:e.fetchSessionState,storeSessionState:e.storeSessionState,listFileInWorkspace:e.listFileInWorkspace,readFileContent:e.readFileContent}}),i=await t._requestMethods(),a={};for(let n of i)a[n]=t[n];return a}async function s(n){let e=(0,r.cy)({expose:{init:n.init,executeCommand:n.executeCommand,showError:n.showError,cleanError:n.cleanError,addRelevantContext:n.addRelevantContext,updateTheme:n.updateTheme,updateActiveSelection:n.updateActiveSelection}}),t=await e._requestMethods(),i={};for(let n of t)i[n]=e[n];return i.hasCapability=e.hasCapability,i}},14439:function(n,e,t){t.d(e,{H:function(){return s},m:function(){return a}});var r=t(3546),i=t(11075);function a(n,e){let[t,a]=(0,r.useState)(null),s=!1;return(0,r.useEffect)(()=>{n.current&&!s&&(s=!0,(0,i.eI)(n.current,e).then(a))},[n.current]),t}function s(n){let[e,t]=(0,r.useState)(null),a=!1;return(0,r.useEffect)(()=>{let e=window.self!==window.top;e&&!a&&(a=!0,(0,i.n0)(n).then(t))},[]),e}t(44494)},44494:function(n,e,t){t.d(e,{K9:function(){return I},cy:function(){return y}});let r=Symbol.for("quilt.threads.retain"),i=Symbol.for("quilt.threads.release"),a=Symbol.for("quilt.threads.retained-by"),s=Symbol.for("quilt.threads.encode"),o=Symbol.for("quilt.threads.transferable");class d{memoryManaged=new Set;add(n){this.memoryManaged.add(n),n[a].add(this),n[r]()}release(){for(let n of this.memoryManaged)n[a].delete(this),n[i]();this.memoryManaged.clear()}}function u(n){return!!(n&&n[r]&&n[i])}function l(n){if(null==n||"object"!=typeof n)return!1;let e=Object.getPrototypeOf(n);return null==e||e===Object.prototype}function c(n,{expose:e,callable:t,signal:c,uuid:m=p,encoder:$=function({encode:n,decode:e}={}){return{encode:function(n,e){let r={api:e,seen:new Map,encode:n=>t(n,r,!0)};return t(n,r)},decode:function(n,e,t){let i={api:e,decode:n=>r(n,i,t,!0)};return r(n,i)}};function t(e,r,i=!1){let{seen:a,api:d,encode:u}=r;if(!i&&n)return n(e,u);if(null==e)return[e];let c=a.get(e);if(c)return c;if(a.set(e,[void 0]),"object"==typeof e){if(e[o]){let n=[e,[e]];return a.set(e,n),n}let n=[],i=e=>{let[i,a=[]]=t(e,r);return n.push(...a),i};if("function"==typeof e[s]){let t=e[s]({encode:i}),r=[t,n];return a.set(e,r),r}if(Array.isArray(e)){let t=e.map(n=>i(n)),r=[t,n];return a.set(e,r),r}if(e instanceof RegExp){let t={"_@r":[e.source,e.flags]},r=[t,n];return a.set(e,r),r}if(e instanceof URL){let t={"_@u":e.href},r=[t,n];return a.set(e,r),r}if(e instanceof Date){let t={"_@d":e.toISOString()},r=[t,n];return a.set(e,r),r}if(e instanceof Map){let t=[...e.entries()].map(([n,e])=>[i(n),i(e)]),r=[{"_@m":t},n];return a.set(e,r),r}if(e instanceof Set){let t=[...e].map(n=>i(n)),r=[{"_@s":t},n];return a.set(e,r),r}let d=null!=e&&(Symbol.asyncIterator in e||Symbol.iterator in e)&&"function"==typeof e.next;if(l(e)||d){let t={};for(let n of Object.keys(e))t[n]=i(e[n]);d&&(t.next??=i(e.next.bind(e)),t.return??=i(e.return.bind(e)),t.throw??=i(e.throw.bind(e)),t["_@i"]=!0);let r=[t,n];return a.set(e,r),r}}if("function"==typeof e){let n=d.functions?.add(e);if(null==n)return[n];let t=[{"_@f":n}];return a.set(e,t),t}let f=[e];return a.set(e,f),f}function r(n,t,i,a=!1){let{api:s,decode:o}=t;if(!a&&e)return e(n,o,i);if("object"==typeof n){if(null==n)return n;if(Array.isArray(n))return n.map(n=>r(n,t,i));if("_@r"in n)return new RegExp(...n["_@r"]);if("_@u"in n)return new URL(n["_@u"]);if("_@d"in n)return new Date(n["_@d"]);if("_@m"in n)return new Map(n["_@m"].map(([n,e])=>[r(n,t,i),r(e,t,i)]));if("_@s"in n)return new Set(n["_@s"].map(n=>r(n,t,i)));if("_@f"in n){let e=n["_@f"],t=s.functions?.get(e);if(i&&u(t))for(let n of i)n.add(t);return t}if(!l(n))return n;let e={};for(let a of Object.keys(n))"_@i"===a?e[Symbol.asyncIterator]=()=>e:e[a]=r(n[a],t,i);return e}return n}}()}={}){let g=!1,h=new Map,I=new Map,y=new Map,b=new Map;if(e)for(let n of Object.keys(e)){let t=e[n];"function"==typeof t&&h.set(n,t)}let v=new Map,S=function(n,e,t){let r;if(null==e){if("function"!=typeof Proxy)throw Error("You must pass an array of callable methods in environments without Proxies.");let e=new Map;r=new Proxy({},{get(r,i){if("then"===i)return;if("_requestMethods"===i)return t?._requestMethods;if(e.has(i))return e.get(i);let a=n(i);return e.set(i,a),a}})}else for(let t of(r={},e))Object.defineProperty(r,t,{value:n(t),writable:!1,configurable:!0,enumerable:!0});return r}(function(n){return(...e)=>{try{if(g)throw new f;if("string"!=typeof n&&"number"!=typeof n)throw Error(`Can’t call a symbol method on a thread: ${n.toString()}`);if("hasCapability"===n){let n=e[0],t=m(),r=P(t);return C(7,[t,n]),r}let t=m(),r=P(t),[i,a]=$.encode(e,A);return C(0,[t,n,i],a),r}catch(n){return Promise.reject(n)}}},t,{_requestMethods:T}),A={functions:{add(n){let e=I.get(n);return null==e&&(e=m(),I.set(n,e),y.set(e,n)),e},get(n){let e=b.get(n);if(e)return e;let t=0,s=!1;return Object.defineProperties(e=(...e)=>{if(s)throw Error("You attempted to call a function that was already released.");if(!b.has(n))throw Error("You attempted to call a function that was already revoked.");let[t,r]=$.encode(e,A),i=m(),a=P(i);return C(5,[i,n,t],r),a},{[i]:{value:()=>{0==(t-=1)&&(s=!0,b.delete(n),C(3,[n]))},writable:!1},[r]:{value:()=>{t+=1},writable:!1},[a]:{value:new Set,writable:!1}}),b.set(n,e),e}}},w=()=>{if(!g){for(let n of v.keys())D(n,new f);g=!0,h.clear(),v.clear(),I.clear(),y.clear(),b.clear()}};return c?.addEventListener("abort",()=>{C(2,[]),w()},{once:!0}),n.listen(k,{signal:c}),S;function C(e,t,r){g||n.send([e,t],r)}async function k(n){let e=Array.isArray(n)&&"number"==typeof n[0]&&(null==n[1]||Array.isArray(n[1]));if(e)switch(n[0]){case 2:w();break;case 0:{let e=new d,[t,r,i]=n[1],a=h.get(r);try{if(null==a)throw Error(`No '${r}' method is exposed on this endpoint`);let n=await a(...$.decode(i,A,[e])),[s,o]=$.encode(n,A);C(1,[t,void 0,s],o)}catch(i){let{name:n,message:e,stack:r}=i;C(1,[t,{name:n,message:e,stack:r}])}finally{e.release()}break}case 1:case 6:D(...n[1]);break;case 3:{let[e]=n[1],t=y.get(e);t&&(y.delete(e),I.delete(t));break}case 5:{let[e,t,r]=n[1],i=new d;try{let n=y.get(t);if(null==n)throw Error("You attempted to call a function that was already released.");let s=await n(...$.decode(r,A,u(n)?[...n[a],i]:[i])),[o,d]=$.encode(s,A);C(6,[e,void 0,o],d)}catch(i){let{name:n,message:t,stack:r}=i;C(6,[e,{name:n,message:t,stack:r}])}finally{i.release()}break}case 7:{let[e,t]=n[1],r=h.has(t);C(1,[e,void 0,$.encode(r,A)[0]]);break}case 8:{let[e]=n[1],t=Array.from(h.keys());C(1,[e,void 0,$.encode(t,A)[0]])}}}function P(n){let e=new Promise((e,t)=>{v.set(n,(n,r,i)=>{if(null==r)e($.decode(i,A));else{let n=Error();Object.assign(n,r),t(n)}})});return Object.defineProperty(e,Symbol.asyncIterator,{async *value(){let n=await e;Object.defineProperty(n,Symbol.asyncIterator,{value:()=>n}),yield*n}}),e}function D(...n){let e=n[0],t=v.get(e);t&&(t(...n),v.delete(e))}async function T(){let n=m(),e=P(n);return C(8,[n]),e}}class f extends Error{constructor(){super("You attempted to call a function on a terminated thread.")}}function p(){return`${m()}-${m()}-${m()}-${m()}`}function m(){return Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16)}var $=t(18400);let g="quilt.threads.ping",h="quilt.threads.pong";function I(n,{targetOrigin:e="*",...t}={}){let r=!1,i=function(t,r){n.contentWindow?.postMessage(t,e,r)},a=new Promise(e=>{let a=t.signal?new $.z(t.signal):new AbortController;window.addEventListener("message",t=>{t.source===n.contentWindow&&t.data===h&&(r=!0,a.abort(),e())},{signal:a.signal}),a.signal.addEventListener("abort",()=>{e()},{once:!0}),i(g)});return c({send:(n,e)=>r?i(n,e):a.then(()=>{if(r)return i(n,e)}),listen(e,{signal:t}){self.addEventListener("message",t=>{t.source===n.contentWindow&&t.data!==h&&e(t.data)},{signal:t})}},t)}function y({targetOrigin:n="*",...e}={}){if("undefined"==typeof self||null==self.parent)throw Error("You are not inside an iframe, because there is no parent window.");let{parent:t}=self,r=e.signal?new $.z(e.signal):new AbortController,i=()=>{let r=()=>t.postMessage(h,n);self.addEventListener("message",({data:n})=>{n===g&&r()},{signal:e.signal}),r()};return"complete"===document.readyState?i():document.addEventListener("readystatechange",()=>{"complete"===document.readyState&&(i(),r.abort())},{signal:r.signal}),c({send:(e,r)=>t.postMessage(e,n,r),listen(n,{signal:e}){self.addEventListener("message",e=>{e.data!==g&&n(e.data)},{signal:e})}},e)}}}]);