(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[6807],{98641:function(n,e,t){"use strict";t.d(e,{j:function(){return r}});let i=n=>"boolean"==typeof n?"".concat(n):0===n?"0":n,a=function(){for(var n=arguments.length,e=Array(n),t=0;t<n;t++)e[t]=arguments[t];return e.flat(1/0).filter(Boolean).join(" ")},r=(n,e)=>t=>{var r;if((null==e?void 0:e.variants)==null)return a(n,null==t?void 0:t.class,null==t?void 0:t.className);let{variants:s,defaultVariants:o}=e,d=Object.keys(s).map(n=>{let e=null==t?void 0:t[n],a=null==o?void 0:o[n];if(null===e)return null;let r=i(e)||i(a);return s[n][r]}),u=t&&Object.entries(t).reduce((n,e)=>{let[t,i]=e;return void 0===i||(n[t]=i),n},{}),c=null==e?void 0:null===(r=e.compoundVariants)||void 0===r?void 0:r.reduce((n,e)=>{let{class:t,className:i,...a}=e;return Object.entries(a).every(n=>{let[e,t]=n;return Array.isArray(t)?t.includes({...o,...u}[e]):({...o,...u})[e]===t})?[...n,t,i]:n},[]);return a(n,d,c,null==t?void 0:t.class,null==t?void 0:t.className)}},99656:function(n,e,t){Promise.resolve().then(t.bind(t,69145)),Promise.resolve().then(t.bind(t,57830))},69145:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return f}});var i=t(36164),a=t(3546),r=t(70652),s=t.n(r),o=t(11978),d=t(98641),u=t(73492),c=t(63795),l=t(30601),m=t(90155),g=t(11529);let p=(0,d.j)("flex items-center gap-1 rounded-lg px-3 py-2 transition-all hover:bg-accent",{variants:{state:{selected:"bg-accent","not-selected":""}},defaultVariants:{state:"not-selected"}});function f(n){let{className:e}=n,[t]=(0,l.Hb)(),[a]=(0,m.useShowLicenseBanner)();return(0,i.jsxs)("div",{className:(0,u.cn)("sticky top-16 space-y-1 overflow-y-auto border-r pr-4 text-sm font-medium",e),style:t||a?{height:"calc(100vh - ".concat(t&&a?"7rem":"3.5rem"," - 4rem)")}:{height:"calc(100vh - 4rem)"},children:[(0,i.jsx)(h,{href:"/settings/providers/git",children:"Git"}),g.K.map(n=>(0,i.jsx)(h,{href:"/settings/providers/".concat(n.name),children:n.meta.displayName},n.name)),(0,i.jsxs)(h,{href:"/settings/providers/doc",children:["Developer Docs",(0,i.jsx)(c.C,{variant:"outline",className:"h-3.5 border-secondary-foreground/60 px-1.5 text-[10px] text-secondary-foreground/60",children:"Beta"})]})]})}function h(n){let{href:e,children:t}=n,r=(0,o.usePathname)(),d=a.useMemo(()=>{var n;let t="/settings/providers/doc";if(null==r?void 0:r.startsWith(t))return e.startsWith(t);let i=null===(n=r.match(/^(\/settings\/providers\/[\w-]+)/))||void 0===n?void 0:n[1];return i===e},[r,e]);return(0,i.jsx)(s(),{className:p({state:d?"selected":"not-selected"}),href:e,children:t})}},11529:function(n,e,t){"use strict";t.d(e,{K:function(){return a}});var i=t(18500);let a=[{name:"github",enum:i.q6.Github,meta:{displayName:"GitHub"}},{name:"github-self-hosted",enum:i.q6.GithubSelfHosted,meta:{displayName:"GitHub Self-Hosted"}},{name:"gitlab",enum:i.q6.Gitlab,meta:{displayName:"GitLab"}},{name:"gitlab-self-hosted",enum:i.q6.GitlabSelfHosted,meta:{displayName:"GitLab Self-Hosted"}}]},30601:function(n,e,t){"use strict";t.d(e,{Hb:function(){return g},wt:function(){return c},xc:function(){return p},yo:function(){return m}});var i=t(36164),a=t(3546),r=t(74630),s=t(36327),o=t(80605),d=t(73492),u=t(81565);let c="3.5rem",l=a.createContext({}),m=n=>{let{children:e}=n,t=(0,o.UA)(),[s,d]=a.useState(!1);return a.useEffect(()=>{let n=window.self!==window.top;n||(0,r.Z)(t)||d(t)},[t]),(0,i.jsx)(l.Provider,{value:{isShowDemoBanner:s,setIsShowDemoBanner:d},children:e})};function g(){let{isShowDemoBanner:n,setIsShowDemoBanner:e}=a.useContext(l);return[n,e]}function p(){let[n,e]=g(),{data:t}=(0,s.Z)("https://api.github.com/repos/TabbyML/tabby",n=>fetch(n).then(n=>n.json()));return(0,i.jsxs)("div",{className:(0,d.cn)("flex items-center justify-between bg-primary px-4 text-primary-foreground transition-[opacity,height] md:px-5",{"opacity-100 pointer-events-auto":n,"opacity-0 pointer-events-none":!n}),style:n?{height:c}:{height:0},children:[(0,i.jsxs)("a",{href:"https://links.tabbyml.com/schedule-a-demo",target:"_blank",className:"flex items-center gap-x-2 text-xs font-semibold underline md:text-sm",children:[(0,i.jsx)("span",{children:"\uD83D\uDCC6"}),(0,i.jsx)("span",{children:"Book a 30-minute product demo."})]}),n&&(0,i.jsx)("img",{referrerPolicy:"no-referrer-when-downgrade",src:"https://static.scarf.sh/a.png?x-pxid=b1d0308a-b3c5-425a-972a-378d883a2bca"}),(0,i.jsxs)("div",{className:"flex items-center gap-x-4 md:gap-x-8",children:[(0,i.jsxs)("a",{href:"https://github.com/TabbyML/tabby",target:"_blank",className:"flex items-center transition-all hover:opacity-70",children:[(0,i.jsx)(u.IconGithub,{}),(0,i.jsxs)("div",{className:"ml-2 hidden md:block",children:[(0,i.jsx)("p",{className:"text-xs font-semibold",children:"TabbyML/tabby"}),(0,i.jsxs)("div",{className:(0,d.cn)("flex items-center text-xs transition-all",{"h-4 opacity-70":t,"h-0 opacity-0":!t}),children:[(0,i.jsx)(u.IconStar,{className:"mr-1 h-2.5 w-2.5"}),(0,i.jsx)("span",{children:null==t?void 0:t.stargazers_count}),(0,i.jsx)(u.IconGitFork,{className:"ml-2 mr-1 h-2.5 w-2.5"}),(0,i.jsx)("span",{children:null==t?void 0:t.forks_count})]})]})]}),(0,i.jsx)(u.IconClose,{className:"cursor-pointer transition-all hover:opacity-70",onClick:()=>e(!1)})]})]})}},90155:function(n,e,t){"use strict";t.r(e),t.d(e,{BANNER_HEIGHT:function(){return m},LicenseBanner:function(){return h},ShowLicenseBannerProvider:function(){return p},useShowLicenseBanner:function(){return f}});var i=t(36164),a=t(3546),r=t(70652),s=t.n(r),o=t(11978),d=t(29917),u=t(73492),c=t(81565),l=t(31458);let m="3.5rem",g=a.createContext({}),p=n=>{let{children:e}=n,{isExpired:t,isSeatsExceeded:r,isLicenseOK:s}=(0,d.Cz)(),[o,u]=a.useState(!1);return a.useEffect(()=>{let n=window.self!==window.top;!n&&(t||r?u(!0):s&&u(!1))},[s,t,r]),(0,i.jsx)(g.Provider,{value:{isShowLicenseBanner:o,setIsShowLicenseBanner:u},children:e})};function f(){let{isShowLicenseBanner:n,setIsShowLicenseBanner:e}=a.useContext(g);return[n,e]}function h(){let[n,e]=f(),{isExpired:t,isSeatsExceeded:r}=(0,d.Cz)(),g=(0,o.usePathname)(),p=(0,a.useMemo)(()=>t?"Your subscription is expired.":r?"You have more active users than seats included in your subscription.":"No valid license configured",[t,r]);return(0,i.jsxs)("div",{className:(0,u.cn)("flex items-center justify-between bg-secondary px-4 text-secondary-foreground transition-[height,opacity] md:px-5",{"opacity-100 pointer-events-auto border-b":n,"opacity-0 pointer-events-none":!n}),style:n?{height:m}:{height:0},children:[(0,i.jsxs)("div",{className:"flex items-center gap-1 font-semibold text-destructive",children:[(0,i.jsx)(c.IconNotice,{}),p]}),(0,i.jsxs)("div",{className:"flex items-center gap-x-4 md:gap-x-8",children:["/settings/subscription"!==g&&(0,i.jsx)(s(),{href:"/settings/subscription",className:(0,u.cn)((0,l.d)(),"gap-1"),children:"See more"}),(0,i.jsx)(c.IconClose,{className:"cursor-pointer transition-all hover:opacity-70",onClick:()=>e(!1)})]})]})}},63795:function(n,e,t){"use strict";t.d(e,{C:function(){return o}});var i=t(36164);t(3546);var a=t(98641),r=t(73492);let s=(0,a.j)("inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2",{variants:{variant:{default:"border-transparent bg-primary text-primary-foreground hover:bg-primary/80",secondary:"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80",destructive:"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80",successful:"border-transparent bg-successful text-successful-foreground hover:bg-successful/80",outline:"text-foreground"}},defaultVariants:{variant:"default"}});function o(n){let{className:e,variant:t,...a}=n;return(0,i.jsx)("div",{className:(0,r.cn)(s({variant:t}),e),...a})}},31458:function(n,e,t){"use strict";t.d(e,{d:function(){return d},z:function(){return u}});var i=t(36164),a=t(3546),r=t(74047),s=t(98641),o=t(73492);let d=(0,s.j)("inline-flex items-center justify-center rounded-md text-sm font-medium shadow ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50",{variants:{variant:{default:"bg-primary text-primary-foreground shadow-md hover:bg-primary/90",destructive:"bg-destructive text-destructive-foreground hover:bg-destructive/90","hover-destructive":"shadow-none hover:bg-destructive/90 hover:text-destructive-foreground",outline:"border border-input hover:bg-accent hover:text-accent-foreground",secondary:"bg-secondary text-secondary-foreground hover:bg-secondary/80",ghost:"shadow-none hover:bg-accent hover:text-accent-foreground",link:"text-primary underline-offset-4 shadow-none hover:underline"},size:{default:"h-8 px-4 py-2",sm:"h-8 rounded-md px-3",lg:"h-11 rounded-md px-8",icon:"h-8 w-8 p-0"}},defaultVariants:{variant:"default",size:"default"}}),u=a.forwardRef((n,e)=>{let{className:t,variant:a,size:s,asChild:u=!1,...c}=n,l=u?r.g7:"button";return(0,i.jsx)(l,{className:(0,o.cn)(d({variant:a,size:s,className:t})),ref:e,...c})});u.displayName="Button"},57830:function(n,e,t){"use strict";t.r(e),t.d(e,{ScrollArea:function(){return o},ScrollBar:function(){return d}});var i=t(36164),a=t(3546),r=t(86102),s=t(73492);let o=a.forwardRef((n,e)=>{let{className:t,children:a,...o}=n;return(0,i.jsxs)(r.fC,{className:(0,s.cn)("relative overflow-hidden",t),...o,children:[(0,i.jsx)(r.l_,{ref:e,className:"h-full w-full rounded-[inherit] [&>div]:!block",children:a}),(0,i.jsx)(d,{}),(0,i.jsx)(r.Ns,{})]})});o.displayName=r.fC.displayName;let d=a.forwardRef((n,e)=>{let{className:t,orientation:a="vertical",...o}=n;return(0,i.jsx)(r.gb,{ref:e,orientation:a,className:(0,s.cn)("flex touch-none select-none transition-colors","vertical"===a&&"h-full w-2.5 border-l border-l-transparent p-[1px]","horizontal"===a&&"h-2.5 flex-col border-t border-t-transparent p-[1px]",t),...o,children:(0,i.jsx)(r.q4,{className:"relative flex-1 rounded-full bg-border"})})});d.displayName=r.gb.displayName},75561:function(n,e,t){"use strict";t.d(e,{B:function(){return r}});var i=t(18500);let a={"\n  query ListUserEvents(\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n    $start: DateTime!\n    $end: DateTime!\n    $users: [ID!]\n  ) {\n    userEvents(\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n      start: $start\n      end: $end\n      users: $users\n    ) {\n      edges {\n        node {\n          id\n          userId\n          createdAt\n          kind\n          payload\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":i.UQ,"\n  mutation uploadUserAvatarBase64($id: ID!, $avatarBase64: String!) {\n    uploadUserAvatarBase64(id: $id, avatarBase64: $avatarBase64)\n  }\n":i.eI,"\n  mutation UpdateUserName($id: ID!, $name: String!) {\n    updateUserName(id: $id, name: $name)\n  }\n":i.DQ,"\n  mutation PasswordChange($input: PasswordChangeInput!) {\n    passwordChange(input: $input)\n  }\n":i.oZ,"\n  mutation updateEmailSetting($input: EmailSettingInput!) {\n    updateEmailSetting(input: $input)\n  }\n":i.gl,"\n  mutation deleteEmailSetting {\n    deleteEmailSetting\n  }\n":i.wZ,"\n  mutation SendTestEmail($to: String!) {\n    sendTestEmail(to: $to)\n  }\n":i.nI,"\n  query emailSetting {\n    emailSetting {\n      smtpUsername\n      smtpServer\n      fromAddress\n      encryption\n      authMethod\n      smtpPort\n    }\n  }\n":i.k6,"\n  mutation UpdateIntegration($input: UpdateIntegrationInput!) {\n    updateIntegration(input: $input)\n  }\n":i.fc,"\n  mutation DeleteIntegration($id: ID!, $kind: IntegrationKind!) {\n    deleteIntegration(id: $id, kind: $kind)\n  }\n":i.AU,"\n  mutation UpdateIntegratedRepositoryActive($id: ID!, $active: Boolean!) {\n    updateIntegratedRepositoryActive(id: $id, active: $active)\n  }\n":i.o7,"\n  mutation CreateIntegration($input: CreateIntegrationInput!) {\n    createIntegration(input: $input)\n  }\n":i.fY,"\n  mutation grantSourceIdReadAccess($sourceId: String!, $userGroupId: ID!) {\n    grantSourceIdReadAccess(sourceId: $sourceId, userGroupId: $userGroupId)\n  }\n":i.Yr,"\n  mutation revokeSourceIdReadAccess($sourceId: String!, $userGroupId: ID!) {\n    revokeSourceIdReadAccess(sourceId: $sourceId, userGroupId: $userGroupId)\n  }\n":i.z,"\n  mutation CreateCustomDocument($input: CreateCustomDocumentInput!) {\n    createCustomDocument(input: $input)\n  }\n":i.Gf,"\n  query CustomWebDocuments(\n    $ids: [ID!]\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    customWebDocuments(\n      ids: $ids\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          url\n          name\n          id\n          sourceId\n          jobInfo {\n            lastJobRun {\n              id\n              job\n              createdAt\n              finishedAt\n              exitCode\n            }\n            command\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":i.wx,"\n  mutation DeleteCustomDocument($id: ID!) {\n    deleteCustomDocument(id: $id)\n  }\n":i.c3,"\n  query PresetWebDocuments(\n    $ids: [ID!]\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n    $isActive: Boolean\n  ) {\n    presetWebDocuments(\n      ids: $ids\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n      isActive: $isActive\n    ) {\n      edges {\n        node {\n          id\n          name\n          isActive\n          sourceId\n          jobInfo {\n            lastJobRun {\n              id\n              job\n              createdAt\n              finishedAt\n              exitCode\n            }\n            command\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":i.z1,"\n  mutation SetPresetDocumentActive($input: SetPresetDocumentActiveInput!) {\n    setPresetDocumentActive(input: $input)\n  }\n":i.h_,"\n  mutation deleteGitRepository($id: ID!) {\n    deleteGitRepository(id: $id)\n  }\n":i.TS,"\n  mutation createGitRepository($name: String!, $gitUrl: String!) {\n    createGitRepository(name: $name, gitUrl: $gitUrl)\n  }\n":i.ad,"\n  mutation triggerJobRun($command: String!) {\n    triggerJobRun(command: $command)\n  }\n":i.uk,"\n  mutation testLdapConnection($input: UpdateLdapCredentialInput!) {\n    testLdapConnection(input: $input)\n  }\n":i.rL,"\n  mutation updateLdapCredential($input: UpdateLdapCredentialInput!) {\n    updateLdapCredential(input: $input)\n  }\n":i.xn,"\n  mutation deleteLdapCredential {\n    deleteLdapCredential\n  }\n":i.X6,"\n  mutation updateOauthCredential($input: UpdateOAuthCredentialInput!) {\n    updateOauthCredential(input: $input)\n  }\n":i.m,"\n  mutation deleteOauthCredential($provider: OAuthProvider!) {\n    deleteOauthCredential(provider: $provider)\n  }\n":i.ZH,"\n  query OAuthCallbackUrl($provider: OAuthProvider!) {\n    oauthCallbackUrl(provider: $provider)\n  }\n":i.L$,"\n  mutation updateNetworkSettingMutation($input: NetworkSettingInput!) {\n    updateNetworkSetting(input: $input)\n  }\n":i.rN,"\n  mutation updateSecuritySetting($input: SecuritySettingInput!) {\n    updateSecuritySetting(input: $input)\n  }\n":i.Nl,"\n  query SecuritySetting {\n    securitySetting {\n      allowedRegisterDomainList\n      disableClientSideTelemetry\n      disablePasswordLogin\n    }\n  }\n":i.rU,"\n  mutation UploadLicense($license: String!) {\n    uploadLicense(license: $license)\n  }\n":i.Yo,"\n  mutation ResetLicense {\n    resetLicense\n  }\n":i.d0,"\n  mutation CreateInvitation($email: String!) {\n    createInvitation(email: $email)\n  }\n":i.ib,"\n  mutation DeleteInvitation($id: ID!) {\n    deleteInvitation(id: $id)\n  }\n":i.YM,"\n  mutation updateUserRole($id: ID!, $isAdmin: Boolean!) {\n    updateUserRole(id: $id, isAdmin: $isAdmin)\n  }\n":i.XF,"\n  mutation UpdateUserActive($id: ID!, $active: Boolean!) {\n    updateUserActive(id: $id, active: $active)\n  }\n":i.dv,"\n  mutation generateResetPasswordUrl($userId: ID!) {\n    generateResetPasswordUrl(userId: $userId)\n  }\n":i.nh,"\n  mutation createUserGroup($input: CreateUserGroupInput!) {\n    createUserGroup(input: $input)\n  }\n":i.e8,"\n  mutation DeleteUserGroupMembership($userGroupId: ID!, $userId: ID!) {\n    deleteUserGroupMembership(userGroupId: $userGroupId, userId: $userId)\n  }\n":i.zD,"\n  mutation UpsertUserGroupMembership($input: UpsertUserGroupMembershipInput!) {\n    upsertUserGroupMembership(input: $input)\n  }\n":i.uI,"\n  mutation DeleteUserGroup($id: ID!) {\n    deleteUserGroup(id: $id)\n  }\n":i.hQ,"\n  query GetRegistrationToken {\n    registrationToken\n  }\n":i.bh,"\n  mutation ResetRegistrationToken {\n    resetRegistrationToken\n  }\n":i.wW,"\n  query ingestionStatus($sources: [String!]) {\n    ingestionStatus(sources: $sources) {\n      source\n      pending\n      failed\n      total\n    }\n  }\n":i.lr,"\n  query GetDiskUsageStats {\n    diskUsageStats {\n      events {\n        filepath\n        sizeKb\n      }\n      indexedRepositories {\n        filepath\n        sizeKb\n      }\n      database {\n        filepath\n        sizeKb\n      }\n      models {\n        filepath\n        sizeKb\n      }\n    }\n  }\n":i.xX,"\n  query TestModelConnection($backend: ModelHealthBackend!) {\n    testModelConnection(backend: $backend) {\n      latencyMs\n    }\n  }\n":i.rE,"\n  query readRepositoryRelatedQuestions($sourceId: String!) {\n    readRepositoryRelatedQuestions(sourceId: $sourceId)\n  }\n":i.pu,"\n  mutation passwordReset($input: PasswordResetInput!) {\n    passwordReset(input: $input)\n  }\n":i.vK,"\n  mutation tokenAuthLdap($userId: String!, $password: String!) {\n    tokenAuthLdap(userId: $userId, password: $password) {\n      accessToken\n      refreshToken\n    }\n  }\n":i.Wv,"\n  mutation requestPasswordResetEmail($input: RequestPasswordResetEmailInput!) {\n    requestPasswordResetEmail(input: $input)\n  }\n":i.i8,"\n  mutation requestInvitationEmail($input: RequestInvitationInput!) {\n    requestInvitationEmail(input: $input) {\n      email\n      code\n    }\n  }\n":i.S_,"\n  query authProviders {\n    authProviders {\n      kind\n    }\n  }\n":i.c1,"\n  mutation tokenAuth($email: String!, $password: String!) {\n    tokenAuth(email: $email, password: $password) {\n      accessToken\n      refreshToken\n    }\n  }\n":i.UO,"\n  mutation register(\n    $name: String!\n    $email: String!\n    $password1: String!\n    $password2: String!\n    $invitationCode: String\n  ) {\n    register(\n      name: $name\n      email: $email\n      password1: $password1\n      password2: $password2\n      invitationCode: $invitationCode\n    ) {\n      accessToken\n      refreshToken\n    }\n  }\n":i.YR,"\n  query RepositoryGrep(\n    $id: ID!\n    $kind: RepositoryKind!\n    $rev: String\n    $query: String!\n  ) {\n    repositoryGrep(kind: $kind, id: $id, rev: $rev, query: $query) {\n      files {\n        path\n        lines {\n          line {\n            text\n            base64\n          }\n          byteOffset\n          lineNumber\n          subMatches {\n            bytesStart\n            bytesEnd\n          }\n        }\n      }\n      elapsedMs\n    }\n  }\n":i.lq,"\n  mutation DeletePage($id: ID!) {\n    deletePage(id: $id)\n  }\n":i.$Q,"\n  mutation updatePageContent($input: UpdatePageContentInput!) {\n    updatePageContent(input: $input)\n  }\n":i.N1,"\n  mutation updatePageTitle($input: UpdatePageTitleInput!) {\n    updatePageTitle(input: $input)\n  }\n":i.vV,"\n  mutation updatePageSectionContent($input: UpdatePageSectionContentInput!) {\n    updatePageSectionContent(input: $input)\n  }\n":i.jG,"\n  mutation updatePageSectionTitle($input: UpdatePageSectionTitleInput!) {\n    updatePageSectionTitle(input: $input)\n  }\n":i.nT,"\n  subscription createThreadToPageRun($input: CreateThreadToPageRunInput!) {\n    createThreadToPageRun(input: $input) {\n      __typename\n      ... on PageCreated {\n        id\n        authorId\n        title\n        debugData {\n          __typename\n          generatePageTitleMessages {\n            role\n            content\n          }\n        }\n      }\n      ... on PageContentDelta {\n        delta\n      }\n      ... on PageContentCompleted {\n        id\n      }\n      ... on PageSectionsCreated {\n        sections {\n          id\n          position\n          title\n        }\n        debugData {\n          __typename\n          generateSectionTitlesMessages {\n            role\n            content\n          }\n        }\n      }\n      ... on PageSectionAttachmentCodeFileList {\n        id\n        codeFileList {\n          __typename\n          fileList\n          truncated\n        }\n      }\n      ... on PageSectionAttachmentCode {\n        id\n        codes {\n          code {\n            __typename\n            gitUrl\n            commit\n            filepath\n            language\n            content\n            startLine\n          }\n          scores {\n            rrf\n            bm25\n            embedding\n          }\n        }\n        debugData {\n          sourceId\n          query\n        }\n      }\n      ... on PageSectionAttachmentDoc {\n        id\n        doc {\n          doc {\n            __typename\n            ... on AttachmentWebDoc {\n              title\n              link\n              content\n            }\n            ... on AttachmentIssueDoc {\n              title\n              link\n              author {\n                id\n                email\n                name\n              }\n              body\n              closed\n            }\n            ... on AttachmentPullDoc {\n              title\n              link\n              author {\n                id\n                email\n                name\n              }\n              body\n              merged\n            }\n            ... on AttachmentCommitDoc {\n              sha\n              message\n              author {\n                id\n                email\n                name\n              }\n              authorAt\n            }\n            ... on AttachmentPageDoc {\n              link\n              title\n              content\n            }\n            ... on AttachmentIngestedDoc {\n              id\n              title\n              body\n              ingestedDocLink: link\n            }\n          }\n          score\n        }\n        debugData {\n          sourceIds\n          query\n        }\n      }\n      ... on PageSectionContentDelta {\n        id\n        delta\n      }\n      ... on PageSectionContentCompleted {\n        id\n        debugData {\n          __typename\n          generateSectionContentMessages {\n            role\n            content\n          }\n        }\n      }\n      ... on PageCompleted {\n        id\n      }\n    }\n  }\n":i.dQ,"\n  subscription createPageRun($input: CreatePageRunInput!) {\n    createPageRun(input: $input) {\n      __typename\n      ... on PageCreated {\n        id\n        authorId\n        title\n        debugData {\n          __typename\n          generatePageTitleMessages {\n            role\n            content\n          }\n        }\n      }\n      ... on PageContentDelta {\n        delta\n      }\n      ... on PageContentCompleted {\n        id\n        debugData {\n          __typename\n          generatePageContentMessages {\n            role\n            content\n          }\n        }\n      }\n      ... on PageSectionsCreated {\n        sections {\n          id\n          position\n          title\n        }\n        debugData {\n          __typename\n          generateSectionTitlesMessages {\n            role\n            content\n          }\n        }\n      }\n      ... on PageSectionAttachmentCodeFileList {\n        id\n        codeFileList {\n          __typename\n          fileList\n          truncated\n        }\n      }\n      ... on PageSectionAttachmentCode {\n        id\n        codes {\n          code {\n            __typename\n            gitUrl\n            commit\n            filepath\n            language\n            content\n            startLine\n          }\n          scores {\n            rrf\n            bm25\n            embedding\n          }\n        }\n        debugData {\n          sourceId\n          query\n        }\n      }\n      ... on PageSectionAttachmentDoc {\n        id\n        doc {\n          doc {\n            __typename\n            ... on AttachmentWebDoc {\n              title\n              link\n              content\n            }\n            ... on AttachmentIssueDoc {\n              title\n              link\n              author {\n                id\n                email\n                name\n              }\n              body\n              closed\n            }\n            ... on AttachmentPullDoc {\n              title\n              link\n              author {\n                id\n                email\n                name\n              }\n              body\n              merged\n            }\n            ... on AttachmentCommitDoc {\n              sha\n              message\n              author {\n                id\n                email\n                name\n              }\n              authorAt\n            }\n            ... on AttachmentPageDoc {\n              link\n              title\n              content\n            }\n            ... on AttachmentIngestedDoc {\n              id\n              title\n              body\n              ingestedDocLink: link\n            }\n          }\n          score\n        }\n        debugData {\n          sourceIds\n          query\n        }\n      }\n      ... on PageSectionContentDelta {\n        id\n        delta\n      }\n      ... on PageSectionContentCompleted {\n        id\n        debugData {\n          __typename\n          generateSectionContentMessages {\n            role\n            content\n          }\n        }\n      }\n      ... on PageCompleted {\n        id\n      }\n    }\n  }\n":i.BX,"\n  subscription createPageSectionRun($input: CreatePageSectionRunInput!) {\n    createPageSectionRun(input: $input) {\n      __typename\n      ... on PageSectionCreated {\n        id\n        title\n        position\n        debugData {\n          __typename\n          generateSectionTitlesMessages {\n            role\n            content\n          }\n        }\n      }\n      ... on PageSectionAttachmentCodeFileList {\n        id\n        codeFileList {\n          fileList\n          truncated\n        }\n      }\n      ... on PageSectionAttachmentCode {\n        id\n        codes {\n          code {\n            __typename\n            gitUrl\n            commit\n            filepath\n            language\n            content\n            startLine\n          }\n          scores {\n            rrf\n            bm25\n            embedding\n          }\n        }\n        debugData {\n          sourceId\n          query\n        }\n      }\n      ... on PageSectionAttachmentDoc {\n        id\n        doc {\n          doc {\n            __typename\n            ... on AttachmentWebDoc {\n              title\n              link\n              content\n            }\n            ... on AttachmentIssueDoc {\n              title\n              link\n              author {\n                id\n                email\n                name\n              }\n              body\n              closed\n            }\n            ... on AttachmentPullDoc {\n              title\n              link\n              author {\n                id\n                email\n                name\n              }\n              body\n              merged\n            }\n            ... on AttachmentCommitDoc {\n              sha\n              message\n              author {\n                id\n                email\n                name\n              }\n              authorAt\n            }\n            ... on AttachmentPageDoc {\n              link\n              title\n              content\n            }\n            ... on AttachmentIngestedDoc {\n              id\n              title\n              body\n              ingestedDocLink: link\n            }\n          }\n          score\n        }\n        debugData {\n          sourceIds\n          query\n        }\n      }\n      ... on PageSectionContentDelta {\n        id\n        delta\n      }\n      ... on PageSectionContentCompleted {\n        id\n        debugData {\n          __typename\n          generateSectionContentMessages {\n            role\n            content\n          }\n        }\n      }\n    }\n  }\n":i.js,"\n  mutation DeletePageSection($sectionId: ID!) {\n    deletePageSection(sectionId: $sectionId)\n  }\n":i.$g,"\n  mutation movePageSection($id: ID!, $direction: MoveSectionDirection!) {\n    movePageSection(id: $id, direction: $direction)\n  }\n":i.nA,"\n  mutation UpdateThreadMessage($input: UpdateMessageInput!) {\n    updateThreadMessage(input: $input)\n  }\n":i.Tj,"\n  mutation markNotificationsRead($notificationId: ID) {\n    markNotificationsRead(notificationId: $notificationId)\n  }\n":i.yR,"\n  mutation ResetUserAuthToken {\n    resetUserAuthToken\n  }\n":i.qq,"\n  query GetLicenseInfo {\n    license {\n      type\n      status\n      seats\n      seatsUsed\n      issuedAt\n      expiresAt\n    }\n  }\n":i.eZ,"\n  query MeQuery {\n    me {\n      id\n      email\n      name\n      isAdmin\n      isOwner\n      authToken\n      isPasswordSet\n      isSsoUser\n    }\n  }\n":i.fk,"\n  query NetworkSetting {\n    networkSetting {\n      externalUrl\n    }\n  }\n":i.m2,"\n  query GetServerInfo {\n    serverInfo {\n      isAdminInitialized\n      isEmailConfigured\n      isChatEnabled\n      allowSelfSignup\n      isDemoMode\n      disablePasswordLogin\n    }\n  }\n":i.a,"\n  query DailyStatsInPastYear($users: [ID!]) {\n    dailyStatsInPastYear(users: $users) {\n      __typename\n      start\n      end\n      completions\n      selects\n      views\n    }\n  }\n":i.Wd,"\n  query ChatDailyStats($start: DateTime!, $end: DateTime!, $users: [ID!]) {\n    chatDailyStats(start: $start, end: $end, users: $users) {\n      start\n      end\n      chats\n    }\n  }\n":i.Kw,"\n  query chatDailyStatsInPastYear($users: [ID!]) {\n    chatDailyStatsInPastYear(users: $users) {\n      __typename\n      start\n      end\n      chats\n    }\n  }\n":i.WX,"\n  query DailyStats(\n    $start: DateTime!\n    $end: DateTime!\n    $users: [ID!]\n    $languages: [Language!]\n  ) {\n    dailyStats(start: $start, end: $end, users: $users, languages: $languages) {\n      start\n      end\n      completions\n      selects\n      views\n      language\n    }\n  }\n":i.Sm,"\n  subscription CreateThreadAndRun($input: CreateThreadAndRunInput!) {\n    createThreadAndRun(input: $input) {\n      __typename\n      ... on ThreadCreated {\n        id\n      }\n      ... on ThreadUserMessageCreated {\n        id\n      }\n      ... on ThreadAssistantMessageCreated {\n        id\n      }\n      ... on ThreadAssistantMessageReadingCode {\n        snippet\n        fileList\n      }\n      ... on ThreadAssistantMessageReadingDoc {\n        sourceIds\n      }\n      ... on ThreadRelevantQuestions {\n        questions\n      }\n      ... on ThreadAssistantMessageAttachmentsCodeFileList {\n        codeFileList: fileList\n        truncated\n      }\n      ... on ThreadAssistantMessageAttachmentsCode {\n        hits {\n          code {\n            gitUrl\n            commit\n            filepath\n            language\n            content\n            startLine\n          }\n          scores {\n            rrf\n            bm25\n            embedding\n          }\n        }\n      }\n      ... on ThreadAssistantMessageAttachmentsDoc {\n        hits {\n          doc {\n            __typename\n            ... on MessageAttachmentWebDoc {\n              title\n              link\n              content\n            }\n            ... on MessageAttachmentIssueDoc {\n              title\n              link\n              author {\n                id\n                email\n                name\n              }\n              body\n              closed\n            }\n            ... on MessageAttachmentPullDoc {\n              title\n              link\n              author {\n                id\n                email\n                name\n              }\n              body\n              merged\n            }\n            ... on MessageAttachmentCommitDoc {\n              sha\n              message\n              author {\n                id\n                email\n                name\n              }\n              authorAt\n            }\n            ... on MessageAttachmentPageDoc {\n              link\n              title\n              content\n            }\n            ... on MessageAttachmentIngestedDoc {\n              id\n              title\n              body\n              ingestedDocLink: link\n            }\n          }\n          score\n        }\n      }\n      ... on ThreadAssistantMessageContentDelta {\n        delta\n      }\n      ... on ThreadAssistantMessageCompleted {\n        debugData {\n          chatCompletionMessages {\n            role\n            content\n          }\n        }\n      }\n    }\n  }\n":i.VL,"\n  subscription CreateThreadRun($input: CreateThreadRunInput!) {\n    createThreadRun(input: $input) {\n      __typename\n      ... on ThreadCreated {\n        id\n      }\n      ... on ThreadUserMessageCreated {\n        id\n      }\n      ... on ThreadAssistantMessageCreated {\n        id\n      }\n      ... on ThreadAssistantMessageReadingCode {\n        snippet\n        fileList\n      }\n      ... on ThreadAssistantMessageReadingDoc {\n        sourceIds\n      }\n      ... on ThreadRelevantQuestions {\n        questions\n      }\n      ... on ThreadAssistantMessageAttachmentsCodeFileList {\n        codeFileList: fileList\n        truncated\n      }\n      ... on ThreadAssistantMessageAttachmentsCode {\n        hits {\n          code {\n            gitUrl\n            commit\n            filepath\n            language\n            content\n            startLine\n          }\n          scores {\n            rrf\n            bm25\n            embedding\n          }\n        }\n      }\n      ... on ThreadAssistantMessageAttachmentsDoc {\n        hits {\n          doc {\n            __typename\n            ... on MessageAttachmentWebDoc {\n              title\n              link\n              content\n            }\n            ... on MessageAttachmentIssueDoc {\n              title\n              link\n              author {\n                id\n                email\n                name\n              }\n              body\n              closed\n            }\n            ... on MessageAttachmentPullDoc {\n              title\n              link\n              author {\n                id\n                email\n                name\n              }\n              body\n              merged\n            }\n            ... on MessageAttachmentCommitDoc {\n              sha\n              message\n              author {\n                id\n                email\n                name\n              }\n              authorAt\n            }\n            ... on MessageAttachmentPageDoc {\n              link\n              title\n              content\n            }\n            ... on MessageAttachmentIngestedDoc {\n              id\n              title\n              body\n              ingestedDocLink: link\n            }\n          }\n          score\n        }\n      }\n      ... on ThreadAssistantMessageContentDelta {\n        delta\n      }\n      ... on ThreadAssistantMessageCompleted {\n        debugData {\n          chatCompletionMessages {\n            role\n            content\n          }\n        }\n      }\n    }\n  }\n":i.uM,"\n  mutation DeleteThreadMessagePair(\n    $threadId: ID!\n    $userMessageId: ID!\n    $assistantMessageId: ID!\n  ) {\n    deleteThreadMessagePair(\n      threadId: $threadId\n      userMessageId: $userMessageId\n      assistantMessageId: $assistantMessageId\n    )\n  }\n":i.ou,"\n  mutation refreshToken($refreshToken: String!) {\n    refreshToken(refreshToken: $refreshToken) {\n      accessToken\n      refreshToken\n    }\n  }\n":i.FR,"\n  mutation LogoutAllSessions {\n    logoutAllSessions\n  }\n":i.Il,"\n  query ListInvitations(\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    invitations(after: $after, before: $before, first: $first, last: $last) {\n      edges {\n        node {\n          id\n          email\n          code\n          createdAt\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":i.Xx,"\n  query gitRepositories(\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    gitRepositories(\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          name\n          gitUrl\n          sourceId\n          jobInfo {\n            lastJobRun {\n              id\n              job\n              createdAt\n              finishedAt\n              exitCode\n            }\n            command\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":i.Mi,"\n  query ListJobRuns(\n    $ids: [ID!]\n    $jobs: [String!]\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    jobRuns(\n      ids: $ids\n      jobs: $jobs\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          job\n          createdAt\n          startedAt\n          finishedAt\n          exitCode\n          stdout\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":i.$S,"\n  query GetJobRunStats($jobs: [String!]) {\n    jobRunStats(jobs: $jobs) {\n      success\n      failed\n      pending\n    }\n  }\n":i.np,"\n  query ListJobs {\n    jobs\n  }\n":i.Ax,"\n  query ListUsers(\n    $ids: [ID!]\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    users(\n      ids: $ids\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          email\n          isAdmin\n          isOwner\n          createdAt\n          active\n          name\n          isSsoUser\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":i.by,"\n  query ListIntegrations(\n    $ids: [ID!]\n    $kind: IntegrationKind\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    integrations(\n      ids: $ids\n      kind: $kind\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          displayName\n          status\n          apiBase\n          message\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":i.KZ,"\n  query ListIntegratedRepositories(\n    $ids: [ID!]\n    $kind: IntegrationKind\n    $active: Boolean\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    integratedRepositories(\n      ids: $ids\n      kind: $kind\n      active: $active\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          displayName\n          gitUrl\n          active\n          sourceId\n          jobInfo {\n            lastJobRun {\n              id\n              job\n              createdAt\n              finishedAt\n              startedAt\n              exitCode\n            }\n            command\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":i.qt,"\n  query RepositoryList {\n    repositoryList {\n      id\n      name\n      kind\n      gitUrl\n      refs {\n        name\n        commit\n      }\n    }\n  }\n":i.HC,"\n  query RepositorySearch(\n    $kind: RepositoryKind!\n    $id: ID!\n    $rev: String\n    $pattern: String!\n  ) {\n    repositorySearch(kind: $kind, id: $id, rev: $rev, pattern: $pattern) {\n      type\n      path\n      indices\n    }\n  }\n":i.BH,"\n  query ContextInfo {\n    contextInfo {\n      sources {\n        id\n        sourceKind\n        sourceId\n        sourceName\n      }\n    }\n  }\n":i.w4,"\n  query UserGroups {\n    userGroups {\n      id\n      name\n      createdAt\n      updatedAt\n      members {\n        user {\n          id\n          email\n          name\n          createdAt\n        }\n        isGroupAdmin\n        createdAt\n        updatedAt\n      }\n    }\n  }\n":i.hx,"\n  query sourceIdAccessPolicies($sourceId: String!) {\n    sourceIdAccessPolicies(sourceId: $sourceId) {\n      sourceId\n      read {\n        id\n        name\n      }\n    }\n  }\n":i.NL,"\n  query ListThreads(\n    $ids: [ID!]\n    $isEphemeral: Boolean\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    threads(\n      ids: $ids\n      isEphemeral: $isEphemeral\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          userId\n          isEphemeral\n          createdAt\n          updatedAt\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":i.qk,"\n  query ListMyThreads(\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    myThreads(after: $after, before: $before, first: $first, last: $last) {\n      edges {\n        node {\n          id\n          userId\n          isEphemeral\n          createdAt\n          updatedAt\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":i.Dd,"\n  query ListThreadMessages(\n    $threadId: ID!\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    threadMessages(\n      threadId: $threadId\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          threadId\n          codeSourceId\n          role\n          content\n          attachment {\n            code {\n              gitUrl\n              commit\n              filepath\n              language\n              content\n              startLine\n            }\n            clientCode {\n              filepath\n              content\n              startLine\n            }\n            doc {\n              __typename\n              ... on MessageAttachmentWebDoc {\n                title\n                link\n                content\n              }\n              ... on MessageAttachmentIssueDoc {\n                title\n                link\n                author {\n                  id\n                  email\n                  name\n                }\n                body\n                closed\n              }\n              ... on MessageAttachmentPullDoc {\n                title\n                link\n                author {\n                  id\n                  email\n                  name\n                }\n                body\n                merged\n              }\n              ... on MessageAttachmentCommitDoc {\n                sha\n                message\n                author {\n                  id\n                  email\n                  name\n                }\n                authorAt\n              }\n              ... on MessageAttachmentPageDoc {\n                title\n                link\n                content\n              }\n              ... on MessageAttachmentIngestedDoc {\n                id\n                title\n                body\n                ingestedDocLink: link\n              }\n            }\n            codeFileList {\n              fileList\n              truncated\n            }\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":i.f7,"\n  mutation SetThreadPersisted($threadId: ID!) {\n    setThreadPersisted(threadId: $threadId)\n  }\n":i.qu,"\n  mutation DeleteThread($id: ID!) {\n    deleteThread(id: $id)\n  }\n":i.xW,"\n  query Notifications {\n    notifications {\n      id\n      content\n      read\n      createdAt\n    }\n  }\n":i.Qw,"\n  query LdapCredential {\n    ldapCredential {\n      host\n      port\n      bindDn\n      baseDn\n      userFilter\n      encryption\n      skipTlsVerify\n      emailAttribute\n      nameAttribute\n      createdAt\n      updatedAt\n    }\n  }\n":i.Ee,"\n  query OAuthCredential($provider: OAuthProvider!) {\n    oauthCredential(provider: $provider) {\n      provider\n      clientId\n      createdAt\n      updatedAt\n    }\n  }\n":i.Fd,"\n  query RepositorySourceList {\n    repositoryList {\n      id\n      name\n      kind\n      gitUrl\n      sourceId\n      sourceName\n      sourceKind\n    }\n  }\n":i.mO,"\n  query ListPages(\n    $ids: [ID!]\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    pages(\n      ids: $ids\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          authorId\n          title\n          codeSourceId\n          content\n          createdAt\n          updatedAt\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":i.fv,"\n  query ListPageSections(\n    $pageId: ID!\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    pageSections(\n      pageId: $pageId\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          pageId\n          title\n          content\n          position\n          attachments {\n            code {\n              __typename\n              gitUrl\n              commit\n              filepath\n              language\n              content\n              startLine\n            }\n            codeFileList {\n              __typename\n              fileList\n              truncated\n            }\n            doc {\n              __typename\n              ... on AttachmentWebDoc {\n                title\n                link\n                content\n              }\n              ... on AttachmentIssueDoc {\n                title\n                link\n                author {\n                  id\n                  email\n                  name\n                }\n                body\n                closed\n              }\n              ... on AttachmentPullDoc {\n                title\n                link\n                author {\n                  id\n                  email\n                  name\n                }\n                body\n                merged\n              }\n              ... on AttachmentCommitDoc {\n                sha\n                message\n                author {\n                  id\n                  email\n                  name\n                }\n                authorAt\n              }\n              ... on AttachmentPageDoc {\n                link\n                title\n                content\n              }\n              ... on AttachmentIngestedDoc {\n                id\n                title\n                body\n                ingestedDocLink: link\n              }\n            }\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":i.$N};function r(n){var e;return null!==(e=a[n])&&void 0!==e?e:{}}},43240:function(n,e,t){"use strict";t.d(e,{BX:function(){return i.B}});var i=t(75561)},29917:function(n,e,t){"use strict";t.d(e,{Cz:function(){return c},Gm:function(){return u},jp:function(){return d}});var i=t(11978),a=t(40055),r=t(43240),s=t(18500);let o=(0,r.BX)("\n  query GetLicenseInfo {\n    license {\n      type\n      status\n      seats\n      seatsUsed\n      issuedAt\n      expiresAt\n    }\n  }\n"),d=()=>(0,a.aM)({query:o}),u=()=>{let[{data:n}]=d();return null==n?void 0:n.license},c=n=>{var e;let[{data:t}]=d(),a=null==t?void 0:t.license,r=(0,i.useSearchParams)(),o=!!a&&(!(null==n?void 0:null===(e=n.licenses)||void 0===e?void 0:e.length)||n.licenses.includes(a.type)),u=(null==a?void 0:a.status)===s.rW.Ok,c=(null==a?void 0:a.status)===s.rW.Expired,l=(null==a?void 0:a.status)===(null===s.rW||void 0===s.rW?void 0:s.rW.SeatsExceeded),m="expired"===r.get("licenseError"),g="seatsExceed"===r.get("licenseError");return{hasLicense:!!a,isLicenseOK:u&&!(m||g),isExpired:c||m,isSeatsExceeded:l||g,hasSufficientLicense:o}}},80605:function(n,e,t){"use strict";t.d(e,{UA:function(){return m},Uw:function(){return c},c7:function(){return u},jJ:function(){return l},o4:function(){return g},vN:function(){return o},xG:function(){return d}});var i=t(40055),a=t(43240);let r=(0,a.BX)("\n  query GetServerInfo {\n    serverInfo {\n      isAdminInitialized\n      isEmailConfigured\n      isChatEnabled\n      allowSelfSignup\n      isDemoMode\n      disablePasswordLogin\n    }\n  }\n"),s=()=>{let[{data:n}]=(0,i.aM)({query:r});return null==n?void 0:n.serverInfo},o=()=>{let[{fetching:n}]=(0,i.aM)({query:r});return n},d=()=>{var n;return null===(n=s())||void 0===n?void 0:n.isChatEnabled},u=()=>{var n;return null===(n=s())||void 0===n?void 0:n.isAdminInitialized},c=()=>{var n;return null===(n=s())||void 0===n?void 0:n.isEmailConfigured},l=()=>{var n;return null===(n=s())||void 0===n?void 0:n.allowSelfSignup},m=()=>{var n;return null===(n=s())||void 0===n?void 0:n.isDemoMode},g=()=>{var n;return null===(n=s())||void 0===n?void 0:n.disablePasswordLogin}},11978:function(n,e,t){n.exports=t(77280)},54491:function(n,e,t){"use strict";function i(n,[e,t]){return Math.min(t,Math.max(e,n))}t.d(e,{u:function(){return i}})},57541:function(n,e,t){"use strict";t.d(e,{gm:function(){return r}});var i=t(3546);let a=(0,i.createContext)(void 0);function r(n){let e=(0,i.useContext)(a);return n||e||"ltr"}},36327:function(n,e,t){"use strict";t.d(e,{Z:function(){return r}});var i=t(21454),a=t(54859);let r=(0,a.xD)(i.ZP,n=>(e,t,i)=>(i.revalidateOnFocus=!1,i.revalidateIfStale=!1,i.revalidateOnReconnect=!1,n(e,t,i)))}},function(n){n.O(0,[7565,8415,4691,55,436,340,4007,1454,6065,3492,1565,3375,5289,1744],function(){return n(n.s=99656)}),_N_E=n.O()}]);