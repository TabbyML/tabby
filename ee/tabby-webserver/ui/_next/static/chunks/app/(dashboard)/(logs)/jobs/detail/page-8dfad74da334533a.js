(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1908],{81567:function(n,e,t){Promise.resolve().then(t.bind(t,72725))},72725:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return h}});var s=t(36164),r=t(3546),i=t(11978),a=t(70787),o=t(97651),d=t.n(o),u=t(99092),l=t.n(u),f=t(40055),c=t(70410),$=t(74248),g=t(81565),m=t(50538),p=t(90379),v=t(74630);function h(){var n,e,t,a;let o=(0,i.useRouter)(),u=(0,i.useSearchParams)(),$=u.get("id"),[{data:h,error:b,fetching:x},S]=(0,f.aM)({query:c.GG,variables:{ids:[$]},pause:!$}),y=null==h?void 0:null===(t=h.jobRuns)||void 0===t?void 0:null===(e=t.edges)||void 0===e?void 0:null===(n=e[0])||void 0===n?void 0:n.node;return r.useEffect(()=>{let n;return(null==y?void 0:y.createdAt)&&!(null==y?void 0:y.finishedAt)&&(n=window.setTimeout(()=>{S()},5e3)),()=>{n&&clearInterval(n)}},[y]),(0,s.jsx)(s.Fragment,{children:x?(0,s.jsx)(p.cg,{}):(0,s.jsx)("div",{className:"flex flex-1 flex-col items-stretch gap-2",children:y&&(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)("div",{onClick:()=>o.back(),className:"-ml-1 flex cursor-pointer items-center transition-opacity hover:opacity-60",children:[(0,s.jsx)(g.IconChevronLeft,{className:"mr-1 h-6 w-6"}),(0,s.jsx)("h2",{className:"scroll-m-20 text-3xl font-bold tracking-tight first:mt-0",children:y.job})]}),(0,s.jsxs)("div",{className:"mb-8 flex gap-x-5 text-sm text-muted-foreground lg:gap-x-10",children:[(0,s.jsxs)("div",{className:"flex items-center gap-1",children:[(0,s.jsx)(g.IconStopWatch,{}),(0,s.jsxs)("p",{children:["State: ",(a=y.exitCode,(0,v.Z)(a)?"Pending":0===a?"Success":"Failed")]})]}),y.createdAt&&(0,s.jsxs)("div",{className:"flex items-center gap-1",children:[(0,s.jsx)(g.IconClock,{}),(0,s.jsxs)("p",{children:["Started:"," ",l()(y.createdAt).format("YYYY-MM-DD HH:mm")]})]}),y.createdAt&&y.finishedAt&&(0,s.jsxs)("div",{className:"flex items-center gap-1",children:[(0,s.jsx)(g.IconHistory,{}),(0,s.jsxs)("p",{children:["Duration:"," ",d()(l().duration(l()(y.finishedAt).diff(y.createdAt)).asMilliseconds())]})]})]}),(0,s.jsxs)(m.mQ,{defaultValue:"stdout",className:"flex flex-1 flex-col",children:[(0,s.jsxs)(m.dr,{className:"grid w-[400px] grid-cols-2",children:[(0,s.jsxs)(m.SP,{value:"stdout",children:[(0,s.jsx)(g.IconTerminalSquare,{className:"mr-1"}),"stdout"]}),(0,s.jsxs)(m.SP,{value:"stderr",children:[(0,s.jsx)(g.IconAlertTriangle,{className:"mr-1"}),"stderr"]})]}),(0,s.jsxs)("div",{className:"flex flex-1 flex-col",children:[(0,s.jsx)(m.nU,{value:"stdout",children:(0,s.jsx)(I,{value:null==y?void 0:y.stdout})}),(0,s.jsx)(m.nU,{value:"stderr",children:(0,s.jsx)(I,{value:null==y?void 0:y.stderr})})]})]})]})})})}function I(n){let{children:e,className:t,value:r,...i}=n;return(0,s.jsx)("div",{className:(0,$.cn)("mt-2 h-[66vh] w-full overflow-y-auto overflow-x-hidden rounded-lg border bg-gray-50 font-mono text-[0.9rem] dark:bg-gray-800",t),...i,children:r?(0,s.jsx)("pre",{className:"whitespace-pre-wrap p-4",children:(0,s.jsx)(a.Z,{children:r})}):(0,s.jsx)("div",{className:"p-4",children:"No Data"})})}},90379:function(n,e,t){"use strict";t.d(e,{PF:function(){return d},cg:function(){return a},tB:function(){return o}});var s=t(36164),r=t(74248),i=t(3448);let a=n=>{let{className:e,...t}=n;return(0,s.jsxs)("div",{className:(0,r.cn)("space-y-3",e),...t,children:[(0,s.jsx)(i.O,{className:"h-4 w-full"}),(0,s.jsx)(i.O,{className:"h-4 w-full"}),(0,s.jsx)(i.O,{className:"h-4 w-full"}),(0,s.jsx)(i.O,{className:"h-4 w-full"})]})},o=n=>{let{className:e,...t}=n;return(0,s.jsx)(i.O,{className:(0,r.cn)("h-4 w-full",e),...t})},d=n=>{let{className:e,...t}=n;return(0,s.jsxs)("div",{className:(0,r.cn)("flex flex-col gap-3",e),...t,children:[(0,s.jsx)(i.O,{className:"h-4 w-[20%]"}),(0,s.jsx)(i.O,{className:"h-4 w-full"}),(0,s.jsx)(i.O,{className:"h-4 w-[20%]"}),(0,s.jsx)(i.O,{className:"h-4 w-full"})]})}},3448:function(n,e,t){"use strict";t.d(e,{O:function(){return i}});var s=t(36164),r=t(74248);function i(n){let{className:e,...t}=n;return(0,s.jsx)("div",{className:(0,r.cn)("h-4 animate-pulse rounded-md bg-gray-200 dark:bg-gray-700",e),...t})}},50538:function(n,e,t){"use strict";t.d(e,{SP:function(){return u},dr:function(){return d},mQ:function(){return o},nU:function(){return l}});var s=t(36164),r=t(3546),i=t(6044),a=t(74248);let o=i.fC,d=r.forwardRef((n,e)=>{let{className:t,...r}=n;return(0,s.jsx)(i.aV,{ref:e,className:(0,a.cn)("inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground",t),...r})});d.displayName=i.aV.displayName;let u=r.forwardRef((n,e)=>{let{className:t,...r}=n;return(0,s.jsx)(i.xz,{ref:e,className:(0,a.cn)("inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm",t),...r})});u.displayName=i.xz.displayName;let l=r.forwardRef((n,e)=>{let{className:t,...r}=n;return(0,s.jsx)(i.VY,{ref:e,className:(0,a.cn)("mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2",t),...r})});l.displayName=i.VY.displayName},75561:function(n,e,t){"use strict";t.d(e,{B:function(){return i}});var s=t(18500);let r={"\n  query ListUserEvents(\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n    $start: DateTime!\n    $end: DateTime!\n    $users: [ID!]\n  ) {\n    userEvents(\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n      start: $start\n      end: $end\n      users: $users\n    ) {\n      edges {\n        node {\n          id\n          userId\n          createdAt\n          kind\n          payload\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":s.UQ,"\n  mutation uploadUserAvatarBase64($id: ID!, $avatarBase64: String!) {\n    uploadUserAvatarBase64(id: $id, avatarBase64: $avatarBase64)\n  }\n":s.eI,"\n  mutation UpdateUserName($id: ID!, $name: String!) {\n    updateUserName(id: $id, name: $name)\n  }\n":s.DQ,"\n  mutation PasswordChange($input: PasswordChangeInput!) {\n    passwordChange(input: $input)\n  }\n":s.oZ,"\n  mutation updateEmailSetting($input: EmailSettingInput!) {\n    updateEmailSetting(input: $input)\n  }\n":s.gl,"\n  mutation deleteEmailSetting {\n    deleteEmailSetting\n  }\n":s.wZ,"\n  mutation SendTestEmail($to: String!) {\n    sendTestEmail(to: $to)\n  }\n":s.nI,"\n  query emailSetting {\n    emailSetting {\n      smtpUsername\n      smtpServer\n      fromAddress\n      encryption\n      authMethod\n      smtpPort\n    }\n  }\n":s.k6,"\n  mutation UpdateIntegration($input: UpdateIntegrationInput!) {\n    updateIntegration(input: $input)\n  }\n":s.fc,"\n  mutation DeleteIntegration($id: ID!, $kind: IntegrationKind!) {\n    deleteIntegration(id: $id, kind: $kind)\n  }\n":s.AU,"\n  mutation UpdateIntegratedRepositoryActive($id: ID!, $active: Boolean!) {\n    updateIntegratedRepositoryActive(id: $id, active: $active)\n  }\n":s.o7,"\n  mutation CreateIntegration($input: CreateIntegrationInput!) {\n    createIntegration(input: $input)\n  }\n":s.fY,"\n  mutation deleteGitRepository($id: ID!) {\n    deleteGitRepository(id: $id)\n  }\n":s.TS,"\n  mutation createGitRepository($name: String!, $gitUrl: String!) {\n    createGitRepository(name: $name, gitUrl: $gitUrl)\n  }\n":s.ad,"\n  mutation updateOauthCredential($input: UpdateOAuthCredentialInput!) {\n    updateOauthCredential(input: $input)\n  }\n":s.m,"\n  mutation deleteOauthCredential($provider: OAuthProvider!) {\n    deleteOauthCredential(provider: $provider)\n  }\n":s.ZH,"\n  query OAuthCallbackUrl($provider: OAuthProvider!) {\n    oauthCallbackUrl(provider: $provider)\n  }\n":s.L$,"\n  query OAuthCredential($provider: OAuthProvider!) {\n    oauthCredential(provider: $provider) {\n      provider\n      clientId\n      createdAt\n      updatedAt\n    }\n  }\n":s.Fd,"\n  mutation updateNetworkSettingMutation($input: NetworkSettingInput!) {\n    updateNetworkSetting(input: $input)\n  }\n":s.rN,"\n  mutation updateSecuritySetting($input: SecuritySettingInput!) {\n    updateSecuritySetting(input: $input)\n  }\n":s.Nl,"\n  query SecuritySetting {\n    securitySetting {\n      allowedRegisterDomainList\n      disableClientSideTelemetry\n    }\n  }\n":s.rU,"\n  mutation UploadLicense($license: String!) {\n    uploadLicense(license: $license)\n  }\n":s.Yo,"\n  mutation ResetLicense {\n    resetLicense\n  }\n":s.d0,"\n  mutation CreateInvitation($email: String!) {\n    createInvitation(email: $email)\n  }\n":s.ib,"\n  mutation DeleteInvitation($id: ID!) {\n    deleteInvitation(id: $id)\n  }\n":s.YM,"\n  mutation updateUserRole($id: ID!, $isAdmin: Boolean!) {\n    updateUserRole(id: $id, isAdmin: $isAdmin)\n  }\n":s.XF,"\n  mutation UpdateUserActive($id: ID!, $active: Boolean!) {\n    updateUserActive(id: $id, active: $active)\n  }\n":s.dv,"\n  query GetRegistrationToken {\n    registrationToken\n  }\n":s.bh,"\n  mutation ResetRegistrationToken {\n    resetRegistrationToken\n  }\n":s.wW,"\n  query GetDiskUsageStats {\n    diskUsageStats {\n      events {\n        filepath\n        sizeKb\n      }\n      indexedRepositories {\n        filepath\n        sizeKb\n      }\n      database {\n        filepath\n        sizeKb\n      }\n      models {\n        filepath\n        sizeKb\n      }\n    }\n  }\n":s.xX,"\n  mutation ResetUserAuthToken {\n    resetUserAuthToken\n  }\n":s.qq,"\n  mutation passwordReset($input: PasswordResetInput!) {\n    passwordReset(input: $input)\n  }\n":s.vK,"\n  mutation requestPasswordResetEmail($input: RequestPasswordResetEmailInput!) {\n    requestPasswordResetEmail(input: $input)\n  }\n":s.i8,"\n  mutation requestInvitationEmail($input: RequestInvitationInput!) {\n    requestInvitationEmail(input: $input) {\n      email\n      code\n    }\n  }\n":s.S_,"\n  mutation tokenAuth($email: String!, $password: String!) {\n    tokenAuth(email: $email, password: $password) {\n      accessToken\n      refreshToken\n    }\n  }\n":s.UO,"\n  mutation register(\n    $name: String!\n    $email: String!\n    $password1: String!\n    $password2: String!\n    $invitationCode: String\n  ) {\n    register(\n      name: $name\n      email: $email\n      password1: $password1\n      password2: $password2\n      invitationCode: $invitationCode\n    ) {\n      accessToken\n      refreshToken\n    }\n  }\n":s.YR,"\n  query RepositorySearch($kind: RepositoryKind!, $id: ID!, $pattern: String!) {\n    repositorySearch(kind: $kind, id: $id, pattern: $pattern) {\n      type\n      path\n      indices\n    }\n  }\n":s.BH,"\n  query RepositoryList {\n    repositoryList {\n      id\n      name\n      kind\n      gitUrl\n    }\n  }\n":s.HC,"\n  query GetLicenseInfo {\n    license {\n      type\n      status\n      seats\n      seatsUsed\n      issuedAt\n      expiresAt\n    }\n  }\n":s.eZ,"\n  query MeQuery {\n    me {\n      id\n      authToken\n      email\n      isAdmin\n      isPasswordSet\n      name\n    }\n  }\n":s.fk,"\n  query NetworkSetting {\n    networkSetting {\n      externalUrl\n    }\n  }\n":s.m2,"\n  query GetServerInfo {\n    serverInfo {\n      isAdminInitialized\n      isEmailConfigured\n      isChatEnabled\n      allowSelfSignup\n      isDemoMode\n    }\n  }\n":s.a,"\n  mutation refreshToken($refreshToken: String!) {\n    refreshToken(refreshToken: $refreshToken) {\n      accessToken\n      refreshToken\n    }\n  }\n":s.FR,"\n  mutation LogoutAllSessions {\n    logoutAllSessions\n  }\n":s.Il,"\n  query ListInvitations(\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    invitations(after: $after, before: $before, first: $first, last: $last) {\n      edges {\n        node {\n          id\n          email\n          code\n          createdAt\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":s.Xx,"\n  query gitRepositories(\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    gitRepositories(\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          name\n          gitUrl\n          jobInfo {\n            lastJobRun {\n              id\n              job\n              createdAt\n              finishedAt\n              exitCode\n            }\n            command\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":s.Mi,"\n  query ListJobRuns(\n    $ids: [ID!]\n    $jobs: [String!]\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    jobRuns(\n      ids: $ids\n      jobs: $jobs\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          job\n          createdAt\n          finishedAt\n          exitCode\n          stdout\n          stderr\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":s.$S,"\n  query GetJobRunStats($jobs: [String!]) {\n    jobRunStats(jobs: $jobs) {\n      success\n      failed\n      pending\n    }\n  }\n":s.np,"\n  query ListJobs {\n    jobs\n  }\n":s.Ax,"\n  query ListUsers($after: String, $before: String, $first: Int, $last: Int) {\n    users(after: $after, before: $before, first: $first, last: $last) {\n      edges {\n        node {\n          id\n          email\n          isAdmin\n          isOwner\n          createdAt\n          active\n          name\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":s.by,"\n  query DailyStatsInPastYear($users: [ID!]) {\n    dailyStatsInPastYear(users: $users) {\n      start\n      end\n      completions\n      selects\n      views\n    }\n  }\n":s.Wd,"\n  query DailyStats(\n    $start: DateTime!\n    $end: DateTime!\n    $users: [ID!]\n    $languages: [Language!]\n  ) {\n    dailyStats(start: $start, end: $end, users: $users, languages: $languages) {\n      start\n      end\n      completions\n      selects\n      views\n      language\n    }\n  }\n":s.Sm,"\n  query ListIntegrations(\n    $ids: [ID!]\n    $kind: IntegrationKind\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    integrations(\n      ids: $ids\n      kind: $kind\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          displayName\n          status\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":s.KZ,"\n  query ListIntegratedRepositories(\n    $ids: [ID!]\n    $kind: IntegrationKind\n    $active: Boolean\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    integratedRepositories(\n      ids: $ids\n      kind: $kind\n      active: $active\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          displayName\n          gitUrl\n          active\n          jobInfo {\n            lastJobRun {\n              id\n              job\n              createdAt\n              finishedAt\n              exitCode\n            }\n            command\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":s.qt};function i(n){var e;return null!==(e=r[n])&&void 0!==e?e:{}}},43240:function(n,e,t){"use strict";t.d(e,{BX:function(){return s.B}});var s=t(75561)},70410:function(n,e,t){"use strict";t.d(e,{Cl:function(){return f},DQ:function(){return d},GG:function(){return a},S1:function(){return i},Y6:function(){return l},kb:function(){return c},lE:function(){return r},ts:function(){return $},yB:function(){return o},yw:function(){return u}});var s=t(43240);let r=(0,s.BX)("\n  query ListInvitations(\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    invitations(after: $after, before: $before, first: $first, last: $last) {\n      edges {\n        node {\n          id\n          email\n          code\n          createdAt\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n"),i=(0,s.BX)("\n  query gitRepositories(\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    gitRepositories(\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          name\n          gitUrl\n          jobInfo {\n            lastJobRun {\n              id\n              job\n              createdAt\n              finishedAt\n              exitCode\n            }\n            command\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n"),a=(0,s.BX)("\n  query ListJobRuns(\n    $ids: [ID!]\n    $jobs: [String!]\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    jobRuns(\n      ids: $ids\n      jobs: $jobs\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          job\n          createdAt\n          finishedAt\n          exitCode\n          stdout\n          stderr\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n"),o=(0,s.BX)("\n  query GetJobRunStats($jobs: [String!]) {\n    jobRunStats(jobs: $jobs) {\n      success\n      failed\n      pending\n    }\n  }\n"),d=(0,s.BX)("\n  query ListJobs {\n    jobs\n  }\n"),u=(0,s.BX)("\n  query ListUsers($after: String, $before: String, $first: Int, $last: Int) {\n    users(after: $after, before: $before, first: $first, last: $last) {\n      edges {\n        node {\n          id\n          email\n          isAdmin\n          isOwner\n          createdAt\n          active\n          name\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n"),l=(0,s.BX)("\n  query DailyStatsInPastYear($users: [ID!]) {\n    dailyStatsInPastYear(users: $users) {\n      start\n      end\n      completions\n      selects\n      views\n    }\n  }\n"),f=(0,s.BX)("\n  query DailyStats(\n    $start: DateTime!\n    $end: DateTime!\n    $users: [ID!]\n    $languages: [Language!]\n  ) {\n    dailyStats(start: $start, end: $end, users: $users, languages: $languages) {\n      start\n      end\n      completions\n      selects\n      views\n      language\n    }\n  }\n"),c=(0,s.BX)("\n  query ListIntegrations(\n    $ids: [ID!]\n    $kind: IntegrationKind\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    integrations(\n      ids: $ids\n      kind: $kind\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          displayName\n          status\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n"),$=(0,s.BX)("\n  query ListIntegratedRepositories(\n    $ids: [ID!]\n    $kind: IntegrationKind\n    $active: Boolean\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    integratedRepositories(\n      ids: $ids\n      kind: $kind\n      active: $active\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          displayName\n          gitUrl\n          active\n          jobInfo {\n            lastJobRun {\n              id\n              job\n              createdAt\n              finishedAt\n              exitCode\n            }\n            command\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n")}},function(n){n.O(0,[7565,872,55,2398,6044,6991,3181,7444,1565,3375,5289,1744],function(){return n(n.s=81567)}),_N_E=n.O()}]);