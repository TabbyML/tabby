(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9157],{14375:function(n,e,t){"use strict";t.d(e,{j:function(){return a}});let i=n=>"boolean"==typeof n?"".concat(n):0===n?"0":n,r=function(){for(var n=arguments.length,e=Array(n),t=0;t<n;t++)e[t]=arguments[t];return e.flat(1/0).filter(Boolean).join(" ")},a=(n,e)=>t=>{var a;if((null==e?void 0:e.variants)==null)return r(n,null==t?void 0:t.class,null==t?void 0:t.className);let{variants:s,defaultVariants:o}=e,u=Object.keys(s).map(n=>{let e=null==t?void 0:t[n],r=null==o?void 0:o[n];if(null===e)return null;let a=i(e)||i(r);return s[n][a]}),d=t&&Object.entries(t).reduce((n,e)=>{let[t,i]=e;return void 0===i||(n[t]=i),n},{}),l=null==e?void 0:null===(a=e.compoundVariants)||void 0===a?void 0:a.reduce((n,e)=>{let{class:t,className:i,...r}=e;return Object.entries(r).every(n=>{let[e,t]=n;return Array.isArray(t)?t.includes({...o,...d}[e]):({...o,...d})[e]===t})?[...n,t,i]:n},[]);return r(n,u,l,null==t?void 0:t.class,null==t?void 0:t.className)}},73248:function(n,e,t){Promise.resolve().then(t.bind(t,20325))},75561:function(n,e,t){"use strict";t.d(e,{B:function(){return a}});var i=t(18500);let r={"\n  query ListUserEvents(\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n    $start: DateTime!\n    $end: DateTime!\n    $users: [ID!]\n  ) {\n    userEvents(\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n      start: $start\n      end: $end\n      users: $users\n    ) {\n      edges {\n        node {\n          id\n          userId\n          createdAt\n          kind\n          payload\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":i.UQ,"\n  mutation uploadUserAvatarBase64($id: ID!, $avatarBase64: String!) {\n    uploadUserAvatarBase64(id: $id, avatarBase64: $avatarBase64)\n  }\n":i.eI,"\n  mutation UpdateUserName($id: ID!, $name: String!) {\n    updateUserName(id: $id, name: $name)\n  }\n":i.DQ,"\n  mutation PasswordChange($input: PasswordChangeInput!) {\n    passwordChange(input: $input)\n  }\n":i.oZ,"\n  mutation updateEmailSetting($input: EmailSettingInput!) {\n    updateEmailSetting(input: $input)\n  }\n":i.gl,"\n  mutation deleteEmailSetting {\n    deleteEmailSetting\n  }\n":i.wZ,"\n  mutation SendTestEmail($to: String!) {\n    sendTestEmail(to: $to)\n  }\n":i.nI,"\n  query emailSetting {\n    emailSetting {\n      smtpUsername\n      smtpServer\n      fromAddress\n      encryption\n      authMethod\n      smtpPort\n    }\n  }\n":i.k6,"\n  mutation UpdateIntegration($input: UpdateIntegrationInput!) {\n    updateIntegration(input: $input)\n  }\n":i.fc,"\n  mutation DeleteIntegration($id: ID!, $kind: IntegrationKind!) {\n    deleteIntegration(id: $id, kind: $kind)\n  }\n":i.AU,"\n  mutation UpdateIntegratedRepositoryActive($id: ID!, $active: Boolean!) {\n    updateIntegratedRepositoryActive(id: $id, active: $active)\n  }\n":i.o7,"\n  mutation CreateIntegration($input: CreateIntegrationInput!) {\n    createIntegration(input: $input)\n  }\n":i.fY,"\n  mutation deleteGitRepository($id: ID!) {\n    deleteGitRepository(id: $id)\n  }\n":i.TS,"\n  mutation createGitRepository($name: String!, $gitUrl: String!) {\n    createGitRepository(name: $name, gitUrl: $gitUrl)\n  }\n":i.ad,"\n  mutation updateOauthCredential($input: UpdateOAuthCredentialInput!) {\n    updateOauthCredential(input: $input)\n  }\n":i.m,"\n  mutation deleteOauthCredential($provider: OAuthProvider!) {\n    deleteOauthCredential(provider: $provider)\n  }\n":i.ZH,"\n  query OAuthCallbackUrl($provider: OAuthProvider!) {\n    oauthCallbackUrl(provider: $provider)\n  }\n":i.L$,"\n  query OAuthCredential($provider: OAuthProvider!) {\n    oauthCredential(provider: $provider) {\n      provider\n      clientId\n      createdAt\n      updatedAt\n    }\n  }\n":i.Fd,"\n  mutation updateNetworkSettingMutation($input: NetworkSettingInput!) {\n    updateNetworkSetting(input: $input)\n  }\n":i.rN,"\n  mutation updateSecuritySetting($input: SecuritySettingInput!) {\n    updateSecuritySetting(input: $input)\n  }\n":i.Nl,"\n  query SecuritySetting {\n    securitySetting {\n      allowedRegisterDomainList\n      disableClientSideTelemetry\n    }\n  }\n":i.rU,"\n  mutation UploadLicense($license: String!) {\n    uploadLicense(license: $license)\n  }\n":i.Yo,"\n  mutation ResetLicense {\n    resetLicense\n  }\n":i.d0,"\n  mutation CreateInvitation($email: String!) {\n    createInvitation(email: $email)\n  }\n":i.ib,"\n  mutation DeleteInvitation($id: ID!) {\n    deleteInvitation(id: $id)\n  }\n":i.YM,"\n  mutation updateUserRole($id: ID!, $isAdmin: Boolean!) {\n    updateUserRole(id: $id, isAdmin: $isAdmin)\n  }\n":i.XF,"\n  mutation UpdateUserActive($id: ID!, $active: Boolean!) {\n    updateUserActive(id: $id, active: $active)\n  }\n":i.dv,"\n  query GetRegistrationToken {\n    registrationToken\n  }\n":i.bh,"\n  mutation ResetRegistrationToken {\n    resetRegistrationToken\n  }\n":i.wW,"\n  query GetDiskUsageStats {\n    diskUsageStats {\n      events {\n        filepath\n        sizeKb\n      }\n      indexedRepositories {\n        filepath\n        sizeKb\n      }\n      database {\n        filepath\n        sizeKb\n      }\n      models {\n        filepath\n        sizeKb\n      }\n    }\n  }\n":i.xX,"\n  mutation ResetUserAuthToken {\n    resetUserAuthToken\n  }\n":i.qq,"\n  mutation passwordReset($input: PasswordResetInput!) {\n    passwordReset(input: $input)\n  }\n":i.vK,"\n  mutation requestPasswordResetEmail($input: RequestPasswordResetEmailInput!) {\n    requestPasswordResetEmail(input: $input)\n  }\n":i.i8,"\n  mutation requestInvitationEmail($input: RequestInvitationInput!) {\n    requestInvitationEmail(input: $input) {\n      email\n      code\n    }\n  }\n":i.S_,"\n  mutation tokenAuth($email: String!, $password: String!) {\n    tokenAuth(email: $email, password: $password) {\n      accessToken\n      refreshToken\n    }\n  }\n":i.UO,"\n  mutation register(\n    $name: String!\n    $email: String!\n    $password1: String!\n    $password2: String!\n    $invitationCode: String\n  ) {\n    register(\n      name: $name\n      email: $email\n      password1: $password1\n      password2: $password2\n      invitationCode: $invitationCode\n    ) {\n      accessToken\n      refreshToken\n    }\n  }\n":i.YR,"\n  query RepositorySearch($kind: RepositoryKind!, $id: ID!, $pattern: String!) {\n    repositorySearch(kind: $kind, id: $id, pattern: $pattern) {\n      type\n      path\n      indices\n    }\n  }\n":i.BH,"\n  query RepositoryList {\n    repositoryList {\n      id\n      name\n      kind\n      gitUrl\n    }\n  }\n":i.HC,"\n  query GetLicenseInfo {\n    license {\n      type\n      status\n      seats\n      seatsUsed\n      issuedAt\n      expiresAt\n    }\n  }\n":i.eZ,"\n  query MeQuery {\n    me {\n      id\n      authToken\n      email\n      isAdmin\n      isPasswordSet\n      name\n    }\n  }\n":i.fk,"\n  query NetworkSetting {\n    networkSetting {\n      externalUrl\n    }\n  }\n":i.m2,"\n  query GetServerInfo {\n    serverInfo {\n      isAdminInitialized\n      isEmailConfigured\n      isChatEnabled\n      allowSelfSignup\n      isDemoMode\n    }\n  }\n":i.a,"\n  mutation refreshToken($refreshToken: String!) {\n    refreshToken(refreshToken: $refreshToken) {\n      accessToken\n      refreshToken\n    }\n  }\n":i.FR,"\n  mutation LogoutAllSessions {\n    logoutAllSessions\n  }\n":i.Il,"\n  query ListInvitations(\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    invitations(after: $after, before: $before, first: $first, last: $last) {\n      edges {\n        node {\n          id\n          email\n          code\n          createdAt\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":i.Xx,"\n  query gitRepositories(\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    gitRepositories(\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          name\n          gitUrl\n          jobInfo {\n            lastJobRun {\n              id\n              job\n              createdAt\n              finishedAt\n              exitCode\n            }\n            command\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":i.Mi,"\n  query ListJobRuns(\n    $ids: [ID!]\n    $jobs: [String!]\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    jobRuns(\n      ids: $ids\n      jobs: $jobs\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          job\n          createdAt\n          finishedAt\n          exitCode\n          stdout\n          stderr\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":i.$S,"\n  query GetJobRunStats($jobs: [String!]) {\n    jobRunStats(jobs: $jobs) {\n      success\n      failed\n      pending\n    }\n  }\n":i.np,"\n  query ListJobs {\n    jobs\n  }\n":i.Ax,"\n  query ListUsers($after: String, $before: String, $first: Int, $last: Int) {\n    users(after: $after, before: $before, first: $first, last: $last) {\n      edges {\n        node {\n          id\n          email\n          isAdmin\n          isOwner\n          createdAt\n          active\n          name\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":i.by,"\n  query DailyStatsInPastYear($users: [ID!]) {\n    dailyStatsInPastYear(users: $users) {\n      start\n      end\n      completions\n      selects\n      views\n    }\n  }\n":i.Wd,"\n  query DailyStats(\n    $start: DateTime!\n    $end: DateTime!\n    $users: [ID!]\n    $languages: [Language!]\n  ) {\n    dailyStats(start: $start, end: $end, users: $users, languages: $languages) {\n      start\n      end\n      completions\n      selects\n      views\n      language\n    }\n  }\n":i.Sm,"\n  query ListIntegrations(\n    $ids: [ID!]\n    $kind: IntegrationKind\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    integrations(\n      ids: $ids\n      kind: $kind\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          displayName\n          status\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":i.KZ,"\n  query ListIntegratedRepositories(\n    $ids: [ID!]\n    $kind: IntegrationKind\n    $active: Boolean\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    integratedRepositories(\n      ids: $ids\n      kind: $kind\n      active: $active\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          displayName\n          gitUrl\n          active\n          jobInfo {\n            lastJobRun {\n              id\n              job\n              createdAt\n              finishedAt\n              exitCode\n            }\n            command\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":i.qt};function a(n){var e;return null!==(e=r[n])&&void 0!==e?e:{}}},43240:function(n,e,t){"use strict";t.d(e,{BX:function(){return i.B}});var i=t(75561)},11978:function(n,e,t){n.exports=t(77280)},72205:function(n,e,t){"use strict";t.d(e,{WV:function(){return o},jH:function(){return u}});var i=t(65122),r=t(3546),a=t(30171),s=t(74047);let o=["a","button","div","form","h2","h3","img","input","label","li","nav","ol","p","span","svg","ul"].reduce((n,e)=>{let t=(0,r.forwardRef)((n,t)=>{let{asChild:a,...o}=n,u=a?s.g7:e;return(0,r.useEffect)(()=>{window[Symbol.for("radix-ui")]=!0},[]),(0,r.createElement)(u,(0,i.Z)({},o,{ref:t}))});return t.displayName=`Primitive.${e}`,{...n,[e]:t}},{});function u(n,e){n&&(0,a.flushSync)(()=>n.dispatchEvent(e))}},1853:function(n,e){"use strict";e.Z=function(n){for(var e=-1,t=null==n?0:n.length,i=0,r=[];++e<t;){var a=n[e];a&&(r[i++]=a)}return r}},826:function(n,e,t){"use strict";t.d(e,{Z:function(){return o}});var i,r=t(90830),a=t(20568),s=t(70014),o=(i=t(54549).Z,function(n,e,t){var o=Object(n);if(!(0,a.Z)(n)){var u=(0,r.Z)(e,3);n=(0,s.Z)(n),e=function(n){return u(o[n],n,o)}}var d=i(n,e,t);return d>-1?o[u?n[d]:d]:void 0})},54549:function(n,e,t){"use strict";t.d(e,{Z:function(){return d}});var i=function(n,e,t,i){for(var r=n.length,a=t+(i?1:-1);i?a--:++a<r;)if(e(n[a],a,n))return a;return -1},r=t(90830),a=t(59348),s=1/0,o=function(n){var e,t=(e=n)?(e=(0,a.Z)(e))===s||e===-s?(e<0?-1:1)*17976931348623157e292:e==e?e:0:0===e?e:0,i=t%1;return t==t?i?t-i:t:0},u=Math.max,d=function(n,e,t){var a=null==n?0:n.length;if(!a)return -1;var s=null==t?0:o(t);return s<0&&(s=u(a+s,0)),i(n,(0,r.Z)(e,3),s)}}},function(n){n.O(0,[872,55,2398,6201,652,3449,9317,9989,830,1957,7444,1565,325,3375,5289,1744],function(){return n(n.s=73248)}),_N_E=n.O()}]);