"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[410],{75561:function(n,e,t){t.d(e,{B:function(){return s}});var a=t(18500);let i={"\n  query ListUserEvents(\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n    $start: DateTime!\n    $end: DateTime!\n    $users: [ID!]\n  ) {\n    userEvents(\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n      start: $start\n      end: $end\n      users: $users\n    ) {\n      edges {\n        node {\n          id\n          userId\n          createdAt\n          kind\n          payload\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":a.UQ,"\n  mutation uploadUserAvatarBase64($id: ID!, $avatarBase64: String!) {\n    uploadUserAvatarBase64(id: $id, avatarBase64: $avatarBase64)\n  }\n":a.eI,"\n  mutation UpdateUserName($id: ID!, $name: String!) {\n    updateUserName(id: $id, name: $name)\n  }\n":a.DQ,"\n  mutation PasswordChange($input: PasswordChangeInput!) {\n    passwordChange(input: $input)\n  }\n":a.oZ,"\n  mutation updateEmailSetting($input: EmailSettingInput!) {\n    updateEmailSetting(input: $input)\n  }\n":a.gl,"\n  mutation deleteEmailSetting {\n    deleteEmailSetting\n  }\n":a.wZ,"\n  mutation SendTestEmail($to: String!) {\n    sendTestEmail(to: $to)\n  }\n":a.nI,"\n  query emailSetting {\n    emailSetting {\n      smtpUsername\n      smtpServer\n      fromAddress\n      encryption\n      authMethod\n      smtpPort\n    }\n  }\n":a.k6,"\n  mutation UpdateIntegration($input: UpdateIntegrationInput!) {\n    updateIntegration(input: $input)\n  }\n":a.fc,"\n  mutation DeleteIntegration($id: ID!, $kind: IntegrationKind!) {\n    deleteIntegration(id: $id, kind: $kind)\n  }\n":a.AU,"\n  mutation UpdateIntegratedRepositoryActive($id: ID!, $active: Boolean!) {\n    updateIntegratedRepositoryActive(id: $id, active: $active)\n  }\n":a.o7,"\n  mutation CreateIntegration($input: CreateIntegrationInput!) {\n    createIntegration(input: $input)\n  }\n":a.fY,"\n  mutation grantSourceIdReadAccess($sourceId: String!, $userGroupId: ID!) {\n    grantSourceIdReadAccess(sourceId: $sourceId, userGroupId: $userGroupId)\n  }\n":a.Yr,"\n  mutation revokeSourceIdReadAccess($sourceId: String!, $userGroupId: ID!) {\n    revokeSourceIdReadAccess(sourceId: $sourceId, userGroupId: $userGroupId)\n  }\n":a.z,"\n  mutation CreateCustomDocument($input: CreateCustomDocumentInput!) {\n    createCustomDocument(input: $input)\n  }\n":a.Gf,"\n  query CustomWebDocuments(\n    $ids: [ID!]\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    customWebDocuments(\n      ids: $ids\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          url\n          name\n          id\n          sourceId\n          jobInfo {\n            lastJobRun {\n              id\n              job\n              createdAt\n              finishedAt\n              exitCode\n            }\n            command\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":a.wx,"\n  mutation DeleteCustomDocument($id: ID!) {\n    deleteCustomDocument(id: $id)\n  }\n":a.c3,"\n  query PresetWebDocuments(\n    $ids: [ID!]\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n    $isActive: Boolean\n  ) {\n    presetWebDocuments(\n      ids: $ids\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n      isActive: $isActive\n    ) {\n      edges {\n        node {\n          id\n          name\n          isActive\n          sourceId\n          jobInfo {\n            lastJobRun {\n              id\n              job\n              createdAt\n              finishedAt\n              exitCode\n            }\n            command\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":a.z1,"\n  mutation SetPresetDocumentActive($input: SetPresetDocumentActiveInput!) {\n    setPresetDocumentActive(input: $input)\n  }\n":a.h_,"\n  mutation deleteGitRepository($id: ID!) {\n    deleteGitRepository(id: $id)\n  }\n":a.TS,"\n  mutation createGitRepository($name: String!, $gitUrl: String!) {\n    createGitRepository(name: $name, gitUrl: $gitUrl)\n  }\n":a.ad,"\n  mutation triggerJobRun($command: String!) {\n    triggerJobRun(command: $command)\n  }\n":a.uk,"\n  mutation testLdapConnection($input: UpdateLdapCredentialInput!) {\n    testLdapConnection(input: $input)\n  }\n":a.rL,"\n  mutation updateLdapCredential($input: UpdateLdapCredentialInput!) {\n    updateLdapCredential(input: $input)\n  }\n":a.xn,"\n  mutation deleteLdapCredential {\n    deleteLdapCredential\n  }\n":a.X6,"\n  mutation updateOauthCredential($input: UpdateOAuthCredentialInput!) {\n    updateOauthCredential(input: $input)\n  }\n":a.m,"\n  mutation deleteOauthCredential($provider: OAuthProvider!) {\n    deleteOauthCredential(provider: $provider)\n  }\n":a.ZH,"\n  query OAuthCallbackUrl($provider: OAuthProvider!) {\n    oauthCallbackUrl(provider: $provider)\n  }\n":a.L$,"\n  mutation updateNetworkSettingMutation($input: NetworkSettingInput!) {\n    updateNetworkSetting(input: $input)\n  }\n":a.rN,"\n  mutation updateSecuritySetting($input: SecuritySettingInput!) {\n    updateSecuritySetting(input: $input)\n  }\n":a.Nl,"\n  query SecuritySetting {\n    securitySetting {\n      allowedRegisterDomainList\n      disableClientSideTelemetry\n      disablePasswordLogin\n    }\n  }\n":a.rU,"\n  mutation UploadLicense($license: String!) {\n    uploadLicense(license: $license)\n  }\n":a.Yo,"\n  mutation ResetLicense {\n    resetLicense\n  }\n":a.d0,"\n  mutation CreateInvitation($email: String!) {\n    createInvitation(email: $email)\n  }\n":a.ib,"\n  mutation DeleteInvitation($id: ID!) {\n    deleteInvitation(id: $id)\n  }\n":a.YM,"\n  mutation updateUserRole($id: ID!, $isAdmin: Boolean!) {\n    updateUserRole(id: $id, isAdmin: $isAdmin)\n  }\n":a.XF,"\n  mutation UpdateUserActive($id: ID!, $active: Boolean!) {\n    updateUserActive(id: $id, active: $active)\n  }\n":a.dv,"\n  mutation generateResetPasswordUrl($userId: ID!) {\n    generateResetPasswordUrl(userId: $userId)\n  }\n":a.nh,"\n  mutation createUserGroup($input: CreateUserGroupInput!) {\n    createUserGroup(input: $input)\n  }\n":a.e8,"\n  mutation DeleteUserGroupMembership($userGroupId: ID!, $userId: ID!) {\n    deleteUserGroupMembership(userGroupId: $userGroupId, userId: $userId)\n  }\n":a.zD,"\n  mutation UpsertUserGroupMembership($input: UpsertUserGroupMembershipInput!) {\n    upsertUserGroupMembership(input: $input)\n  }\n":a.uI,"\n  mutation DeleteUserGroup($id: ID!) {\n    deleteUserGroup(id: $id)\n  }\n":a.hQ,"\n  query GetRegistrationToken {\n    registrationToken\n  }\n":a.bh,"\n  mutation ResetRegistrationToken {\n    resetRegistrationToken\n  }\n":a.wW,"\n  query ingestionStatus($sources: [String!]) {\n    ingestionStatus(sources: $sources) {\n      source\n      pending\n      failed\n      total\n    }\n  }\n":a.lr,"\n  query GetDiskUsageStats {\n    diskUsageStats {\n      events {\n        filepath\n        sizeKb\n      }\n      indexedRepositories {\n        filepath\n        sizeKb\n      }\n      database {\n        filepath\n        sizeKb\n      }\n      models {\n        filepath\n        sizeKb\n      }\n    }\n  }\n":a.xX,"\n  query TestModelConnection($backend: ModelHealthBackend!) {\n    testModelConnection(backend: $backend) {\n      latencyMs\n    }\n  }\n":a.rE,"\n  query readRepositoryRelatedQuestions($sourceId: String!) {\n    readRepositoryRelatedQuestions(sourceId: $sourceId)\n  }\n":a.pu,"\n  mutation passwordReset($input: PasswordResetInput!) {\n    passwordReset(input: $input)\n  }\n":a.vK,"\n  mutation tokenAuthLdap($userId: String!, $password: String!) {\n    tokenAuthLdap(userId: $userId, password: $password) {\n      accessToken\n      refreshToken\n    }\n  }\n":a.Wv,"\n  mutation requestPasswordResetEmail($input: RequestPasswordResetEmailInput!) {\n    requestPasswordResetEmail(input: $input)\n  }\n":a.i8,"\n  mutation requestInvitationEmail($input: RequestInvitationInput!) {\n    requestInvitationEmail(input: $input) {\n      email\n      code\n    }\n  }\n":a.S_,"\n  query authProviders {\n    authProviders {\n      kind\n    }\n  }\n":a.c1,"\n  mutation tokenAuth($email: String!, $password: String!) {\n    tokenAuth(email: $email, password: $password) {\n      accessToken\n      refreshToken\n    }\n  }\n":a.UO,"\n  mutation register(\n    $name: String!\n    $email: String!\n    $password1: String!\n    $password2: String!\n    $invitationCode: String\n  ) {\n    register(\n      name: $name\n      email: $email\n      password1: $password1\n      password2: $password2\n      invitationCode: $invitationCode\n    ) {\n      accessToken\n      refreshToken\n    }\n  }\n":a.YR,"\n  query RepositoryGrep(\n    $id: ID!\n    $kind: RepositoryKind!\n    $rev: String\n    $query: String!\n  ) {\n    repositoryGrep(kind: $kind, id: $id, rev: $rev, query: $query) {\n      files {\n        path\n        lines {\n          line {\n            text\n            base64\n          }\n          byteOffset\n          lineNumber\n          subMatches {\n            bytesStart\n            bytesEnd\n          }\n        }\n      }\n      elapsedMs\n    }\n  }\n":a.lq,"\n  mutation DeletePage($id: ID!) {\n    deletePage(id: $id)\n  }\n":a.$Q,"\n  mutation updatePageContent($input: UpdatePageContentInput!) {\n    updatePageContent(input: $input)\n  }\n":a.N1,"\n  mutation updatePageTitle($input: UpdatePageTitleInput!) {\n    updatePageTitle(input: $input)\n  }\n":a.vV,"\n  mutation updatePageSectionContent($input: UpdatePageSectionContentInput!) {\n    updatePageSectionContent(input: $input)\n  }\n":a.jG,"\n  mutation updatePageSectionTitle($input: UpdatePageSectionTitleInput!) {\n    updatePageSectionTitle(input: $input)\n  }\n":a.nT,"\n  subscription createThreadToPageRun($input: CreateThreadToPageRunInput!) {\n    createThreadToPageRun(input: $input) {\n      __typename\n      ... on PageCreated {\n        id\n        authorId\n        title\n        debugData {\n          __typename\n          generatePageTitleMessages {\n            role\n            content\n          }\n        }\n      }\n      ... on PageContentDelta {\n        delta\n      }\n      ... on PageContentCompleted {\n        id\n      }\n      ... on PageSectionsCreated {\n        sections {\n          id\n          position\n          title\n        }\n        debugData {\n          __typename\n          generateSectionTitlesMessages {\n            role\n            content\n          }\n        }\n      }\n      ... on PageSectionAttachmentCodeFileList {\n        id\n        codeFileList {\n          __typename\n          fileList\n          truncated\n        }\n      }\n      ... on PageSectionAttachmentCode {\n        id\n        codes {\n          code {\n            __typename\n            gitUrl\n            commit\n            filepath\n            language\n            content\n            startLine\n          }\n          scores {\n            rrf\n            bm25\n            embedding\n          }\n        }\n        debugData {\n          sourceId\n          query\n        }\n      }\n      ... on PageSectionAttachmentDoc {\n        id\n        doc {\n          doc {\n            __typename\n            ... on AttachmentWebDoc {\n              title\n              link\n              content\n            }\n            ... on AttachmentIssueDoc {\n              title\n              link\n              author {\n                id\n                email\n                name\n              }\n              body\n              closed\n            }\n            ... on AttachmentPullDoc {\n              title\n              link\n              author {\n                id\n                email\n                name\n              }\n              body\n              merged\n            }\n            ... on AttachmentCommitDoc {\n              sha\n              message\n              author {\n                id\n                email\n                name\n              }\n              authorAt\n            }\n            ... on AttachmentPageDoc {\n              link\n              title\n              content\n            }\n            ... on AttachmentIngestedDoc {\n              id\n              title\n              body\n              ingestedDocLink: link\n            }\n          }\n          score\n        }\n        debugData {\n          sourceIds\n          query\n        }\n      }\n      ... on PageSectionContentDelta {\n        id\n        delta\n      }\n      ... on PageSectionContentCompleted {\n        id\n        debugData {\n          __typename\n          generateSectionContentMessages {\n            role\n            content\n          }\n        }\n      }\n      ... on PageCompleted {\n        id\n      }\n    }\n  }\n":a.dQ,"\n  subscription createPageRun($input: CreatePageRunInput!) {\n    createPageRun(input: $input) {\n      __typename\n      ... on PageCreated {\n        id\n        authorId\n        title\n        debugData {\n          __typename\n          generatePageTitleMessages {\n            role\n            content\n          }\n        }\n      }\n      ... on PageContentDelta {\n        delta\n      }\n      ... on PageContentCompleted {\n        id\n        debugData {\n          __typename\n          generatePageContentMessages {\n            role\n            content\n          }\n        }\n      }\n      ... on PageSectionsCreated {\n        sections {\n          id\n          position\n          title\n        }\n        debugData {\n          __typename\n          generateSectionTitlesMessages {\n            role\n            content\n          }\n        }\n      }\n      ... on PageSectionAttachmentCodeFileList {\n        id\n        codeFileList {\n          __typename\n          fileList\n          truncated\n        }\n      }\n      ... on PageSectionAttachmentCode {\n        id\n        codes {\n          code {\n            __typename\n            gitUrl\n            commit\n            filepath\n            language\n            content\n            startLine\n          }\n          scores {\n            rrf\n            bm25\n            embedding\n          }\n        }\n        debugData {\n          sourceId\n          query\n        }\n      }\n      ... on PageSectionAttachmentDoc {\n        id\n        doc {\n          doc {\n            __typename\n            ... on AttachmentWebDoc {\n              title\n              link\n              content\n            }\n            ... on AttachmentIssueDoc {\n              title\n              link\n              author {\n                id\n                email\n                name\n              }\n              body\n              closed\n            }\n            ... on AttachmentPullDoc {\n              title\n              link\n              author {\n                id\n                email\n                name\n              }\n              body\n              merged\n            }\n            ... on AttachmentCommitDoc {\n              sha\n              message\n              author {\n                id\n                email\n                name\n              }\n              authorAt\n            }\n            ... on AttachmentPageDoc {\n              link\n              title\n              content\n            }\n            ... on AttachmentIngestedDoc {\n              id\n              title\n              body\n              ingestedDocLink: link\n            }\n          }\n          score\n        }\n        debugData {\n          sourceIds\n          query\n        }\n      }\n      ... on PageSectionContentDelta {\n        id\n        delta\n      }\n      ... on PageSectionContentCompleted {\n        id\n        debugData {\n          __typename\n          generateSectionContentMessages {\n            role\n            content\n          }\n        }\n      }\n      ... on PageCompleted {\n        id\n      }\n    }\n  }\n":a.BX,"\n  subscription createPageSectionRun($input: CreatePageSectionRunInput!) {\n    createPageSectionRun(input: $input) {\n      __typename\n      ... on PageSectionCreated {\n        id\n        title\n        position\n        debugData {\n          __typename\n          generateSectionTitlesMessages {\n            role\n            content\n          }\n        }\n      }\n      ... on PageSectionAttachmentCodeFileList {\n        id\n        codeFileList {\n          fileList\n          truncated\n        }\n      }\n      ... on PageSectionAttachmentCode {\n        id\n        codes {\n          code {\n            __typename\n            gitUrl\n            commit\n            filepath\n            language\n            content\n            startLine\n          }\n          scores {\n            rrf\n            bm25\n            embedding\n          }\n        }\n        debugData {\n          sourceId\n          query\n        }\n      }\n      ... on PageSectionAttachmentDoc {\n        id\n        doc {\n          doc {\n            __typename\n            ... on AttachmentWebDoc {\n              title\n              link\n              content\n            }\n            ... on AttachmentIssueDoc {\n              title\n              link\n              author {\n                id\n                email\n                name\n              }\n              body\n              closed\n            }\n            ... on AttachmentPullDoc {\n              title\n              link\n              author {\n                id\n                email\n                name\n              }\n              body\n              merged\n            }\n            ... on AttachmentCommitDoc {\n              sha\n              message\n              author {\n                id\n                email\n                name\n              }\n              authorAt\n            }\n            ... on AttachmentPageDoc {\n              link\n              title\n              content\n            }\n            ... on AttachmentIngestedDoc {\n              id\n              title\n              body\n              ingestedDocLink: link\n            }\n          }\n          score\n        }\n        debugData {\n          sourceIds\n          query\n        }\n      }\n      ... on PageSectionContentDelta {\n        id\n        delta\n      }\n      ... on PageSectionContentCompleted {\n        id\n        debugData {\n          __typename\n          generateSectionContentMessages {\n            role\n            content\n          }\n        }\n      }\n    }\n  }\n":a.js,"\n  mutation DeletePageSection($sectionId: ID!) {\n    deletePageSection(sectionId: $sectionId)\n  }\n":a.$g,"\n  mutation movePageSection($id: ID!, $direction: MoveSectionDirection!) {\n    movePageSection(id: $id, direction: $direction)\n  }\n":a.nA,"\n  mutation UpdateThreadMessage($input: UpdateMessageInput!) {\n    updateThreadMessage(input: $input)\n  }\n":a.Tj,"\n  mutation markNotificationsRead($notificationId: ID) {\n    markNotificationsRead(notificationId: $notificationId)\n  }\n":a.yR,"\n  mutation ResetUserAuthToken {\n    resetUserAuthToken\n  }\n":a.qq,"\n  query GetLicenseInfo {\n    license {\n      type\n      status\n      seats\n      seatsUsed\n      issuedAt\n      expiresAt\n    }\n  }\n":a.eZ,"\n  query MeQuery {\n    me {\n      id\n      email\n      name\n      isAdmin\n      isOwner\n      authToken\n      isPasswordSet\n      isSsoUser\n    }\n  }\n":a.fk,"\n  query NetworkSetting {\n    networkSetting {\n      externalUrl\n    }\n  }\n":a.m2,"\n  query GetServerInfo {\n    serverInfo {\n      isAdminInitialized\n      isEmailConfigured\n      isChatEnabled\n      allowSelfSignup\n      isDemoMode\n      disablePasswordLogin\n    }\n  }\n":a.a,"\n  query DailyStatsInPastYear($users: [ID!]) {\n    dailyStatsInPastYear(users: $users) {\n      __typename\n      start\n      end\n      completions\n      selects\n      views\n    }\n  }\n":a.Wd,"\n  query ChatDailyStats($start: DateTime!, $end: DateTime!, $users: [ID!]) {\n    chatDailyStats(start: $start, end: $end, users: $users) {\n      start\n      end\n      chats\n    }\n  }\n":a.Kw,"\n  query chatDailyStatsInPastYear($users: [ID!]) {\n    chatDailyStatsInPastYear(users: $users) {\n      __typename\n      start\n      end\n      chats\n    }\n  }\n":a.WX,"\n  query DailyStats(\n    $start: DateTime!\n    $end: DateTime!\n    $users: [ID!]\n    $languages: [Language!]\n  ) {\n    dailyStats(start: $start, end: $end, users: $users, languages: $languages) {\n      start\n      end\n      completions\n      selects\n      views\n      language\n    }\n  }\n":a.Sm,"\n  subscription CreateThreadAndRun($input: CreateThreadAndRunInput!) {\n    createThreadAndRun(input: $input) {\n      __typename\n      ... on ThreadCreated {\n        id\n      }\n      ... on ThreadUserMessageCreated {\n        id\n      }\n      ... on ThreadAssistantMessageCreated {\n        id\n      }\n      ... on ThreadAssistantMessageReadingCode {\n        snippet\n        fileList\n      }\n      ... on ThreadAssistantMessageReadingDoc {\n        sourceIds\n      }\n      ... on ThreadRelevantQuestions {\n        questions\n      }\n      ... on ThreadAssistantMessageAttachmentsCodeFileList {\n        codeFileList: fileList\n        truncated\n      }\n      ... on ThreadAssistantMessageAttachmentsCode {\n        hits {\n          code {\n            gitUrl\n            commit\n            filepath\n            language\n            content\n            startLine\n          }\n          scores {\n            rrf\n            bm25\n            embedding\n          }\n        }\n      }\n      ... on ThreadAssistantMessageAttachmentsDoc {\n        hits {\n          doc {\n            __typename\n            ... on MessageAttachmentWebDoc {\n              title\n              link\n              content\n            }\n            ... on MessageAttachmentIssueDoc {\n              title\n              link\n              author {\n                id\n                email\n                name\n              }\n              body\n              closed\n            }\n            ... on MessageAttachmentPullDoc {\n              title\n              link\n              author {\n                id\n                email\n                name\n              }\n              body\n              merged\n            }\n            ... on MessageAttachmentCommitDoc {\n              sha\n              message\n              author {\n                id\n                email\n                name\n              }\n              authorAt\n            }\n            ... on MessageAttachmentPageDoc {\n              link\n              title\n              content\n            }\n            ... on MessageAttachmentIngestedDoc {\n              id\n              title\n              body\n              ingestedDocLink: link\n            }\n          }\n          score\n        }\n      }\n      ... on ThreadAssistantMessageContentDelta {\n        delta\n      }\n      ... on ThreadAssistantMessageCompleted {\n        debugData {\n          chatCompletionMessages {\n            role\n            content\n          }\n        }\n      }\n    }\n  }\n":a.VL,"\n  subscription CreateThreadRun($input: CreateThreadRunInput!) {\n    createThreadRun(input: $input) {\n      __typename\n      ... on ThreadCreated {\n        id\n      }\n      ... on ThreadUserMessageCreated {\n        id\n      }\n      ... on ThreadAssistantMessageCreated {\n        id\n      }\n      ... on ThreadAssistantMessageReadingCode {\n        snippet\n        fileList\n      }\n      ... on ThreadAssistantMessageReadingDoc {\n        sourceIds\n      }\n      ... on ThreadRelevantQuestions {\n        questions\n      }\n      ... on ThreadAssistantMessageAttachmentsCodeFileList {\n        codeFileList: fileList\n        truncated\n      }\n      ... on ThreadAssistantMessageAttachmentsCode {\n        hits {\n          code {\n            gitUrl\n            commit\n            filepath\n            language\n            content\n            startLine\n          }\n          scores {\n            rrf\n            bm25\n            embedding\n          }\n        }\n      }\n      ... on ThreadAssistantMessageAttachmentsDoc {\n        hits {\n          doc {\n            __typename\n            ... on MessageAttachmentWebDoc {\n              title\n              link\n              content\n            }\n            ... on MessageAttachmentIssueDoc {\n              title\n              link\n              author {\n                id\n                email\n                name\n              }\n              body\n              closed\n            }\n            ... on MessageAttachmentPullDoc {\n              title\n              link\n              author {\n                id\n                email\n                name\n              }\n              body\n              merged\n            }\n            ... on MessageAttachmentCommitDoc {\n              sha\n              message\n              author {\n                id\n                email\n                name\n              }\n              authorAt\n            }\n            ... on MessageAttachmentPageDoc {\n              link\n              title\n              content\n            }\n            ... on MessageAttachmentIngestedDoc {\n              id\n              title\n              body\n              ingestedDocLink: link\n            }\n          }\n          score\n        }\n      }\n      ... on ThreadAssistantMessageContentDelta {\n        delta\n      }\n      ... on ThreadAssistantMessageCompleted {\n        debugData {\n          chatCompletionMessages {\n            role\n            content\n          }\n        }\n      }\n    }\n  }\n":a.uM,"\n  mutation DeleteThreadMessagePair(\n    $threadId: ID!\n    $userMessageId: ID!\n    $assistantMessageId: ID!\n  ) {\n    deleteThreadMessagePair(\n      threadId: $threadId\n      userMessageId: $userMessageId\n      assistantMessageId: $assistantMessageId\n    )\n  }\n":a.ou,"\n  mutation refreshToken($refreshToken: String!) {\n    refreshToken(refreshToken: $refreshToken) {\n      accessToken\n      refreshToken\n    }\n  }\n":a.FR,"\n  mutation LogoutAllSessions {\n    logoutAllSessions\n  }\n":a.Il,"\n  query ListInvitations(\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    invitations(after: $after, before: $before, first: $first, last: $last) {\n      edges {\n        node {\n          id\n          email\n          code\n          createdAt\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":a.Xx,"\n  query gitRepositories(\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    gitRepositories(\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          name\n          gitUrl\n          sourceId\n          jobInfo {\n            lastJobRun {\n              id\n              job\n              createdAt\n              finishedAt\n              exitCode\n            }\n            command\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":a.Mi,"\n  query ListJobRuns(\n    $ids: [ID!]\n    $jobs: [String!]\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    jobRuns(\n      ids: $ids\n      jobs: $jobs\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          job\n          createdAt\n          startedAt\n          finishedAt\n          exitCode\n          stdout\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":a.$S,"\n  query GetJobRunStats($jobs: [String!]) {\n    jobRunStats(jobs: $jobs) {\n      success\n      failed\n      pending\n    }\n  }\n":a.np,"\n  query ListJobs {\n    jobs\n  }\n":a.Ax,"\n  query ListUsers(\n    $ids: [ID!]\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    users(\n      ids: $ids\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          email\n          isAdmin\n          isOwner\n          createdAt\n          active\n          name\n          isSsoUser\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":a.by,"\n  query ListIntegrations(\n    $ids: [ID!]\n    $kind: IntegrationKind\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    integrations(\n      ids: $ids\n      kind: $kind\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          displayName\n          status\n          apiBase\n          message\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":a.KZ,"\n  query ListIntegratedRepositories(\n    $ids: [ID!]\n    $kind: IntegrationKind\n    $active: Boolean\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    integratedRepositories(\n      ids: $ids\n      kind: $kind\n      active: $active\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          displayName\n          gitUrl\n          active\n          sourceId\n          jobInfo {\n            lastJobRun {\n              id\n              job\n              createdAt\n              finishedAt\n              startedAt\n              exitCode\n            }\n            command\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":a.qt,"\n  query RepositoryList {\n    repositoryList {\n      id\n      name\n      kind\n      gitUrl\n      refs {\n        name\n        commit\n      }\n    }\n  }\n":a.HC,"\n  query RepositorySearch(\n    $kind: RepositoryKind!\n    $id: ID!\n    $rev: String\n    $pattern: String!\n  ) {\n    repositorySearch(kind: $kind, id: $id, rev: $rev, pattern: $pattern) {\n      type\n      path\n      indices\n    }\n  }\n":a.BH,"\n  query ContextInfo {\n    contextInfo {\n      sources {\n        id\n        sourceKind\n        sourceId\n        sourceName\n      }\n    }\n  }\n":a.w4,"\n  query UserGroups {\n    userGroups {\n      id\n      name\n      createdAt\n      updatedAt\n      members {\n        user {\n          id\n          email\n          name\n          createdAt\n        }\n        isGroupAdmin\n        createdAt\n        updatedAt\n      }\n    }\n  }\n":a.hx,"\n  query sourceIdAccessPolicies($sourceId: String!) {\n    sourceIdAccessPolicies(sourceId: $sourceId) {\n      sourceId\n      read {\n        id\n        name\n      }\n    }\n  }\n":a.NL,"\n  query ListThreads(\n    $ids: [ID!]\n    $isEphemeral: Boolean\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    threads(\n      ids: $ids\n      isEphemeral: $isEphemeral\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          userId\n          isEphemeral\n          createdAt\n          updatedAt\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":a.qk,"\n  query ListMyThreads(\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    myThreads(after: $after, before: $before, first: $first, last: $last) {\n      edges {\n        node {\n          id\n          userId\n          isEphemeral\n          createdAt\n          updatedAt\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":a.Dd,"\n  query ListThreadMessages(\n    $threadId: ID!\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    threadMessages(\n      threadId: $threadId\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          threadId\n          codeSourceId\n          role\n          content\n          attachment {\n            code {\n              gitUrl\n              commit\n              filepath\n              language\n              content\n              startLine\n            }\n            clientCode {\n              filepath\n              content\n              startLine\n            }\n            doc {\n              __typename\n              ... on MessageAttachmentWebDoc {\n                title\n                link\n                content\n              }\n              ... on MessageAttachmentIssueDoc {\n                title\n                link\n                author {\n                  id\n                  email\n                  name\n                }\n                body\n                closed\n              }\n              ... on MessageAttachmentPullDoc {\n                title\n                link\n                author {\n                  id\n                  email\n                  name\n                }\n                body\n                merged\n              }\n              ... on MessageAttachmentCommitDoc {\n                sha\n                message\n                author {\n                  id\n                  email\n                  name\n                }\n                authorAt\n              }\n              ... on MessageAttachmentPageDoc {\n                title\n                link\n                content\n              }\n              ... on MessageAttachmentIngestedDoc {\n                id\n                title\n                body\n                ingestedDocLink: link\n              }\n            }\n            codeFileList {\n              fileList\n              truncated\n            }\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":a.f7,"\n  mutation SetThreadPersisted($threadId: ID!) {\n    setThreadPersisted(threadId: $threadId)\n  }\n":a.qu,"\n  mutation DeleteThread($id: ID!) {\n    deleteThread(id: $id)\n  }\n":a.xW,"\n  query Notifications {\n    notifications {\n      id\n      content\n      read\n      createdAt\n    }\n  }\n":a.Qw,"\n  query LdapCredential {\n    ldapCredential {\n      host\n      port\n      bindDn\n      baseDn\n      userFilter\n      encryption\n      skipTlsVerify\n      emailAttribute\n      nameAttribute\n      createdAt\n      updatedAt\n    }\n  }\n":a.Ee,"\n  query OAuthCredential($provider: OAuthProvider!) {\n    oauthCredential(provider: $provider) {\n      provider\n      clientId\n      createdAt\n      updatedAt\n    }\n  }\n":a.Fd,"\n  query RepositorySourceList {\n    repositoryList {\n      id\n      name\n      kind\n      gitUrl\n      sourceId\n      sourceName\n      sourceKind\n    }\n  }\n":a.mO,"\n  query ListPages(\n    $ids: [ID!]\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    pages(\n      ids: $ids\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          authorId\n          title\n          codeSourceId\n          content\n          createdAt\n          updatedAt\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":a.fv,"\n  query ListPageSections(\n    $pageId: ID!\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    pageSections(\n      pageId: $pageId\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          pageId\n          title\n          content\n          position\n          attachments {\n            code {\n              __typename\n              gitUrl\n              commit\n              filepath\n              language\n              content\n              startLine\n            }\n            codeFileList {\n              __typename\n              fileList\n              truncated\n            }\n            doc {\n              __typename\n              ... on AttachmentWebDoc {\n                title\n                link\n                content\n              }\n              ... on AttachmentIssueDoc {\n                title\n                link\n                author {\n                  id\n                  email\n                  name\n                }\n                body\n                closed\n              }\n              ... on AttachmentPullDoc {\n                title\n                link\n                author {\n                  id\n                  email\n                  name\n                }\n                body\n                merged\n              }\n              ... on AttachmentCommitDoc {\n                sha\n                message\n                author {\n                  id\n                  email\n                  name\n                }\n                authorAt\n              }\n              ... on AttachmentPageDoc {\n                link\n                title\n                content\n              }\n              ... on AttachmentIngestedDoc {\n                id\n                title\n                body\n                ingestedDocLink: link\n              }\n            }\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":a.$N};function s(n){var e;return null!==(e=i[n])&&void 0!==e?e:{}}},43240:function(n,e,t){t.d(e,{BX:function(){return a.B}});var a=t(75561)},70410:function(n,e,t){t.d(e,{D7:function(){return $},DQ:function(){return d},GG:function(){return r},Gx:function(){return m},K5:function(){return C},Ry:function(){return P},S1:function(){return s},TH:function(){return u},XL:function(){return h},bP:function(){return v},g0:function(){return S},gI:function(){return p},hA:function(){return f},kb:function(){return c},lE:function(){return i},md:function(){return A},r4:function(){return b},rm:function(){return I},ts:function(){return l},u5:function(){return k},wz:function(){return D},yB:function(){return o},zW:function(){return y},zz:function(){return g}});var a=t(43240);let i=(0,a.BX)("\n  query ListInvitations(\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    invitations(after: $after, before: $before, first: $first, last: $last) {\n      edges {\n        node {\n          id\n          email\n          code\n          createdAt\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n"),s=(0,a.BX)("\n  query gitRepositories(\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    gitRepositories(\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          name\n          gitUrl\n          sourceId\n          jobInfo {\n            lastJobRun {\n              id\n              job\n              createdAt\n              finishedAt\n              exitCode\n            }\n            command\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n"),r=(0,a.BX)("\n  query ListJobRuns(\n    $ids: [ID!]\n    $jobs: [String!]\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    jobRuns(\n      ids: $ids\n      jobs: $jobs\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          job\n          createdAt\n          startedAt\n          finishedAt\n          exitCode\n          stdout\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n"),o=(0,a.BX)("\n  query GetJobRunStats($jobs: [String!]) {\n    jobRunStats(jobs: $jobs) {\n      success\n      failed\n      pending\n    }\n  }\n"),d=(0,a.BX)("\n  query ListJobs {\n    jobs\n  }\n"),u=(0,a.BX)("\n  query ListUsers(\n    $ids: [ID!]\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    users(\n      ids: $ids\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          email\n          isAdmin\n          isOwner\n          createdAt\n          active\n          name\n          isSsoUser\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n"),c=(0,a.BX)("\n  query ListIntegrations(\n    $ids: [ID!]\n    $kind: IntegrationKind\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    integrations(\n      ids: $ids\n      kind: $kind\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          displayName\n          status\n          apiBase\n          message\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n"),l=(0,a.BX)("\n  query ListIntegratedRepositories(\n    $ids: [ID!]\n    $kind: IntegrationKind\n    $active: Boolean\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    integratedRepositories(\n      ids: $ids\n      kind: $kind\n      active: $active\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          displayName\n          gitUrl\n          active\n          sourceId\n          jobInfo {\n            lastJobRun {\n              id\n              job\n              createdAt\n              finishedAt\n              startedAt\n              exitCode\n            }\n            command\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n"),g=(0,a.BX)("\n  query RepositoryList {\n    repositoryList {\n      id\n      name\n      kind\n      gitUrl\n      refs {\n        name\n        commit\n      }\n    }\n  }\n"),$=(0,a.BX)("\n  query RepositorySearch(\n    $kind: RepositoryKind!\n    $id: ID!\n    $rev: String\n    $pattern: String!\n  ) {\n    repositorySearch(kind: $kind, id: $id, rev: $rev, pattern: $pattern) {\n      type\n      path\n      indices\n    }\n  }\n"),m=(0,a.BX)("\n  query ContextInfo {\n    contextInfo {\n      sources {\n        id\n        sourceKind\n        sourceId\n        sourceName\n      }\n    }\n  }\n"),p=(0,a.BX)("\n  query UserGroups {\n    userGroups {\n      id\n      name\n      createdAt\n      updatedAt\n      members {\n        user {\n          id\n          email\n          name\n          createdAt\n        }\n        isGroupAdmin\n        createdAt\n        updatedAt\n      }\n    }\n  }\n"),f=(0,a.BX)("\n  query sourceIdAccessPolicies($sourceId: String!) {\n    sourceIdAccessPolicies(sourceId: $sourceId) {\n      sourceId\n      read {\n        id\n        name\n      }\n    }\n  }\n"),h=(0,a.BX)("\n  query ListThreads(\n    $ids: [ID!]\n    $isEphemeral: Boolean\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    threads(\n      ids: $ids\n      isEphemeral: $isEphemeral\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          userId\n          isEphemeral\n          createdAt\n          updatedAt\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n"),I=(0,a.BX)("\n  query ListMyThreads(\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    myThreads(after: $after, before: $before, first: $first, last: $last) {\n      edges {\n        node {\n          id\n          userId\n          isEphemeral\n          createdAt\n          updatedAt\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n"),b=(0,a.BX)("\n  query ListThreadMessages(\n    $threadId: ID!\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    threadMessages(\n      threadId: $threadId\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          threadId\n          codeSourceId\n          role\n          content\n          attachment {\n            code {\n              gitUrl\n              commit\n              filepath\n              language\n              content\n              startLine\n            }\n            clientCode {\n              filepath\n              content\n              startLine\n            }\n            doc {\n              __typename\n              ... on MessageAttachmentWebDoc {\n                title\n                link\n                content\n              }\n              ... on MessageAttachmentIssueDoc {\n                title\n                link\n                author {\n                  id\n                  email\n                  name\n                }\n                body\n                closed\n              }\n              ... on MessageAttachmentPullDoc {\n                title\n                link\n                author {\n                  id\n                  email\n                  name\n                }\n                body\n                merged\n              }\n              ... on MessageAttachmentCommitDoc {\n                sha\n                message\n                author {\n                  id\n                  email\n                  name\n                }\n                authorAt\n              }\n              ... on MessageAttachmentPageDoc {\n                title\n                link\n                content\n              }\n              ... on MessageAttachmentIngestedDoc {\n                id\n                title\n                body\n                ingestedDocLink: link\n              }\n            }\n            codeFileList {\n              fileList\n              truncated\n            }\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n"),A=(0,a.BX)("\n  mutation SetThreadPersisted($threadId: ID!) {\n    setThreadPersisted(threadId: $threadId)\n  }\n"),y=(0,a.BX)("\n  mutation DeleteThread($id: ID!) {\n    deleteThread(id: $id)\n  }\n"),S=(0,a.BX)("\n  query Notifications {\n    notifications {\n      id\n      content\n      read\n      createdAt\n    }\n  }\n"),D=(0,a.BX)("\n  query LdapCredential {\n    ldapCredential {\n      host\n      port\n      bindDn\n      baseDn\n      userFilter\n      encryption\n      skipTlsVerify\n      emailAttribute\n      nameAttribute\n      createdAt\n      updatedAt\n    }\n  }\n"),P=(0,a.BX)("\n  query OAuthCredential($provider: OAuthProvider!) {\n    oauthCredential(provider: $provider) {\n      provider\n      clientId\n      createdAt\n      updatedAt\n    }\n  }\n"),C=(0,a.BX)("\n  query RepositorySourceList {\n    repositoryList {\n      id\n      name\n      kind\n      gitUrl\n      sourceId\n      sourceName\n      sourceKind\n    }\n  }\n"),k=(0,a.BX)("\n  query ListPages(\n    $ids: [ID!]\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    pages(\n      ids: $ids\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          authorId\n          title\n          codeSourceId\n          content\n          createdAt\n          updatedAt\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n"),v=(0,a.BX)("\n  query ListPageSections(\n    $pageId: ID!\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    pageSections(\n      pageId: $pageId\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          pageId\n          title\n          content\n          position\n          attachments {\n            code {\n              __typename\n              gitUrl\n              commit\n              filepath\n              language\n              content\n              startLine\n            }\n            codeFileList {\n              __typename\n              fileList\n              truncated\n            }\n            doc {\n              __typename\n              ... on AttachmentWebDoc {\n                title\n                link\n                content\n              }\n              ... on AttachmentIssueDoc {\n                title\n                link\n                author {\n                  id\n                  email\n                  name\n                }\n                body\n                closed\n              }\n              ... on AttachmentPullDoc {\n                title\n                link\n                author {\n                  id\n                  email\n                  name\n                }\n                body\n                merged\n              }\n              ... on AttachmentCommitDoc {\n                sha\n                message\n                author {\n                  id\n                  email\n                  name\n                }\n                authorAt\n              }\n              ... on AttachmentPageDoc {\n                link\n                title\n                content\n              }\n              ... on AttachmentIngestedDoc {\n                id\n                title\n                body\n                ingestedDocLink: link\n              }\n            }\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n")}}]);