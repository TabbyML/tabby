"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1363,3240],{48537:function(n,e,t){t.d(e,{q:function(){return o}});var a=t(36164);t(3546);var r=t(28312),i=t(31458),s=t(81565);function o(n){let{className:e,value:t,onCopyContent:o,text:d,...u}=n,{isCopied:l,copyToClipboard:c}=(0,r.m)({timeout:2e3,onCopyContent:o});return t?(0,a.jsxs)(i.z,{variant:"ghost",size:d?"default":"icon",className:e,onClick:()=>{l||c(t)},...u,children:[l?(0,a.jsx)(s.IconCheck,{className:"text-green-600"}):(0,a.jsx)(s.IconCopy,{}),d&&(0,a.jsx)("span",{children:d}),!d&&(0,a.jsx)("span",{className:"sr-only",children:"Copy"})]}):null}},90379:function(n,e,t){t.d(e,{PF:function(){return d},cg:function(){return s},tB:function(){return o}});var a=t(36164),r=t(57288),i=t(3448);let s=n=>{let{className:e,...t}=n;return(0,a.jsxs)("div",{className:(0,r.cn)("space-y-3",e),...t,children:[(0,a.jsx)(i.O,{className:"h-4 w-full"}),(0,a.jsx)(i.O,{className:"h-4 w-full"}),(0,a.jsx)(i.O,{className:"h-4 w-full"}),(0,a.jsx)(i.O,{className:"h-4 w-full"})]})},o=n=>{let{className:e,...t}=n;return(0,a.jsx)(i.O,{className:(0,r.cn)("h-4 w-full",e),...t})},d=n=>{let{className:e,...t}=n;return(0,a.jsxs)("div",{className:(0,r.cn)("flex flex-col gap-3",e),...t,children:[(0,a.jsx)(i.O,{className:"h-4 w-[20%]"}),(0,a.jsx)(i.O,{className:"h-4 w-full"}),(0,a.jsx)(i.O,{className:"h-4 w-[20%]"}),(0,a.jsx)(i.O,{className:"h-4 w-full"})]})}},36065:function(n,e,t){t.d(e,{di:function(){return f},e8:function(){return l},fu:function(){return p},mY:function(){return d},rb:function(){return c},sZ:function(){return u},zz:function(){return m}});var a=t(36164),r=t(3546),i=t(53241),s=t(93170),o=t(57288);t(30220);let d=r.forwardRef((n,e)=>{let{className:t,...r}=n;return(0,a.jsx)(i.mY,{ref:e,className:(0,o.cn)("flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground",t),...r})});d.displayName=i.mY.displayName;let u=r.forwardRef((n,e)=>{let{className:t,...r}=n;return(0,a.jsxs)("div",{className:"flex items-center border-b px-3","cmdk-input-wrapper":"",children:[(0,a.jsx)(s.Z,{className:"mr-2 h-4 w-4 shrink-0 opacity-50"}),(0,a.jsx)(i.mY.Input,{ref:e,className:(0,o.cn)("flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50",t),...r})]})});u.displayName=i.mY.Input.displayName;let l=r.forwardRef((n,e)=>{let{className:t,...r}=n;return(0,a.jsx)(i.mY.List,{ref:e,className:(0,o.cn)("max-h-[300px] overflow-y-auto overflow-x-hidden",t),...r})});l.displayName=i.mY.List.displayName;let c=r.forwardRef((n,e)=>(0,a.jsx)(i.mY.Empty,{ref:e,className:"py-6 text-center text-sm",...n}));c.displayName=i.mY.Empty.displayName;let p=r.forwardRef((n,e)=>{let{className:t,...r}=n;return(0,a.jsx)(i.mY.Group,{ref:e,className:(0,o.cn)("overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground",t),...r})});p.displayName=i.mY.Group.displayName;let m=r.forwardRef((n,e)=>{let{className:t,...r}=n;return(0,a.jsx)(i.mY.Separator,{ref:e,className:(0,o.cn)("-mx-1 h-px bg-border",t),...r})});m.displayName=i.mY.Separator.displayName;let f=r.forwardRef((n,e)=>{let{className:t,...r}=n;return(0,a.jsx)(i.mY.Item,{ref:e,className:(0,o.cn)("relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none aria-disabled:pointer-events-none aria-disabled:opacity-50 aria-selected:bg-accent aria-selected:text-accent-foreground",t),...r})});f.displayName=i.mY.Item.displayName},30220:function(n,e,t){t.d(e,{$N:function(){return g},Be:function(){return $},Vq:function(){return d},cN:function(){return f},cZ:function(){return p},fK:function(){return m},hg:function(){return u}});var a=t(36164),r=t(3546),i=t(4318),s=t(1663),o=t(57288);let d=i.fC,u=i.xz,l=i.h_;i.x8;let c=r.forwardRef((n,e)=>{let{className:t,...r}=n;return(0,a.jsx)(i.aV,{ref:e,className:(0,o.cn)("fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",t),...r})});c.displayName=i.aV.displayName;let p=r.forwardRef((n,e)=>{let{className:t,children:r,...d}=n;return(0,a.jsxs)(l,{children:[(0,a.jsx)(c,{}),(0,a.jsxs)(i.VY,{ref:e,className:(0,o.cn)("fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",t),...d,children:[r,(0,a.jsxs)(i.x8,{className:"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground",children:[(0,a.jsx)(s.Z,{className:"h-4 w-4"}),(0,a.jsx)("span",{className:"sr-only",children:"Close"})]})]})]})});p.displayName=i.VY.displayName;let m=n=>{let{className:e,...t}=n;return(0,a.jsx)("div",{className:(0,o.cn)("flex flex-col space-y-1.5 text-center sm:text-left",e),...t})};m.displayName="DialogHeader";let f=n=>{let{className:e,...t}=n;return(0,a.jsx)("div",{className:(0,o.cn)("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",e),...t})};f.displayName="DialogFooter";let g=r.forwardRef((n,e)=>{let{className:t,...r}=n;return(0,a.jsx)(i.Dx,{ref:e,className:(0,o.cn)("text-lg font-semibold leading-none tracking-tight",t),...r})});g.displayName=i.Dx.displayName;let $=r.forwardRef((n,e)=>{let{className:t,...r}=n;return(0,a.jsx)(i.dk,{ref:e,className:(0,o.cn)("text-sm text-muted-foreground",t),...r})});$.displayName=i.dk.displayName},84942:function(n,e,t){t.d(e,{J2:function(){return o},xo:function(){return d},yk:function(){return u}});var a=t(36164),r=t(3546),i=t(83299),s=t(57288);let o=i.fC,d=i.xz;i.x8,i.h_,i.ee;let u=r.forwardRef((n,e)=>{let{className:t,sideOffset:r=4,...o}=n;return(0,a.jsx)(i.VY,{ref:e,sideOffset:r,className:(0,s.cn)("z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow animate-in data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",t),...o})});u.displayName=i.VY.displayName},11208:function(n,e,t){t.d(e,{Z:function(){return o}});var a=t(36164),r=t(3546),i=t(74225),s=t(57288);let o=r.forwardRef((n,e)=>{let{className:t,orientation:r="horizontal",decorative:o=!0,...d}=n;return(0,a.jsx)(i.f,{ref:e,decorative:o,orientation:r,className:(0,s.cn)("shrink-0 bg-border","horizontal"===r?"h-[1px] w-full":"h-full w-[1px]",t),...d})});o.displayName=i.f.displayName},3448:function(n,e,t){t.d(e,{O:function(){return i}});var a=t(36164),r=t(57288);function i(n){let{className:e,...t}=n;return(0,a.jsx)("div",{className:(0,r.cn)("h-4 animate-pulse rounded-md bg-border",e),...t})}},29:function(n,e,t){t.d(e,{_v:function(){return l},aJ:function(){return u},pn:function(){return o},u:function(){return d}});var a=t(36164),r=t(3546),i=t(44421),s=t(57288);let o=i.zt,d=i.fC,u=i.xz;i.h_;let l=r.forwardRef((n,e)=>{let{className:t,sideOffset:r=4,...o}=n;return(0,a.jsx)(i.VY,{ref:e,sideOffset:r,className:(0,s.cn)("z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-xs font-medium text-popover-foreground shadow-md animate-in fade-in-50 data-[side=bottom]:slide-in-from-top-1 data-[side=left]:slide-in-from-right-1 data-[side=right]:slide-in-from-left-1 data-[side=top]:slide-in-from-bottom-1",t),...o})});l.displayName=i.VY.displayName},75561:function(n,e,t){t.d(e,{B:function(){return i}});var a=t(18500);let r={"\n  query ListUserEvents(\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n    $start: DateTime!\n    $end: DateTime!\n    $users: [ID!]\n  ) {\n    userEvents(\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n      start: $start\n      end: $end\n      users: $users\n    ) {\n      edges {\n        node {\n          id\n          userId\n          createdAt\n          kind\n          payload\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":a.UQ,"\n  mutation uploadUserAvatarBase64($id: ID!, $avatarBase64: String!) {\n    uploadUserAvatarBase64(id: $id, avatarBase64: $avatarBase64)\n  }\n":a.eI,"\n  mutation UpdateUserName($id: ID!, $name: String!) {\n    updateUserName(id: $id, name: $name)\n  }\n":a.DQ,"\n  mutation PasswordChange($input: PasswordChangeInput!) {\n    passwordChange(input: $input)\n  }\n":a.oZ,"\n  mutation updateEmailSetting($input: EmailSettingInput!) {\n    updateEmailSetting(input: $input)\n  }\n":a.gl,"\n  mutation deleteEmailSetting {\n    deleteEmailSetting\n  }\n":a.wZ,"\n  mutation SendTestEmail($to: String!) {\n    sendTestEmail(to: $to)\n  }\n":a.nI,"\n  query emailSetting {\n    emailSetting {\n      smtpUsername\n      smtpServer\n      fromAddress\n      encryption\n      authMethod\n      smtpPort\n    }\n  }\n":a.k6,"\n  mutation UpdateIntegration($input: UpdateIntegrationInput!) {\n    updateIntegration(input: $input)\n  }\n":a.fc,"\n  mutation DeleteIntegration($id: ID!, $kind: IntegrationKind!) {\n    deleteIntegration(id: $id, kind: $kind)\n  }\n":a.AU,"\n  mutation UpdateIntegratedRepositoryActive($id: ID!, $active: Boolean!) {\n    updateIntegratedRepositoryActive(id: $id, active: $active)\n  }\n":a.o7,"\n  mutation CreateIntegration($input: CreateIntegrationInput!) {\n    createIntegration(input: $input)\n  }\n":a.fY,"\n  mutation grantSourceIdReadAccess($sourceId: String!, $userGroupId: ID!) {\n    grantSourceIdReadAccess(sourceId: $sourceId, userGroupId: $userGroupId)\n  }\n":a.Yr,"\n  mutation revokeSourceIdReadAccess($sourceId: String!, $userGroupId: ID!) {\n    revokeSourceIdReadAccess(sourceId: $sourceId, userGroupId: $userGroupId)\n  }\n":a.z,"\n  mutation CreateCustomDocument($input: CreateCustomDocumentInput!) {\n    createCustomDocument(input: $input)\n  }\n":a.Gf,"\n  query CustomWebDocuments(\n    $ids: [ID!]\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    customWebDocuments(\n      ids: $ids\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          url\n          name\n          id\n          sourceId\n          jobInfo {\n            lastJobRun {\n              id\n              job\n              createdAt\n              finishedAt\n              exitCode\n            }\n            command\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":a.wx,"\n  mutation DeleteCustomDocument($id: ID!) {\n    deleteCustomDocument(id: $id)\n  }\n":a.c3,"\n  query PresetWebDocuments(\n    $ids: [ID!]\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n    $isActive: Boolean\n  ) {\n    presetWebDocuments(\n      ids: $ids\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n      isActive: $isActive\n    ) {\n      edges {\n        node {\n          id\n          name\n          isActive\n          sourceId\n          jobInfo {\n            lastJobRun {\n              id\n              job\n              createdAt\n              finishedAt\n              exitCode\n            }\n            command\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":a.z1,"\n  mutation SetPresetDocumentActive($input: SetPresetDocumentActiveInput!) {\n    setPresetDocumentActive(input: $input)\n  }\n":a.h_,"\n  mutation deleteGitRepository($id: ID!) {\n    deleteGitRepository(id: $id)\n  }\n":a.TS,"\n  mutation createGitRepository($name: String!, $gitUrl: String!) {\n    createGitRepository(name: $name, gitUrl: $gitUrl)\n  }\n":a.ad,"\n  mutation triggerJobRun($command: String!) {\n    triggerJobRun(command: $command)\n  }\n":a.uk,"\n  mutation testLdapConnection($input: UpdateLdapCredentialInput!) {\n    testLdapConnection(input: $input)\n  }\n":a.rL,"\n  mutation updateLdapCredential($input: UpdateLdapCredentialInput!) {\n    updateLdapCredential(input: $input)\n  }\n":a.xn,"\n  mutation deleteLdapCredential {\n    deleteLdapCredential\n  }\n":a.X6,"\n  mutation updateOauthCredential($input: UpdateOAuthCredentialInput!) {\n    updateOauthCredential(input: $input)\n  }\n":a.m,"\n  mutation deleteOauthCredential($provider: OAuthProvider!) {\n    deleteOauthCredential(provider: $provider)\n  }\n":a.ZH,"\n  query OAuthCallbackUrl($provider: OAuthProvider!) {\n    oauthCallbackUrl(provider: $provider)\n  }\n":a.L$,"\n  mutation updateNetworkSettingMutation($input: NetworkSettingInput!) {\n    updateNetworkSetting(input: $input)\n  }\n":a.rN,"\n  mutation updateSecuritySetting($input: SecuritySettingInput!) {\n    updateSecuritySetting(input: $input)\n  }\n":a.Nl,"\n  query SecuritySetting {\n    securitySetting {\n      allowedRegisterDomainList\n      disableClientSideTelemetry\n      disablePasswordLogin\n    }\n  }\n":a.rU,"\n  mutation UploadLicense($license: String!) {\n    uploadLicense(license: $license)\n  }\n":a.Yo,"\n  mutation ResetLicense {\n    resetLicense\n  }\n":a.d0,"\n  mutation CreateInvitation($email: String!) {\n    createInvitation(email: $email)\n  }\n":a.ib,"\n  mutation DeleteInvitation($id: ID!) {\n    deleteInvitation(id: $id)\n  }\n":a.YM,"\n  mutation updateUserRole($id: ID!, $isAdmin: Boolean!) {\n    updateUserRole(id: $id, isAdmin: $isAdmin)\n  }\n":a.XF,"\n  mutation UpdateUserActive($id: ID!, $active: Boolean!) {\n    updateUserActive(id: $id, active: $active)\n  }\n":a.dv,"\n  mutation generateResetPasswordUrl($userId: ID!) {\n    generateResetPasswordUrl(userId: $userId)\n  }\n":a.nh,"\n  mutation createUserGroup($input: CreateUserGroupInput!) {\n    createUserGroup(input: $input)\n  }\n":a.e8,"\n  mutation DeleteUserGroupMembership($userGroupId: ID!, $userId: ID!) {\n    deleteUserGroupMembership(userGroupId: $userGroupId, userId: $userId)\n  }\n":a.zD,"\n  mutation UpsertUserGroupMembership($input: UpsertUserGroupMembershipInput!) {\n    upsertUserGroupMembership(input: $input)\n  }\n":a.uI,"\n  mutation DeleteUserGroup($id: ID!) {\n    deleteUserGroup(id: $id)\n  }\n":a.hQ,"\n  query GetRegistrationToken {\n    registrationToken\n  }\n":a.bh,"\n  mutation ResetRegistrationToken {\n    resetRegistrationToken\n  }\n":a.wW,"\n  query TestModelConnection($backend: ModelHealthBackend!) {\n    testModelConnection(backend: $backend) {\n      latencyMs\n    }\n  }\n":a.rE,"\n  query GetDiskUsageStats {\n    diskUsageStats {\n      events {\n        filepath\n        sizeKb\n      }\n      indexedRepositories {\n        filepath\n        sizeKb\n      }\n      database {\n        filepath\n        sizeKb\n      }\n      models {\n        filepath\n        sizeKb\n      }\n    }\n  }\n":a.xX,"\n  query readRepositoryRelatedQuestions($sourceId: String!) {\n    readRepositoryRelatedQuestions(sourceId: $sourceId)\n  }\n":a.pu,"\n  mutation passwordReset($input: PasswordResetInput!) {\n    passwordReset(input: $input)\n  }\n":a.vK,"\n  mutation tokenAuthLdap($userId: String!, $password: String!) {\n    tokenAuthLdap(userId: $userId, password: $password) {\n      accessToken\n      refreshToken\n    }\n  }\n":a.Wv,"\n  mutation requestPasswordResetEmail($input: RequestPasswordResetEmailInput!) {\n    requestPasswordResetEmail(input: $input)\n  }\n":a.i8,"\n  mutation requestInvitationEmail($input: RequestInvitationInput!) {\n    requestInvitationEmail(input: $input) {\n      email\n      code\n    }\n  }\n":a.S_,"\n  query authProviders {\n    authProviders {\n      kind\n    }\n  }\n":a.c1,"\n  mutation tokenAuth($email: String!, $password: String!) {\n    tokenAuth(email: $email, password: $password) {\n      accessToken\n      refreshToken\n    }\n  }\n":a.UO,"\n  mutation register(\n    $name: String!\n    $email: String!\n    $password1: String!\n    $password2: String!\n    $invitationCode: String\n  ) {\n    register(\n      name: $name\n      email: $email\n      password1: $password1\n      password2: $password2\n      invitationCode: $invitationCode\n    ) {\n      accessToken\n      refreshToken\n    }\n  }\n":a.YR,"\n  query RepositoryGrep(\n    $id: ID!\n    $kind: RepositoryKind!\n    $rev: String\n    $query: String!\n  ) {\n    repositoryGrep(kind: $kind, id: $id, rev: $rev, query: $query) {\n      files {\n        path\n        lines {\n          line {\n            text\n            base64\n          }\n          byteOffset\n          lineNumber\n          subMatches {\n            bytesStart\n            bytesEnd\n          }\n        }\n      }\n      elapsedMs\n    }\n  }\n":a.lq,"\n  mutation DeletePage($id: ID!) {\n    deletePage(id: $id)\n  }\n":a.$Q,"\n  mutation updatePageContent($input: UpdatePageContentInput!) {\n    updatePageContent(input: $input)\n  }\n":a.N1,"\n  mutation updatePageTitle($input: UpdatePageTitleInput!) {\n    updatePageTitle(input: $input)\n  }\n":a.vV,"\n  mutation updatePageSectionContent($input: UpdatePageSectionContentInput!) {\n    updatePageSectionContent(input: $input)\n  }\n":a.jG,"\n  mutation updatePageSectionTitle($input: UpdatePageSectionTitleInput!) {\n    updatePageSectionTitle(input: $input)\n  }\n":a.nT,"\n  subscription createThreadToPageRun($threadId: ID!) {\n    createThreadToPageRun(threadId: $threadId) {\n      __typename\n      ... on PageCreated {\n        id\n        authorId\n        title\n      }\n      ... on PageContentDelta {\n        delta\n      }\n      ... on PageContentCompleted {\n        id\n      }\n      ... on PageSectionsCreated {\n        sections {\n          id\n          position\n          title\n          attachments {\n            code {\n              __typename\n              gitUrl\n              commit\n              filepath\n              language\n              content\n              startLine\n            }\n            codeFileList {\n              __typename\n              fileList\n              truncated\n            }\n          }\n        }\n      }\n      ... on PageSectionAttachmentCodeFileList {\n        id\n        codeFileList {\n          __typename\n          fileList\n          truncated\n        }\n      }\n      ... on PageSectionAttachmentCode {\n        id\n        codes {\n          code {\n            __typename\n            gitUrl\n            commit\n            filepath\n            language\n            content\n            startLine\n          }\n          scores {\n            rrf\n            bm25\n            embedding\n          }\n        }\n      }\n      ... on PageSectionContentDelta {\n        id\n        delta\n      }\n      ... on PageSectionContentCompleted {\n        id\n      }\n      ... on PageCompleted {\n        id\n      }\n    }\n  }\n":a.dQ,"\n  subscription createPageSectionRun($input: CreatePageSectionRunInput!) {\n    createPageSectionRun(input: $input) {\n      __typename\n      ... on PageSection {\n        id\n        title\n        position\n      }\n      ... on PageSectionAttachmentCodeFileList {\n        id\n        codeFileList {\n          fileList\n          truncated\n        }\n      }\n      ... on PageSectionAttachmentCode {\n        id\n        codes {\n          code {\n            __typename\n            gitUrl\n            commit\n            filepath\n            language\n            content\n            startLine\n          }\n          scores {\n            rrf\n            bm25\n            embedding\n          }\n        }\n      }\n      ... on PageSectionContentDelta {\n        id\n        delta\n      }\n      ... on PageSectionContentCompleted {\n        id\n      }\n    }\n  }\n":a.js,"\n  subscription createPageRun($input: CreatePageRunInput!) {\n    createPageRun(input: $input) {\n      __typename\n      ... on PageCreated {\n        id\n        authorId\n        title\n      }\n      ... on PageContentDelta {\n        delta\n      }\n      ... on PageContentCompleted {\n        id\n      }\n      ... on PageSectionsCreated {\n        sections {\n          id\n          position\n          title\n          attachments {\n            code {\n              __typename\n              gitUrl\n              commit\n              filepath\n              language\n              content\n              startLine\n            }\n            codeFileList {\n              __typename\n              fileList\n              truncated\n            }\n          }\n        }\n      }\n      ... on PageSectionAttachmentCodeFileList {\n        id\n        codeFileList {\n          __typename\n          fileList\n          truncated\n        }\n      }\n      ... on PageSectionAttachmentCode {\n        id\n        codes {\n          code {\n            __typename\n            gitUrl\n            commit\n            filepath\n            language\n            content\n            startLine\n          }\n          scores {\n            rrf\n            bm25\n            embedding\n          }\n        }\n      }\n      ... on PageSectionContentDelta {\n        id\n        delta\n      }\n      ... on PageSectionContentCompleted {\n        id\n      }\n      ... on PageCompleted {\n        id\n      }\n    }\n  }\n":a.BX,"\n  mutation DeletePageSection($sectionId: ID!) {\n    deletePageSection(sectionId: $sectionId)\n  }\n":a.$g,"\n  mutation movePageSection($id: ID!, $direction: MoveSectionDirection!) {\n    movePageSection(id: $id, direction: $direction)\n  }\n":a.nA,"\n  mutation UpdateThreadMessage($input: UpdateMessageInput!) {\n    updateThreadMessage(input: $input)\n  }\n":a.Tj,"\n  mutation markNotificationsRead($notificationId: ID) {\n    markNotificationsRead(notificationId: $notificationId)\n  }\n":a.yR,"\n  mutation ResetUserAuthToken {\n    resetUserAuthToken\n  }\n":a.qq,"\n  query GetLicenseInfo {\n    license {\n      type\n      status\n      seats\n      seatsUsed\n      issuedAt\n      expiresAt\n    }\n  }\n":a.eZ,"\n  query MeQuery {\n    me {\n      id\n      email\n      name\n      isAdmin\n      isOwner\n      authToken\n      isPasswordSet\n      isSsoUser\n    }\n  }\n":a.fk,"\n  query NetworkSetting {\n    networkSetting {\n      externalUrl\n    }\n  }\n":a.m2,"\n  query GetServerInfo {\n    serverInfo {\n      isAdminInitialized\n      isEmailConfigured\n      isChatEnabled\n      allowSelfSignup\n      isDemoMode\n      disablePasswordLogin\n    }\n  }\n":a.a,"\n  subscription CreateThreadAndRun($input: CreateThreadAndRunInput!) {\n    createThreadAndRun(input: $input) {\n      __typename\n      ... on ThreadCreated {\n        id\n      }\n      ... on ThreadUserMessageCreated {\n        id\n      }\n      ... on ThreadAssistantMessageCreated {\n        id\n      }\n      ... on ThreadAssistantMessageReadingCode {\n        snippet\n        fileList\n      }\n      ... on ThreadRelevantQuestions {\n        questions\n      }\n      ... on ThreadAssistantMessageAttachmentsCodeFileList {\n        codeFileList: fileList\n        truncated\n      }\n      ... on ThreadAssistantMessageAttachmentsCode {\n        hits {\n          code {\n            gitUrl\n            commit\n            filepath\n            language\n            content\n            startLine\n          }\n          scores {\n            rrf\n            bm25\n            embedding\n          }\n        }\n      }\n      ... on ThreadAssistantMessageAttachmentsDoc {\n        hits {\n          doc {\n            __typename\n            ... on MessageAttachmentWebDoc {\n              title\n              link\n              content\n            }\n            ... on MessageAttachmentIssueDoc {\n              title\n              link\n              author {\n                id\n                email\n                name\n              }\n              body\n              closed\n            }\n            ... on MessageAttachmentPullDoc {\n              title\n              link\n              author {\n                id\n                email\n                name\n              }\n              body\n              merged\n            }\n            ... on MessageAttachmentCommitDoc {\n              sha\n              message\n              author {\n                id\n                email\n                name\n              }\n              authorAt\n            }\n          }\n          score\n        }\n      }\n      ... on ThreadAssistantMessageContentDelta {\n        delta\n      }\n      ... on ThreadAssistantMessageCompleted {\n        id\n      }\n    }\n  }\n":a.VL,"\n  subscription CreateThreadRun($input: CreateThreadRunInput!) {\n    createThreadRun(input: $input) {\n      __typename\n      ... on ThreadCreated {\n        id\n      }\n      ... on ThreadUserMessageCreated {\n        id\n      }\n      ... on ThreadAssistantMessageCreated {\n        id\n      }\n      ... on ThreadAssistantMessageReadingCode {\n        snippet\n        fileList\n      }\n      ... on ThreadRelevantQuestions {\n        questions\n      }\n      ... on ThreadAssistantMessageAttachmentsCodeFileList {\n        codeFileList: fileList\n        truncated\n      }\n      ... on ThreadAssistantMessageAttachmentsCode {\n        hits {\n          code {\n            gitUrl\n            commit\n            filepath\n            language\n            content\n            startLine\n          }\n          scores {\n            rrf\n            bm25\n            embedding\n          }\n        }\n      }\n      ... on ThreadAssistantMessageAttachmentsDoc {\n        hits {\n          doc {\n            __typename\n            ... on MessageAttachmentWebDoc {\n              title\n              link\n              content\n            }\n            ... on MessageAttachmentIssueDoc {\n              title\n              link\n              author {\n                id\n                email\n                name\n              }\n              body\n              closed\n            }\n            ... on MessageAttachmentPullDoc {\n              title\n              link\n              author {\n                id\n                email\n                name\n              }\n              body\n              merged\n            }\n            ... on MessageAttachmentCommitDoc {\n              sha\n              message\n              author {\n                id\n                email\n                name\n              }\n              authorAt\n            }\n          }\n          score\n        }\n      }\n      ... on ThreadAssistantMessageContentDelta {\n        delta\n      }\n      ... on ThreadAssistantMessageCompleted {\n        id\n      }\n    }\n  }\n":a.uM,"\n  mutation DeleteThreadMessagePair(\n    $threadId: ID!\n    $userMessageId: ID!\n    $assistantMessageId: ID!\n  ) {\n    deleteThreadMessagePair(\n      threadId: $threadId\n      userMessageId: $userMessageId\n      assistantMessageId: $assistantMessageId\n    )\n  }\n":a.ou,"\n  mutation refreshToken($refreshToken: String!) {\n    refreshToken(refreshToken: $refreshToken) {\n      accessToken\n      refreshToken\n    }\n  }\n":a.FR,"\n  mutation LogoutAllSessions {\n    logoutAllSessions\n  }\n":a.Il,"\n  query ListInvitations(\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    invitations(after: $after, before: $before, first: $first, last: $last) {\n      edges {\n        node {\n          id\n          email\n          code\n          createdAt\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":a.Xx,"\n  query gitRepositories(\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    gitRepositories(\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          name\n          gitUrl\n          sourceId\n          jobInfo {\n            lastJobRun {\n              id\n              job\n              createdAt\n              finishedAt\n              exitCode\n            }\n            command\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":a.Mi,"\n  query ListJobRuns(\n    $ids: [ID!]\n    $jobs: [String!]\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    jobRuns(\n      ids: $ids\n      jobs: $jobs\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          job\n          createdAt\n          startedAt\n          finishedAt\n          exitCode\n          stdout\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":a.$S,"\n  query GetJobRunStats($jobs: [String!]) {\n    jobRunStats(jobs: $jobs) {\n      success\n      failed\n      pending\n    }\n  }\n":a.np,"\n  query ListJobs {\n    jobs\n  }\n":a.Ax,"\n  query ListUsers(\n    $ids: [ID!]\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    users(\n      ids: $ids\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          email\n          isAdmin\n          isOwner\n          createdAt\n          active\n          name\n          isSsoUser\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":a.by,"\n  query DailyStatsInPastYear($users: [ID!]) {\n    dailyStatsInPastYear(users: $users) {\n      start\n      end\n      completions\n      selects\n      views\n    }\n  }\n":a.Wd,"\n  query DailyStats(\n    $start: DateTime!\n    $end: DateTime!\n    $users: [ID!]\n    $languages: [Language!]\n  ) {\n    dailyStats(start: $start, end: $end, users: $users, languages: $languages) {\n      start\n      end\n      completions\n      selects\n      views\n      language\n    }\n  }\n":a.Sm,"\n  query ListIntegrations(\n    $ids: [ID!]\n    $kind: IntegrationKind\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    integrations(\n      ids: $ids\n      kind: $kind\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          displayName\n          status\n          apiBase\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":a.KZ,"\n  query ListIntegratedRepositories(\n    $ids: [ID!]\n    $kind: IntegrationKind\n    $active: Boolean\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    integratedRepositories(\n      ids: $ids\n      kind: $kind\n      active: $active\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          displayName\n          gitUrl\n          active\n          sourceId\n          jobInfo {\n            lastJobRun {\n              id\n              job\n              createdAt\n              finishedAt\n              startedAt\n              exitCode\n            }\n            command\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":a.qt,"\n  query RepositoryList {\n    repositoryList {\n      id\n      name\n      kind\n      gitUrl\n      refs {\n        name\n        commit\n      }\n    }\n  }\n":a.HC,"\n  query RepositorySearch(\n    $kind: RepositoryKind!\n    $id: ID!\n    $rev: String\n    $pattern: String!\n  ) {\n    repositorySearch(kind: $kind, id: $id, rev: $rev, pattern: $pattern) {\n      type\n      path\n      indices\n    }\n  }\n":a.BH,"\n  query ContextInfo {\n    contextInfo {\n      sources {\n        id\n        sourceKind\n        sourceId\n        sourceName\n      }\n    }\n  }\n":a.w4,"\n  query UserGroups {\n    userGroups {\n      id\n      name\n      createdAt\n      updatedAt\n      members {\n        user {\n          id\n          email\n          name\n          createdAt\n        }\n        isGroupAdmin\n        createdAt\n        updatedAt\n      }\n    }\n  }\n":a.hx,"\n  query sourceIdAccessPolicies($sourceId: String!) {\n    sourceIdAccessPolicies(sourceId: $sourceId) {\n      sourceId\n      read {\n        id\n        name\n      }\n    }\n  }\n":a.NL,"\n  query ListThreads(\n    $ids: [ID!]\n    $isEphemeral: Boolean\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    threads(\n      ids: $ids\n      isEphemeral: $isEphemeral\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          userId\n          isEphemeral\n          createdAt\n          updatedAt\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":a.qk,"\n  query ListMyThreads(\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    myThreads(after: $after, before: $before, first: $first, last: $last) {\n      edges {\n        node {\n          id\n          userId\n          isEphemeral\n          createdAt\n          updatedAt\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":a.Dd,"\n  query ListThreadMessages(\n    $threadId: ID!\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    threadMessages(\n      threadId: $threadId\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          threadId\n          codeSourceId\n          role\n          content\n          attachment {\n            code {\n              gitUrl\n              commit\n              filepath\n              language\n              content\n              startLine\n            }\n            clientCode {\n              filepath\n              content\n              startLine\n            }\n            doc {\n              __typename\n              ... on MessageAttachmentWebDoc {\n                title\n                link\n                content\n              }\n              ... on MessageAttachmentIssueDoc {\n                title\n                link\n                author {\n                  id\n                  email\n                  name\n                }\n                body\n                closed\n              }\n              ... on MessageAttachmentPullDoc {\n                title\n                link\n                author {\n                  id\n                  email\n                  name\n                }\n                body\n                merged\n              }\n              ... on MessageAttachmentCommitDoc {\n                sha\n                message\n                author {\n                  id\n                  email\n                  name\n                }\n                authorAt\n              }\n            }\n            codeFileList {\n              fileList\n              truncated\n            }\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":a.f7,"\n  mutation SetThreadPersisted($threadId: ID!) {\n    setThreadPersisted(threadId: $threadId)\n  }\n":a.qu,"\n  mutation DeleteThread($id: ID!) {\n    deleteThread(id: $id)\n  }\n":a.xW,"\n  query Notifications {\n    notifications {\n      id\n      content\n      read\n      createdAt\n    }\n  }\n":a.Qw,"\n  query LdapCredential {\n    ldapCredential {\n      host\n      port\n      bindDn\n      baseDn\n      userFilter\n      encryption\n      skipTlsVerify\n      emailAttribute\n      nameAttribute\n      createdAt\n      updatedAt\n    }\n  }\n":a.Ee,"\n  query OAuthCredential($provider: OAuthProvider!) {\n    oauthCredential(provider: $provider) {\n      provider\n      clientId\n      createdAt\n      updatedAt\n    }\n  }\n":a.Fd,"\n  query RepositorySourceList {\n    repositoryList {\n      id\n      name\n      kind\n      gitUrl\n      sourceId\n      sourceName\n      sourceKind\n    }\n  }\n":a.mO,"\n  query ListPages(\n    $ids: [ID!]\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    pages(\n      ids: $ids\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          authorId\n          title\n          codeSourceId\n          content\n          createdAt\n          updatedAt\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":a.fv,"\n  query ListPageSections(\n    $pageId: ID!\n    $after: String\n    $before: String\n    $first: Int\n    $last: Int\n  ) {\n    pageSections(\n      pageId: $pageId\n      after: $after\n      before: $before\n      first: $first\n      last: $last\n    ) {\n      edges {\n        node {\n          id\n          pageId\n          title\n          content\n          position\n          attachments {\n            code {\n              __typename\n              gitUrl\n              commit\n              filepath\n              language\n              content\n              startLine\n            }\n            codeFileList {\n              __typename\n              fileList\n              truncated\n            }\n          }\n        }\n        cursor\n      }\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n        startCursor\n        endCursor\n      }\n    }\n  }\n":a.$N};function i(n){var e;return null!==(e=r[n])&&void 0!==e?e:{}}},43240:function(n,e,t){t.d(e,{BX:function(){return a.B}});var a=t(75561)},28312:function(n,e,t){t.d(e,{m:function(){return o}});var a=t(3546),r=t(61200),i=t.n(r),s=t(2578);function o(n){let{timeout:e=2e3,onError:t,onCopyContent:r}=n,[o,d]=a.useState(!1),u=()=>{d(!0),setTimeout(()=>{d(!1)},e)},l=n=>{if("function"==typeof t){null==t||t(n);return}s.A.error("Failed to copy.")};return{isCopied:o,copyToClipboard:n=>{var e;if(n){if(r){r(n),u();return}if(null===(e=navigator.clipboard)||void 0===e?void 0:e.writeText)navigator.clipboard.writeText(n).then(u).catch(l);else{let e=i()(n);e?u():l()}}}}}},24449:function(n,e,t){t.d(e,{S:function(){return o},n:function(){return d}});var a=t(3546),r=t(45391),i=t(16784);let s=n=>{let e=(0,i.d)(n);a.useEffect(()=>()=>{e.current()},[])};function o(n,e,t){let o=(0,i.d)(n),d=a.useMemo(()=>(0,r.Z)(function(){for(var n=arguments.length,e=Array(n),t=0;t<n;t++)e[t]=arguments[t];return o.current(...e)},e,t),[]);return s(()=>{var n;null==t||null===(n=t.onUnmount)||void 0===n||n.call(t,d),d.cancel()}),{run:d,cancel:d.cancel,flush:d.flush}}function d(n,e,t){let[r,i]=a.useState(n),{run:s}=o(()=>{i(n)},e,t);return a.useEffect(()=>{s()},[n]),[r,i]}},16784:function(n,e,t){t.d(e,{d:function(){return r}});var a=t(3546);function r(n){let e=a.useRef(n);return e.current=n,e}},98454:function(n,e,t){t.d(e,{P:function(){return s}});var a=t(40055),r=t(43240);let i=(0,r.BX)("\n  query MeQuery {\n    me {\n      id\n      email\n      name\n      isAdmin\n      isOwner\n      authToken\n      isPasswordSet\n      isSsoUser\n    }\n  }\n"),s=()=>(0,a.aM)({query:i})},3765:function(n,e,t){t.d(e,{Z:function(){return d}});var a=t(44745),r=t(57778),i=t(79716),s=t(91302),o=t(66794);async function d(n,e){var t;let a=null!==(t=null==e?void 0:e.customFetch)&&void 0!==t?t:window.fetch;if(function(n){var e;if(n.startsWith("/oauth/providers"))return!1;let t=null===(e=(0,o.bW)())||void 0===e?void 0:e.accessToken,a=(0,o.jW)();if(t)try{let{exp:n}=(0,i.o)(t);return(0,o.pw)(n)}catch(n){return!0}else if(a)return!(null==a?void 0:a.authorization);else return!0}(n))return o.gN.refreshToken(u).then(t=>p(n,e));let r=await a(n,l(e));return 401===r.status?(o.gN.clearAccessToken(),o.gN.refreshToken(u).then(t=>p(n,e))):m(r,e)}async function u(){var n,e;let t=null===(n=(0,o.bW)())||void 0===n?void 0:n.refreshToken;if(!t)return;let a=await c(t);return null==a?void 0:null===(e=a.data)||void 0===e?void 0:e.refreshToken}function l(n){var e,t;let a=new Headers(null==n?void 0:n.headers),r=null===(e=(0,o.bW)())||void 0===e?void 0:e.accessToken,i=(0,o.jW)();if(r)a.append("authorization","Bearer ".concat(null===(t=(0,o.bW)())||void 0===t?void 0:t.accessToken));else if(i){let n={Authorization:"Bearer ".concat(i.authorization),...i.headers},e=Object.keys(n);for(let t of e)a.append(t,n[t])}return{...n||{},headers:a}}async function c(n){let e=new a.KU({url:"/graphql",requestPolicy:"network-only",exchanges:[a.Ek]}),t=e.createRequestOperation("mutation",(0,r.h)(s.Dp,{refreshToken:n}));return e.executeMutation(t)}function p(n,e){var t;let a=null!==(t=null==e?void 0:e.customFetch)&&void 0!==t?t:window.fetch;return a(n,l(e)).then(n=>m(n,e))}function m(n,e){return(null==n?void 0:n.ok)?(null==e?void 0:e.responseFormatter)?e.responseFormatter(n):(null==e?void 0:e.responseFormat)==="blob"?n.blob():n.json():(null==e?void 0:e.errorHandler)?e.errorHandler(n):void 0}}}]);