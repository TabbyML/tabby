description = 'Replace range experimental: syntax rust: case 01 (ref)'

[config.limitScope]
experimentalSyntax = true
[config.calculateReplaceRange]
experimentalSyntax = false

[context]
filepath = 'myTest.rs'
language = 'rust'
# indentation = '  ' # not specified
text = '''
pub fun myTest(&self, text: String) {
    let mut body = HashMap::new();
    body.insert("├text".to_string(), text);┤")
    let mut headers = HashMap::new();
    headers.insert("Content-Type".to_string(), "application/json".to_string());
}
'''

[expected]
text = '''
pub fun myTest(&self, text: String) {
    let mut body = HashMap::new();
    body.insert("├text".to_string(), text);┤")╣
    let mut headers = HashMap::new();
    headers.insert("Content-Type".to_string(), "application/json".to_string());
}
'''
