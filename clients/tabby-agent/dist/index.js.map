{"version":3,"sources":["../src/index.ts","../src/TabbyAgent.ts","../src/generated/core/BaseHttpRequest.ts","../src/generated/core/request.ts","../src/generated/core/ApiError.ts","../src/generated/core/CancelablePromise.ts","../src/generated/core/AxiosHttpRequest.ts","../src/generated/services/V1Service.ts","../src/generated/TabbyApi.ts","../src/utils.ts","../src/Auth.ts","../src/cloud/services/ApiService.ts","../src/cloud/CloudApi.ts","../src/env.ts","../src/dataStore.ts","../src/logger.ts","../src/AgentConfig.ts","../src/CompletionCache.ts","../src/postprocess/filter.ts","../src/postprocess/limitScopeByIndentation.ts","../src/postprocess/removeOverlapping.ts","../src/postprocess/dropBlank.ts","../src/postprocess/index.ts","../package.json","../src/AnonymousUsageLogger.ts","../src/Agent.ts"],"sourcesContent":["export { TabbyAgent, TabbyAgentOptions } from \"./TabbyAgent\";\nexport {\n  Agent,\n  AgentStatus,\n  AgentFunction,\n  AgentEvent,\n  StatusChangedEvent,\n  ConfigUpdatedEvent,\n  CompletionRequest,\n  CompletionResponse,\n  LogEventRequest,\n  agentEventNames,\n} from \"./Agent\";\nexport { AgentConfig } from \"./AgentConfig\";\nexport { DataStore } from \"./dataStore\";\nexport { CancelablePromise } from \"./generated\";\n","import { EventEmitter } from \"events\";\nimport { v4 as uuid } from \"uuid\";\nimport deepEqual from \"deep-equal\";\nimport deepMerge from \"deepmerge\";\nimport { TabbyApi, CancelablePromise } from \"./generated\";\nimport { cancelable, splitLines, isBlank } from \"./utils\";\nimport {\n  Agent,\n  AgentStatus,\n  AgentEvent,\n  AgentInitOptions,\n  CompletionRequest,\n  CompletionResponse,\n  LogEventRequest,\n} from \"./Agent\";\nimport { Auth } from \"./Auth\";\nimport { AgentConfig, defaultAgentConfig } from \"./AgentConfig\";\nimport { CompletionCache } from \"./CompletionCache\";\nimport { DataStore } from \"./dataStore\";\nimport { postprocess } from \"./postprocess\";\nimport { rootLogger, allLoggers } from \"./logger\";\nimport { AnonymousUsageLogger } from \"./AnonymousUsageLogger\";\n\n/**\n * Different from AgentInitOptions or AgentConfig, this may contain non-serializable objects,\n * so it is not suitable for cli, but only used when imported as module by other js project.\n */\nexport type TabbyAgentOptions = {\n  dataStore: DataStore;\n};\n\nexport class TabbyAgent extends EventEmitter implements Agent {\n  private readonly logger = rootLogger.child({ component: \"TabbyAgent\" });\n  private anonymousUsageLogger: AnonymousUsageLogger;\n  private config: AgentConfig = defaultAgentConfig;\n  private status: AgentStatus = \"notInitialized\";\n  private api: TabbyApi;\n  private auth: Auth;\n  private dataStore: DataStore | null = null;\n  private completionCache: CompletionCache = new CompletionCache();\n  static readonly tryConnectInterval = 1000 * 30; // 30s\n  private tryingConnectTimer: ReturnType<typeof setInterval> | null = null;\n\n  private constructor() {\n    super();\n\n    this.tryingConnectTimer = setInterval(async () => {\n      if (this.status === \"disconnected\") {\n        this.logger.debug(\"Trying to connect...\");\n        await this.healthCheck();\n      }\n    }, TabbyAgent.tryConnectInterval);\n  }\n\n  static async create(options?: Partial<TabbyAgentOptions>): Promise<TabbyAgent> {\n    const agent = new TabbyAgent();\n    agent.dataStore = options?.dataStore;\n    agent.anonymousUsageLogger = await AnonymousUsageLogger.create({ dataStore: options?.dataStore });\n    return agent;\n  }\n\n  private async applyConfig() {\n    allLoggers.forEach((logger) => (logger.level = this.config.logs.level));\n    this.anonymousUsageLogger.disabled = this.config.anonymousUsageTracking.disable;\n    if (this.config.server.endpoint !== this.auth?.endpoint) {\n      this.auth = await Auth.create({ endpoint: this.config.server.endpoint, dataStore: this.dataStore });\n      this.auth.on(\"updated\", this.onAuthUpdated.bind(this));\n    }\n    this.api = new TabbyApi({ BASE: this.config.server.endpoint, TOKEN: this.auth.token });\n  }\n\n  private async onAuthUpdated() {\n    this.api = new TabbyApi({ BASE: this.config.server.endpoint, TOKEN: this.auth.token });\n    await this.healthCheck();\n  }\n\n  private changeStatus(status: AgentStatus) {\n    if (this.status != status) {\n      this.status = status;\n      const event: AgentEvent = { event: \"statusChanged\", status };\n      this.logger.debug({ event }, \"Status changed\");\n      super.emit(\"statusChanged\", event);\n    }\n  }\n\n  private callApi<Request, Response>(\n    api: (request: Request) => CancelablePromise<Response>,\n    request: Request\n  ): CancelablePromise<Response> {\n    this.logger.debug({ api: api.name, request }, \"API request\");\n    const promise = api.call(this.api.v1, request);\n    return cancelable(\n      promise\n        .then((response: Response) => {\n          this.logger.debug({ api: api.name, response }, \"API response\");\n          this.changeStatus(\"ready\");\n          return response;\n        })\n        .catch((error) => {\n          if (!!error.isCancelled) {\n            this.logger.debug({ api: api.name, error }, \"API request canceled\");\n          } else if (error.name === \"ApiError\" && [401, 403, 405].indexOf(error.status) !== -1) {\n            this.logger.debug({ api: api.name, error }, \"API unauthorized\");\n            this.changeStatus(\"unauthorized\");\n          } else if (error.name === \"ApiError\") {\n            this.logger.error({ api: api.name, error }, \"API error\");\n            this.changeStatus(\"disconnected\");\n          } else {\n            this.logger.error({ api: api.name, error }, \"API request failed with unknown error\");\n            this.changeStatus(\"disconnected\");\n          }\n          throw error;\n        }),\n      () => {\n        promise.cancel();\n      }\n    );\n  }\n\n  private async healthCheck(): Promise<any> {\n    return this.callApi(this.api.v1.health, {}).catch(() => {});\n  }\n\n  private createSegments(request: CompletionRequest): { prefix: string; suffix: string } {\n    // max lines in prefix and suffix configurable\n    const maxPrefixLines = request.maxPrefixLines;\n    const maxSuffixLines = request.maxSuffixLines;\n    const prefix = request.text.slice(0, request.position);\n    const prefixLines = splitLines(prefix);\n    const suffix = request.text.slice(request.position);\n    const suffixLines = splitLines(suffix);\n    return {\n      prefix: prefixLines.slice(Math.max(prefixLines.length - maxPrefixLines, 0)).join(\"\"),\n      suffix: suffixLines.slice(0, maxSuffixLines).join(\"\"),\n    };\n  }\n\n  public async initialize(options: Partial<AgentInitOptions>): Promise<boolean> {\n    if (options.client) {\n      // Client info is only used in logging for now\n      // `pino.Logger.setBindings` is not present in the browser\n      allLoggers.forEach((logger) => logger.setBindings && logger.setBindings({ client: options.client }));\n    }\n    await this.updateConfig(options.config || {});\n    await this.anonymousUsageLogger.event(\"AgentInitialized\", {\n      client: options.client,\n    });\n    this.logger.debug({ options }, \"Initialized\");\n    return this.status !== \"notInitialized\";\n  }\n\n  public async updateConfig(config: Partial<AgentConfig>): Promise<boolean> {\n    const mergedConfig = deepMerge(this.config, config);\n    if (!deepEqual(this.config, mergedConfig)) {\n      this.config = mergedConfig;\n      await this.applyConfig();\n      const event: AgentEvent = { event: \"configUpdated\", config: this.config };\n      this.logger.debug({ event }, \"Config updated\");\n      super.emit(\"configUpdated\", event);\n    }\n    await this.healthCheck();\n    return true;\n  }\n\n  public getConfig(): AgentConfig {\n    return this.config;\n  }\n\n  public getStatus(): AgentStatus {\n    return this.status;\n  }\n\n  public startAuth(): CancelablePromise<string | null> {\n    if (this.status === \"notInitialized\") {\n      throw new Error(\"Agent is not initialized\");\n    }\n    return cancelable(\n      this.healthCheck().then(() => {\n        if (this.status === \"unauthorized\") {\n          return this.auth.requestToken();\n        }\n        return null;\n      }),\n      () => {\n        if (this.status === \"unauthorized\") {\n          this.auth.reset();\n        }\n      }\n    );\n  }\n\n  public getCompletions(request: CompletionRequest): CancelablePromise<CompletionResponse> {\n    if (this.status === \"notInitialized\") {\n      throw new Error(\"Agent is not initialized\");\n    }\n    if (this.completionCache.has(request)) {\n      this.logger.debug({ request }, \"Completion cache hit\");\n      return new CancelablePromise((resolve) => {\n        resolve(this.completionCache.get(request));\n      });\n    }\n    const segments = this.createSegments(request);\n    if (isBlank(segments.prefix)) {\n      this.logger.debug(\"Segment prefix is blank, returning empty completion response\");\n      return new CancelablePromise((resolve) => {\n        resolve({\n          id: \"agent-\" + uuid(),\n          choices: [],\n        });\n      });\n    }\n    const promise = this.callApi(this.api.v1.completion, {\n      language: request.language,\n      segments,\n      user: this.auth?.user,\n    });\n    return cancelable(\n      promise\n        .then((response) => {\n          this.completionCache.set(request, response);\n          return response;\n        })\n        .then((response) => {\n          return postprocess(request, response);\n        }),\n      () => {\n        promise.cancel();\n      }\n    );\n  }\n\n  public postEvent(request: LogEventRequest): CancelablePromise<boolean> {\n    if (this.status === \"notInitialized\") {\n      throw new Error(\"Agent is not initialized\");\n    }\n    return this.callApi(this.api.v1.event, request);\n  }\n}\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { CancelablePromise } from './CancelablePromise';\nimport type { OpenAPIConfig } from './OpenAPI';\n\nexport abstract class BaseHttpRequest {\n\n  constructor(public readonly config: OpenAPIConfig) {}\n\n  public abstract request<T>(options: ApiRequestOptions): CancelablePromise<T>;\n}\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport axios from 'axios';\nimport type { AxiosError, AxiosRequestConfig, AxiosResponse } from 'axios';\nimport FormData from 'form-data';\n\nimport { ApiError } from './ApiError';\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { ApiResult } from './ApiResult';\nimport { CancelablePromise } from './CancelablePromise';\nimport type { OnCancel } from './CancelablePromise';\nimport type { OpenAPIConfig } from './OpenAPI';\n\nconst isDefined = <T>(value: T | null | undefined): value is Exclude<T, null | undefined> => {\n  return value !== undefined && value !== null;\n};\n\nconst isString = (value: any): value is string => {\n  return typeof value === 'string';\n};\n\nconst isStringWithValue = (value: any): value is string => {\n  return isString(value) && value !== '';\n};\n\nconst isBlob = (value: any): value is Blob => {\n  return (\n    typeof value === 'object' &&\n    typeof value.type === 'string' &&\n    typeof value.stream === 'function' &&\n    typeof value.arrayBuffer === 'function' &&\n    typeof value.constructor === 'function' &&\n    typeof value.constructor.name === 'string' &&\n    /^(Blob|File)$/.test(value.constructor.name) &&\n    /^(Blob|File)$/.test(value[Symbol.toStringTag])\n  );\n};\n\nconst isFormData = (value: any): value is FormData => {\n  return value instanceof FormData;\n};\n\nconst isSuccess = (status: number): boolean => {\n  return status >= 200 && status < 300;\n};\n\nconst base64 = (str: string): string => {\n  try {\n    return btoa(str);\n  } catch (err) {\n    // @ts-ignore\n    return Buffer.from(str).toString('base64');\n  }\n};\n\nconst getQueryString = (params: Record<string, any>): string => {\n  const qs: string[] = [];\n\n  const append = (key: string, value: any) => {\n    qs.push(`${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`);\n  };\n\n  const process = (key: string, value: any) => {\n    if (isDefined(value)) {\n      if (Array.isArray(value)) {\n        value.forEach(v => {\n          process(key, v);\n        });\n      } else if (typeof value === 'object') {\n        Object.entries(value).forEach(([k, v]) => {\n          process(`${key}[${k}]`, v);\n        });\n      } else {\n        append(key, value);\n      }\n    }\n  };\n\n  Object.entries(params).forEach(([key, value]) => {\n    process(key, value);\n  });\n\n  if (qs.length > 0) {\n    return `?${qs.join('&')}`;\n  }\n\n  return '';\n};\n\nconst getUrl = (config: OpenAPIConfig, options: ApiRequestOptions): string => {\n  const encoder = config.ENCODE_PATH || encodeURI;\n\n  const path = options.url\n    .replace('{api-version}', config.VERSION)\n    .replace(/{(.*?)}/g, (substring: string, group: string) => {\n      if (options.path?.hasOwnProperty(group)) {\n        return encoder(String(options.path[group]));\n      }\n      return substring;\n    });\n\n  const url = `${config.BASE}${path}`;\n  if (options.query) {\n    return `${url}${getQueryString(options.query)}`;\n  }\n  return url;\n};\n\nconst getFormData = (options: ApiRequestOptions): FormData | undefined => {\n  if (options.formData) {\n    const formData = new FormData();\n\n    const process = (key: string, value: any) => {\n      if (isString(value) || isBlob(value)) {\n        formData.append(key, value);\n      } else {\n        formData.append(key, JSON.stringify(value));\n      }\n    };\n\n    Object.entries(options.formData)\n      .filter(([_, value]) => isDefined(value))\n      .forEach(([key, value]) => {\n        if (Array.isArray(value)) {\n          value.forEach(v => process(key, v));\n        } else {\n          process(key, value);\n        }\n      });\n\n    return formData;\n  }\n  return undefined;\n};\n\ntype Resolver<T> = (options: ApiRequestOptions) => Promise<T>;\n\nconst resolve = async <T>(options: ApiRequestOptions, resolver?: T | Resolver<T>): Promise<T | undefined> => {\n  if (typeof resolver === 'function') {\n    return (resolver as Resolver<T>)(options);\n  }\n  return resolver;\n};\n\nconst getHeaders = async (config: OpenAPIConfig, options: ApiRequestOptions, formData?: FormData): Promise<Record<string, string>> => {\n  const token = await resolve(options, config.TOKEN);\n  const username = await resolve(options, config.USERNAME);\n  const password = await resolve(options, config.PASSWORD);\n  const additionalHeaders = await resolve(options, config.HEADERS);\n  const formHeaders = typeof formData?.getHeaders === 'function' && formData?.getHeaders() || {}\n\n  const headers = Object.entries({\n    Accept: 'application/json',\n    ...additionalHeaders,\n    ...options.headers,\n    ...formHeaders,\n  })\n  .filter(([_, value]) => isDefined(value))\n  .reduce((headers, [key, value]) => ({\n    ...headers,\n    [key]: String(value),\n  }), {} as Record<string, string>);\n\n  if (isStringWithValue(token)) {\n    headers['Authorization'] = `Bearer ${token}`;\n  }\n\n  if (isStringWithValue(username) && isStringWithValue(password)) {\n    const credentials = base64(`${username}:${password}`);\n    headers['Authorization'] = `Basic ${credentials}`;\n  }\n\n  if (options.body) {\n    if (options.mediaType) {\n      headers['Content-Type'] = options.mediaType;\n    } else if (isBlob(options.body)) {\n      headers['Content-Type'] = options.body.type || 'application/octet-stream';\n    } else if (isString(options.body)) {\n      headers['Content-Type'] = 'text/plain';\n    } else if (!isFormData(options.body)) {\n      headers['Content-Type'] = 'application/json';\n    }\n  }\n\n  return headers;\n};\n\nconst getRequestBody = (options: ApiRequestOptions): any => {\n  if (options.body) {\n    return options.body;\n  }\n  return undefined;\n};\n\nconst sendRequest = async <T>(\n  config: OpenAPIConfig,\n  options: ApiRequestOptions,\n  url: string,\n  body: any,\n  formData: FormData | undefined,\n  headers: Record<string, string>,\n  onCancel: OnCancel\n): Promise<AxiosResponse<T>> => {\n  const source = axios.CancelToken.source();\n\n  const requestConfig: AxiosRequestConfig = {\n    url,\n    headers,\n    data: body ?? formData,\n    method: options.method,\n    withCredentials: config.WITH_CREDENTIALS,\n    cancelToken: source.token,\n  };\n\n  onCancel(() => source.cancel('The user aborted a request.'));\n\n  try {\n    return await axios.request(requestConfig);\n  } catch (error) {\n    const axiosError = error as AxiosError<T>;\n    if (axiosError.response) {\n      return axiosError.response;\n    }\n    throw error;\n  }\n};\n\nconst getResponseHeader = (response: AxiosResponse<any>, responseHeader?: string): string | undefined => {\n  if (responseHeader) {\n    const content = response.headers[responseHeader];\n    if (isString(content)) {\n      return content;\n    }\n  }\n  return undefined;\n};\n\nconst getResponseBody = (response: AxiosResponse<any>): any => {\n  if (response.status !== 204) {\n    return response.data;\n  }\n  return undefined;\n};\n\nconst catchErrorCodes = (options: ApiRequestOptions, result: ApiResult): void => {\n  const errors: Record<number, string> = {\n    400: 'Bad Request',\n    401: 'Unauthorized',\n    403: 'Forbidden',\n    404: 'Not Found',\n    500: 'Internal Server Error',\n    502: 'Bad Gateway',\n    503: 'Service Unavailable',\n    ...options.errors,\n  }\n\n  const error = errors[result.status];\n  if (error) {\n    throw new ApiError(options, result, error);\n  }\n\n  if (!result.ok) {\n    throw new ApiError(options, result, 'Generic Error');\n  }\n};\n\n/**\n * Request method\n * @param config The OpenAPI configuration object\n * @param options The request options from the service\n * @returns CancelablePromise<T>\n * @throws ApiError\n */\nexport const request = <T>(config: OpenAPIConfig, options: ApiRequestOptions): CancelablePromise<T> => {\n  return new CancelablePromise(async (resolve, reject, onCancel) => {\n    try {\n      const url = getUrl(config, options);\n      const formData = getFormData(options);\n      const body = getRequestBody(options);\n      const headers = await getHeaders(config, options, formData);\n\n      if (!onCancel.isCancelled) {\n        const response = await sendRequest<T>(config, options, url, body, formData, headers, onCancel);\n        const responseBody = getResponseBody(response);\n        const responseHeader = getResponseHeader(response, options.responseHeader);\n\n        const result: ApiResult = {\n          url,\n          ok: isSuccess(response.status),\n          status: response.status,\n          statusText: response.statusText,\n          body: responseHeader ?? responseBody,\n        };\n\n        catchErrorCodes(options, result);\n\n        resolve(result.body);\n      }\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { ApiResult } from './ApiResult';\n\nexport class ApiError extends Error {\n  public readonly url: string;\n  public readonly status: number;\n  public readonly statusText: string;\n  public readonly body: any;\n  public readonly request: ApiRequestOptions;\n\n  constructor(request: ApiRequestOptions, response: ApiResult, message: string) {\n    super(message);\n\n    this.name = 'ApiError';\n    this.url = response.url;\n    this.status = response.status;\n    this.statusText = response.statusText;\n    this.body = response.body;\n    this.request = request;\n  }\n}\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport class CancelError extends Error {\n\n  constructor(message: string) {\n    super(message);\n    this.name = 'CancelError';\n  }\n\n  public get isCancelled(): boolean {\n    return true;\n  }\n}\n\nexport interface OnCancel {\n  readonly isResolved: boolean;\n  readonly isRejected: boolean;\n  readonly isCancelled: boolean;\n\n  (cancelHandler: () => void): void;\n}\n\nexport class CancelablePromise<T> implements Promise<T> {\n  #isResolved: boolean;\n  #isRejected: boolean;\n  #isCancelled: boolean;\n  readonly #cancelHandlers: (() => void)[];\n  readonly #promise: Promise<T>;\n  #resolve?: (value: T | PromiseLike<T>) => void;\n  #reject?: (reason?: any) => void;\n\n  constructor(\n    executor: (\n      resolve: (value: T | PromiseLike<T>) => void,\n      reject: (reason?: any) => void,\n      onCancel: OnCancel\n    ) => void\n  ) {\n    this.#isResolved = false;\n    this.#isRejected = false;\n    this.#isCancelled = false;\n    this.#cancelHandlers = [];\n    this.#promise = new Promise<T>((resolve, reject) => {\n      this.#resolve = resolve;\n      this.#reject = reject;\n\n      const onResolve = (value: T | PromiseLike<T>): void => {\n        if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n          return;\n        }\n        this.#isResolved = true;\n        this.#resolve?.(value);\n      };\n\n      const onReject = (reason?: any): void => {\n        if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n          return;\n        }\n        this.#isRejected = true;\n        this.#reject?.(reason);\n      };\n\n      const onCancel = (cancelHandler: () => void): void => {\n        if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n          return;\n        }\n        this.#cancelHandlers.push(cancelHandler);\n      };\n\n      Object.defineProperty(onCancel, 'isResolved', {\n        get: (): boolean => this.#isResolved,\n      });\n\n      Object.defineProperty(onCancel, 'isRejected', {\n        get: (): boolean => this.#isRejected,\n      });\n\n      Object.defineProperty(onCancel, 'isCancelled', {\n        get: (): boolean => this.#isCancelled,\n      });\n\n      return executor(onResolve, onReject, onCancel as OnCancel);\n    });\n  }\n\n   get [Symbol.toStringTag]() {\n            return \"Cancellable Promise\";\n     }\n\n  public then<TResult1 = T, TResult2 = never>(\n    onFulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n    onRejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null\n  ): Promise<TResult1 | TResult2> {\n    return this.#promise.then(onFulfilled, onRejected);\n  }\n\n  public catch<TResult = never>(\n    onRejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null\n  ): Promise<T | TResult> {\n    return this.#promise.catch(onRejected);\n  }\n\n  public finally(onFinally?: (() => void) | null): Promise<T> {\n    return this.#promise.finally(onFinally);\n  }\n\n  public cancel(): void {\n    if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n      return;\n    }\n    this.#isCancelled = true;\n    if (this.#cancelHandlers.length) {\n      try {\n        for (const cancelHandler of this.#cancelHandlers) {\n          cancelHandler();\n        }\n      } catch (error) {\n        console.warn('Cancellation threw an error', error);\n        return;\n      }\n    }\n    this.#cancelHandlers.length = 0;\n    this.#reject?.(new CancelError('Request aborted'));\n  }\n\n  public get isCancelled(): boolean {\n    return this.#isCancelled;\n  }\n}\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport { BaseHttpRequest } from './BaseHttpRequest';\nimport type { CancelablePromise } from './CancelablePromise';\nimport type { OpenAPIConfig } from './OpenAPI';\nimport { request as __request } from './request';\n\nexport class AxiosHttpRequest extends BaseHttpRequest {\n\n  constructor(config: OpenAPIConfig) {\n    super(config);\n  }\n\n  /**\n   * Request method\n   * @param options The request options from the service\n   * @returns CancelablePromise<T>\n   * @throws ApiError\n   */\n  public override request<T>(options: ApiRequestOptions): CancelablePromise<T> {\n    return __request(this.config, options);\n  }\n}\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { CompletionRequest } from '../models/CompletionRequest';\nimport type { CompletionResponse } from '../models/CompletionResponse';\nimport type { HealthState } from '../models/HealthState';\nimport type { LogEventRequest } from '../models/LogEventRequest';\n\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport type { BaseHttpRequest } from '../core/BaseHttpRequest';\n\nexport class V1Service {\n\n  constructor(public readonly httpRequest: BaseHttpRequest) {}\n\n  /**\n   * @param requestBody\n   * @returns CompletionResponse Success\n   * @throws ApiError\n   */\n  public completion(\n    requestBody: CompletionRequest,\n  ): CancelablePromise<CompletionResponse> {\n    return this.httpRequest.request({\n      method: 'POST',\n      url: '/v1/completions',\n      body: requestBody,\n      mediaType: 'application/json',\n      errors: {\n        400: `Bad Request`,\n      },\n    });\n  }\n\n  /**\n   * @param requestBody\n   * @returns any Success\n   * @throws ApiError\n   */\n  public event(\n    requestBody: LogEventRequest,\n  ): CancelablePromise<any> {\n    return this.httpRequest.request({\n      method: 'POST',\n      url: '/v1/events',\n      body: requestBody,\n      mediaType: 'application/json',\n      errors: {\n        400: `Bad Request`,\n      },\n    });\n  }\n\n  /**\n   * @returns HealthState Success\n   * @throws ApiError\n   */\n  public health(): CancelablePromise<HealthState> {\n    return this.httpRequest.request({\n      method: 'POST',\n      url: '/v1/health',\n    });\n  }\n\n}\n","/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { BaseHttpRequest } from './core/BaseHttpRequest';\nimport type { OpenAPIConfig } from './core/OpenAPI';\nimport { AxiosHttpRequest } from './core/AxiosHttpRequest';\n\nimport { V1Service } from './services/V1Service';\n\ntype HttpRequestConstructor = new (config: OpenAPIConfig) => BaseHttpRequest;\n\nexport class TabbyApi {\n\n  public readonly v1: V1Service;\n\n  public readonly request: BaseHttpRequest;\n\n  constructor(config?: Partial<OpenAPIConfig>, HttpRequest: HttpRequestConstructor = AxiosHttpRequest) {\n    this.request = new HttpRequest({\n      BASE: config?.BASE ?? 'https://playground.app.tabbyml.com/tabby',\n      VERSION: config?.VERSION ?? '0.1.0',\n      WITH_CREDENTIALS: config?.WITH_CREDENTIALS ?? false,\n      CREDENTIALS: config?.CREDENTIALS ?? 'include',\n      TOKEN: config?.TOKEN,\n      USERNAME: config?.USERNAME,\n      PASSWORD: config?.PASSWORD,\n      HEADERS: config?.HEADERS,\n      ENCODE_PATH: config?.ENCODE_PATH,\n    });\n\n    this.v1 = new V1Service(this.request);\n  }\n}\n\n","export function splitLines(input: string) {\n  return input.match(/.*(?:$|\\r?\\n)/g).filter(Boolean); // Split lines and keep newline character\n}\n\nexport function splitWords(input: string) {\n  return input.match(/\\w+|\\W+/g).filter(Boolean); // Split consecutive words and non-words\n}\n\nexport function isBlank(input: string) {\n  return input.trim().length === 0;\n}\n\nimport { CancelablePromise } from \"./generated\";\nexport function cancelable<T>(promise: Promise<T>, cancel: () => void): CancelablePromise<T> {\n  return new CancelablePromise((resolve, reject, onCancel) => {\n    promise\n      .then((resp: T) => {\n        resolve(resp);\n      })\n      .catch((err: Error) => {\n        reject(err);\n      });\n    onCancel(() => {\n      cancel();\n    });\n  });\n}\n","import { EventEmitter } from \"events\";\nimport decodeJwt from \"jwt-decode\";\nimport { CloudApi } from \"./cloud\";\nimport { ApiError } from \"./generated\";\nimport { dataStore, DataStore } from \"./dataStore\";\nimport { rootLogger } from \"./logger\";\n\nexport type StorageData = {\n  auth: { [endpoint: string]: { jwt: string } };\n};\n\ntype JWT = { token: string; payload: { email: string; exp: number } };\n\nexport class Auth extends EventEmitter {\n  static readonly authPageUrl = \"https://app.tabbyml.com/account/device-token\";\n  static readonly tokenStrategy = {\n    polling: {\n      // polling token after auth url generated\n      interval: 5000, // polling token every 5 seconds\n      timeout: 5 * 60 * 1000, // stop polling after trying for 5 min\n    },\n    refresh: {\n      // refresh token 30 min before token expires\n      // assume a new token expires in 1 day, much longer than 30 min\n      beforeExpire: 30 * 60 * 1000,\n      maxTry: 5, // try to refresh token 5 times\n      retryDelay: 2000, // retry after 2 seconds\n    },\n  };\n\n  private readonly logger = rootLogger.child({ component: \"Auth\" });\n  readonly endpoint: string;\n  readonly dataStore: DataStore | null = null;\n  private pollingTokenTimer: ReturnType<typeof setInterval> | null = null;\n  private stopPollingTokenTimer: ReturnType<typeof setTimeout> | null = null;\n  private refreshTokenTimer: ReturnType<typeof setTimeout> | null = null;\n  private authApi: CloudApi | null = null;\n  private jwt: JWT | null = null;\n\n  static async create(options: { endpoint: string; dataStore?: DataStore }): Promise<Auth> {\n    const auth = new Auth(options);\n    await auth.load();\n    return auth;\n  }\n\n  constructor(options: { endpoint: string; dataStore?: DataStore }) {\n    super();\n    this.endpoint = options.endpoint;\n    this.dataStore = options.dataStore || dataStore;\n\n    // From tabby endpoint: http[s]://{namespace}.app.tabbyml.com/tabby[/]\n    // To auth endpoint: http[s]://{namespace}.app.tabbyml.com/api\n    const authApiBase = this.endpoint.replace(/\\/tabby\\/?$/, \"/api\");\n    this.authApi = new CloudApi({ BASE: authApiBase });\n  }\n\n  get token(): string | null {\n    return this.jwt?.token;\n  }\n\n  get user(): string | null {\n    return this.jwt?.payload.email;\n  }\n\n  private async load(): Promise<void> {\n    if (!this.dataStore) return;\n    try {\n      await this.dataStore.load();\n      const storedJwt = this.dataStore.data[\"auth\"]?.[this.endpoint]?.jwt;\n      if (typeof storedJwt === \"string\" && this.jwt?.token !== storedJwt) {\n        this.logger.debug({ storedJwt }, \"Load jwt from data store.\");\n        const jwt: JWT = {\n          token: storedJwt,\n          payload: decodeJwt(storedJwt),\n        };\n        // refresh token if it is about to expire or has expired\n        if (jwt.payload.exp * 1000 - Date.now() < Auth.tokenStrategy.refresh.beforeExpire) {\n          this.jwt = await this.refreshToken(jwt);\n          await this.save();\n        } else {\n          this.jwt = jwt;\n        }\n        this.scheduleRefreshToken();\n      }\n    } catch (error: any) {\n      this.logger.debug({ error }, \"Error when loading auth\");\n    }\n  }\n\n  private async save(): Promise<void> {\n    if (!this.dataStore) return;\n    try {\n      if (this.jwt) {\n        if (this.dataStore.data[\"auth\"]?.[this.endpoint]?.jwt === this.jwt.token) return;\n        this.dataStore.data[\"auth\"] = { ...this.dataStore.data[\"auth\"], [this.endpoint]: { jwt: this.jwt.token } };\n      } else {\n        if (typeof this.dataStore.data[\"auth\"]?.[this.endpoint] === \"undefined\") return;\n        delete this.dataStore.data[\"auth\"][this.endpoint];\n      }\n      await this.dataStore.save();\n      this.logger.debug(\"Save changes to data store.\");\n    } catch (error: any) {\n      this.logger.error({ error }, \"Error when saving auth\");\n    }\n  }\n\n  async reset(): Promise<void> {\n    if (this.jwt) {\n      this.jwt = null;\n      await this.save();\n    }\n    if (this.refreshTokenTimer) {\n      clearTimeout(this.refreshTokenTimer);\n      this.refreshTokenTimer = null;\n    }\n    if (this.pollingTokenTimer) {\n      clearInterval(this.pollingTokenTimer);\n      this.pollingTokenTimer = null;\n    }\n    if (this.stopPollingTokenTimer) {\n      clearTimeout(this.stopPollingTokenTimer);\n      this.stopPollingTokenTimer = null;\n    }\n  }\n\n  async requestToken(): Promise<string> {\n    try {\n      await this.reset();\n      this.logger.debug(\"Start to request device token\");\n      const deviceToken = await this.authApi.api.deviceToken({ auth_url: this.endpoint });\n      this.logger.debug({ deviceToken }, \"Request device token response\");\n      const authUrl = new URL(Auth.authPageUrl);\n      authUrl.searchParams.append(\"code\", deviceToken.data.code);\n      this.schedulePollingToken(deviceToken.data.code);\n      return authUrl.toString();\n    } catch (error) {\n      this.logger.error({ error }, \"Error when requesting token\");\n      throw error;\n    }\n  }\n\n  private async refreshToken(jwt: JWT, retry = 0): Promise<JWT> {\n    try {\n      this.logger.debug({ retry }, \"Start to refresh token\");\n      const refreshedJwt = await this.authApi.api.deviceTokenRefresh(jwt.token);\n      this.logger.debug({ refreshedJwt }, \"Refresh token response\");\n      return {\n        token: refreshedJwt.data.jwt,\n        payload: decodeJwt(refreshedJwt.data.jwt),\n      };\n    } catch (error) {\n      if (error instanceof ApiError && [401, 403, 405].indexOf(error.status) !== -1) {\n        this.logger.debug({ error }, \"Error when refreshing jwt\");\n      } else {\n        // unknown error, retry a few times\n        this.logger.error({ error }, \"Unknown error when refreshing jwt\");\n        if (retry < Auth.tokenStrategy.refresh.maxTry) {\n          await new Promise((resolve) => setTimeout(resolve, Auth.tokenStrategy.refresh.retryDelay));\n          this.logger.debug(\"Retry refreshing jwt\");\n          return this.refreshToken(jwt, retry + 1);\n        }\n      }\n      throw { ...error, retry };\n    }\n  }\n\n  private async schedulePollingToken(code: string) {\n    this.pollingTokenTimer = setInterval(async () => {\n      try {\n        const response = await this.authApi.api.deviceTokenAccept({ code });\n        this.logger.debug({ response }, \"Poll jwt response\");\n        this.jwt = {\n          token: response.data.jwt,\n          payload: decodeJwt(response.data.jwt),\n        };\n        await this.save();\n        this.scheduleRefreshToken();\n        super.emit(\"updated\", this.jwt);\n        clearInterval(this.pollingTokenTimer);\n        this.pollingTokenTimer = null;\n      } catch (error) {\n        if (error instanceof ApiError && [401, 403, 405].indexOf(error.status) !== -1) {\n          this.logger.debug({ error }, \"Expected error when polling jwt\");\n        } else {\n          // unknown error but still keep polling\n          this.logger.error({ error }, \"Error when polling jwt\");\n        }\n      }\n    }, Auth.tokenStrategy.polling.interval);\n    this.stopPollingTokenTimer = setTimeout(() => {\n      if (this.pollingTokenTimer) {\n        clearInterval(this.pollingTokenTimer);\n        this.pollingTokenTimer = null;\n      }\n    }, Auth.tokenStrategy.polling.timeout);\n  }\n\n  private scheduleRefreshToken() {\n    if (this.refreshTokenTimer) {\n      clearTimeout(this.refreshTokenTimer);\n      this.refreshTokenTimer = null;\n    }\n    if (!this.jwt) {\n      return null;\n    }\n\n    const refreshDelay = Math.max(\n      0,\n      this.jwt.payload.exp * 1000 - Auth.tokenStrategy.refresh.beforeExpire - Date.now()\n    );\n    this.logger.debug({ refreshDelay }, \"Schedule refresh token\");\n    this.refreshTokenTimer = setTimeout(async () => {\n      this.jwt = await this.refreshToken(this.jwt);\n      await this.save();\n      this.scheduleRefreshToken();\n      super.emit(\"updated\", this.jwt);\n    }, refreshDelay);\n  }\n}\n","import type { CancelablePromise } from \"../../generated/core/CancelablePromise\";\nimport type { BaseHttpRequest } from \"../../generated/core/BaseHttpRequest\";\n\nimport type { DeviceTokenRequest } from \"../models/DeviceTokenRequest\";\nimport type { DeviceTokenResponse } from \"../models/DeviceTokenResponse\";\nimport type { DeviceTokenAcceptResponse } from \"../models/DeviceTokenAcceptResponse\";\nimport type { DeviceTokenRefreshResponse } from \"../models/DeviceTokenRefreshResponse\";\n\nexport class ApiService {\n  constructor(public readonly httpRequest: BaseHttpRequest) {}\n\n  /**\n   * @returns DeviceTokenResponse Success\n   * @throws ApiError\n   */\n  public deviceToken(body: DeviceTokenRequest): CancelablePromise<DeviceTokenResponse> {\n    return this.httpRequest.request({\n      method: \"POST\",\n      url: \"/device-token\",\n      body,\n    });\n  }\n\n  /**\n   * @param code\n   * @returns DeviceTokenAcceptResponse Success\n   * @throws ApiError\n   */\n  public deviceTokenAccept(query: { code: string }): CancelablePromise<DeviceTokenAcceptResponse> {\n    return this.httpRequest.request({\n      method: \"POST\",\n      url: \"/device-token/accept\",\n      query,\n    });\n  }\n\n  /**\n   * @param token\n   * @returns DeviceTokenRefreshResponse Success\n   * @throws ApiError\n   */\n  public deviceTokenRefresh(token: string): CancelablePromise<DeviceTokenRefreshResponse> {\n    return this.httpRequest.request({\n      method: \"POST\",\n      url: \"/device-token/refresh\",\n      headers: { Authorization: `Bearer ${token}` },\n    });\n  }\n\n  /**\n   * @param body object for anonymous usage tracking\n   */\n  public usage(body: any): CancelablePromise<any> {\n    return this.httpRequest.request({\n      method: \"POST\",\n      url: \"/usage\",\n      body,\n    });\n  }\n}\n","import type { BaseHttpRequest, OpenAPIConfig } from \"../generated\";\nimport { AxiosHttpRequest } from \"../generated/core/AxiosHttpRequest\";\nimport { ApiService } from \"./services/ApiService\";\n\ntype HttpRequestConstructor = new (config: OpenAPIConfig) => BaseHttpRequest;\n\nexport class CloudApi {\n  public readonly api: ApiService;\n\n  public readonly request: BaseHttpRequest;\n\n  constructor(config?: Partial<OpenAPIConfig>, HttpRequest: HttpRequestConstructor = AxiosHttpRequest) {\n    this.request = new HttpRequest({\n      BASE: config?.BASE,\n      VERSION: config?.VERSION ?? \"0.0.0\",\n      WITH_CREDENTIALS: config?.WITH_CREDENTIALS ?? false,\n      CREDENTIALS: config?.CREDENTIALS ?? \"include\",\n      TOKEN: config?.TOKEN,\n      USERNAME: config?.USERNAME,\n      PASSWORD: config?.PASSWORD,\n      HEADERS: config?.HEADERS,\n      ENCODE_PATH: config?.ENCODE_PATH,\n    });\n\n    this.api = new ApiService(this.request);\n  }\n}\n","export const isBrowser = !!process.env.IS_BROWSER;\nexport const isTest = !!process.env.IS_TEST;","import { isBrowser } from \"./env\";\n\nexport type StoredData = {\n  anonymousId: string;\n  auth: { [endpoint: string]: { jwt: string } };\n};\n\nexport interface DataStore {\n  data: Partial<StoredData>;\n  load(): PromiseLike<void>;\n  save(): PromiseLike<void>;\n}\n\nexport const dataStore: DataStore = isBrowser\n  ? null\n  : (() => {\n      const dataFile = require(\"path\").join(require(\"os\").homedir(), \".tabby\", \"agent\", \"data.json\");\n      const fs = require(\"fs-extra\");\n      return {\n        data: {},\n        load: async function () {\n          this.data = (await fs.readJson(dataFile, { throws: false })) || {};\n        },\n        save: async function () {\n          await fs.outputJson(dataFile, this.data);\n        },\n      };\n    })();\n","import pino from \"pino\";\nimport { isBrowser } from \"./env\";\n\n/**\n * Stream not available in browser, will use default console output.\n */\nconst stream = isBrowser\n  ? null\n  : /**\n     * Default rotating file locate at `~/.tabby/agent-logs/`.\n     */\n    require(\"rotating-file-stream\").createStream(\"tabby-agent.log\", {\n      path: require(\"path\").join(require(\"os\").homedir(), \".tabby\", \"agent-logs\"),\n      size: \"10M\",\n      interval: \"1d\",\n    });\n\nexport const rootLogger = !!stream ? pino(stream) : pino();\n\nexport const allLoggers = [rootLogger];\nrootLogger.onChild = (child) => {\n  allLoggers.push(child);\n};\n","export type AgentConfig = {\n  server: {\n    endpoint: string;\n  };\n  logs: {\n    level: \"debug\" | \"error\" | \"silent\";\n  };\n  anonymousUsageTracking: {\n    disable: boolean;\n  };\n};\n\nexport const defaultAgentConfig: AgentConfig = {\n  server: {\n    endpoint: \"http://localhost:8080\",\n  },\n  logs: {\n    level: \"silent\",\n  },\n  anonymousUsageTracking: {\n    disable: false,\n  },\n};\n","import { LRUCache } from \"lru-cache\";\nimport hashObject from \"object-hash\";\nimport sizeOfObject from \"object-sizeof\";\nimport { CompletionRequest, CompletionResponse } from \"./Agent\";\nimport { rootLogger } from \"./logger\";\nimport { splitLines, splitWords } from \"./utils\";\n\ntype CompletionCacheKey = CompletionRequest;\ntype CompletionCacheValue = CompletionResponse;\n\nexport class CompletionCache {\n  private readonly logger = rootLogger.child({ component: \"CompletionCache\" });\n  private cache: LRUCache<string, CompletionCacheValue>;\n  private options = {\n    maxSize: 1 * 1024 * 1024, // 1MB\n    partiallyAcceptedCacheGeneration: {\n      enabled: true,\n      perCharacter: {\n        lines: 1,\n        words: 10,\n        max: 30,\n      },\n      perWord: {\n        lines: 1,\n        max: 20,\n      },\n      perLine: {\n        max: 3,\n      },\n    },\n  };\n\n  constructor() {\n    this.cache = new LRUCache<string, CompletionCacheValue>({\n      maxSize: this.options.maxSize,\n      sizeCalculation: sizeOfObject,\n    });\n  }\n\n  has(key: CompletionCacheKey): boolean {\n    return this.cache.has(this.hash(key));\n  }\n\n  set(key: CompletionCacheKey, value: CompletionCacheValue): void {\n    for (const entry of this.createCacheEntries(key, value)) {\n      this.logger.debug({ entry }, \"Setting cache entry\");\n      this.cache.set(this.hash(entry.key), entry.value);\n    }\n    this.logger.debug({ size: this.cache.calculatedSize }, \"Cache size\");\n  }\n\n  get(key: CompletionCacheKey): CompletionCacheValue | undefined {\n    return this.cache.get(this.hash(key));\n  }\n\n  private hash(key: CompletionCacheKey): string {\n    return hashObject(key);\n  }\n\n  private createCacheEntries(\n    key: CompletionCacheKey,\n    value: CompletionCacheValue\n  ): { key: CompletionCacheKey; value: CompletionCacheValue }[] {\n    const list = [{ key, value }];\n    if (this.options.partiallyAcceptedCacheGeneration.enabled) {\n      const entries = value.choices\n        .map((choice) => {\n          return this.calculatePartiallyAcceptedPositions(choice.text).map((position) => {\n            return {\n              prefix: choice.text.slice(0, position),\n              suffix: choice.text.slice(position),\n              choiceIndex: choice.index,\n            };\n          });\n        })\n        .flat()\n        .reduce((grouped: { [key: string]: { suffix: string; choiceIndex: number }[] }, entry) => {\n          grouped[entry.prefix] = grouped[entry.prefix] || [];\n          grouped[entry.prefix].push({ suffix: entry.suffix, choiceIndex: entry.choiceIndex });\n          return grouped;\n        }, {});\n      for (const prefix in entries) {\n        const cacheKey = {\n          ...key,\n          text: key.text.slice(0, key.position) + prefix + key.text.slice(key.position),\n          position: key.position + prefix.length,\n        };\n        const cacheValue = {\n          ...value,\n          choices: entries[prefix].map((choice) => {\n            return {\n              index: choice.choiceIndex,\n              text: choice.suffix,\n            };\n          }),\n        };\n        list.push({\n          key: cacheKey,\n          value: cacheValue,\n        });\n      }\n    }\n    return list;\n  }\n\n  private calculatePartiallyAcceptedPositions(completion: string): number[] {\n    const positions: number[] = [];\n    const option = this.options.partiallyAcceptedCacheGeneration;\n\n    const lines = splitLines(completion);\n    let index = 0;\n    let offset = 0;\n    // `index < lines.length - 1` to exclude the last line\n    while (index < lines.length - 1 && index < option.perLine.max) {\n      offset += lines[index].length;\n      positions.push(offset);\n      index++;\n    }\n\n    const words = lines.slice(0, option.perWord.lines).map(splitWords).flat();\n    index = 0;\n    offset = 0;\n    while (index < words.length && index < option.perWord.max) {\n      offset += words[index].length;\n      positions.push(offset);\n      index++;\n    }\n\n    const characters = lines\n      .slice(0, option.perCharacter.lines)\n      .map(splitWords)\n      .flat()\n      .slice(0, option.perCharacter.words)\n      .join(\"\");\n    offset = 1;\n    while (offset < characters.length && offset < option.perCharacter.max) {\n      positions.push(offset);\n      offset++;\n    }\n\n    // distinct and sort ascending\n    return positions.filter((v, i, arr) => arr.indexOf(v) === i).sort((a, b) => a - b);\n  }\n}\n","import { CompletionRequest, CompletionResponse } from \"../Agent\";\nimport { rootLogger } from \"../logger\";\n\nexport type PostprocessContext = CompletionRequest;\nexport type PostprocessFilter = (item: string) => string | null | Promise<string | null>;\n\nexport const logger = rootLogger.child({ component: \"Postprocess\" });\n\nexport const applyFilter = (filter: PostprocessFilter) => {\n  return async (response: CompletionResponse) => {\n    response.choices = (\n      await Promise.all(\n        response.choices.map(async (choice) => {\n          choice.text = await filter(choice.text);\n          return choice;\n        })\n      )\n    ).filter(Boolean);\n    return response;\n  };\n};\n","import { PostprocessFilter, PostprocessContext, logger } from \"./filter\";\nimport { isBlank, splitLines } from \"../utils\";\n\nfunction calcIndentLevel(line) {\n  return line.match(/^[ \\t]*/)?.[0]?.length || 0;\n}\n\nfunction isIndentBlockClosingAllowed(currentIndentLevel, suffixLines) {\n  let index = 1;\n  while (index < suffixLines.length && isBlank(suffixLines[index])) {\n    index++;\n  }\n  if (index >= suffixLines.length) {\n    return true;\n  } else {\n    const indentLevel = calcIndentLevel(suffixLines[index]);\n    return indentLevel < currentIndentLevel;\n  }\n}\n\nfunction isOpeningIndentBlock(lines, index) {\n  if (index >= lines.length - 1) {\n    return false;\n  }\n  return calcIndentLevel(lines[index]) < calcIndentLevel(lines[index + 1]);\n}\n\nexport const limitScopeByIndentation: (context: PostprocessContext) => PostprocessFilter = (context) => {\n  return (input) => {\n    const prefix = context.text.slice(0, context.position);\n    const suffix = context.text.slice(context.position);\n    const prefixLines = splitLines(prefix);\n    const suffixLines = splitLines(suffix);\n    const inputLines = splitLines(input);\n    const currentIndentLevel = calcIndentLevel(prefixLines[prefixLines.length - 1]);\n    let index;\n    for (index = 1; index < inputLines.length; index++) {\n      if (isBlank(inputLines[index])) {\n        continue;\n      }\n      const indentLevel = calcIndentLevel(inputLines[index]);\n      if (indentLevel < currentIndentLevel) {\n        // If the line is indented less than the current indent level, it is out of scope.\n        // We assume it begins with a symbol closing block.\n        // If suffix context allows, and it do not open a new intent block, include this line here.\n        if (isIndentBlockClosingAllowed(currentIndentLevel, suffixLines) && !isOpeningIndentBlock(inputLines, index)) {\n          index++;\n        }\n        break;\n      }\n    }\n    if (index < inputLines.length) {\n      logger.debug({ input, prefix, suffix, scopeEndAt: index }, \"Remove content out of scope\");\n      return inputLines.slice(0, index).join(\"\").trimEnd();\n    }\n    return input;\n  };\n};\n","import { PostprocessFilter, PostprocessContext, logger } from \"./filter\";\n\nexport const removeOverlapping: (context: PostprocessContext) => PostprocessFilter = (context) => {\n  return (input) => {\n    const suffix = context.text.slice(context.position);\n    for (let index = Math.max(0, input.length - suffix.length); index < input.length; index++) {\n      if (input.slice(index) === suffix.slice(0, input.length - index)) {\n        logger.debug({ input, suffix, overlappedAt: index }, \"Remove overlapped content\");\n        return input.slice(0, index);\n      }\n    }\n    return input;\n  };\n};\n","import { PostprocessFilter } from \"./filter\";\nimport { isBlank } from \"../utils\";\n\nexport const dropBlank: () => PostprocessFilter = () => {\n  return (input) => {\n    return isBlank(input) ? null : input;\n  };\n};\n","import { CompletionRequest, CompletionResponse } from \"../Agent\";\nimport { applyFilter } from \"./filter\";\nimport { limitScopeByIndentation } from \"./limitScopeByIndentation\";\nimport { removeOverlapping } from \"./removeOverlapping\";\nimport { dropBlank } from \"./dropBlank\";\n\nexport async function postprocess(\n  request: CompletionRequest,\n  response: CompletionResponse\n): Promise<CompletionResponse> {\n  return new Promise((resolve) => resolve(response))\n    .then(applyFilter(limitScopeByIndentation(request)))\n    .then(applyFilter(removeOverlapping(request)))\n    .then(applyFilter(dropBlank()));\n}\n","{\n  \"name\": \"tabby-agent\",\n  \"version\": \"0.0.1\",\n  \"description\": \"Generic client agent for Tabby AI coding assistant IDE extensions.\",\n  \"repository\": \"https://github.com/TabbyML/tabby\",\n  \"files\": [\n    \"dist\"\n  ],\n  \"main\": \"./dist/index.js\",\n  \"browser\": \"./dist/index.mjs\",\n  \"types\": \"./dist/index.d.ts\",\n  \"scripts\": {\n    \"openapi-codegen\": \"rimraf ./src/generated  &&  openapi --input ../../website/static/openapi.json --output ./src/generated --client axios --name TabbyApi --indent 2\",\n    \"dev\": \"tsup --watch\",\n    \"build\": \"tsup\",\n    \"test:watch\": \"mocha --watch\",\n    \"test\": \"mocha\"\n  },\n  \"devDependencies\": {\n    \"@types/chai\": \"^4.3.5\",\n    \"@types/fs-extra\": \"^11.0.1\",\n    \"@types/mocha\": \"^10.0.1\",\n    \"@types/node\": \"^16.18.32\",\n    \"chai\": \"^4.3.7\",\n    \"dedent\": \"^0.7.0\",\n    \"esbuild-plugin-polyfill-node\": \"^0.2.0\",\n    \"mocha\": \"^10.2.0\",\n    \"openapi-typescript-codegen\": \"^0.24.0\",\n    \"rimraf\": \"^5.0.1\",\n    \"ts-node\": \"^10.9.1\",\n    \"tsup\": \"^6.7.0\",\n    \"typescript\": \"^5.0.3\"\n  },\n  \"dependencies\": {\n    \"axios\": \"^1.4.0\",\n    \"deep-equal\": \"^2.2.1\",\n    \"deepmerge\": \"^4.3.1\",\n    \"form-data\": \"^4.0.0\",\n    \"fs-extra\": \"^11.1.1\",\n    \"jwt-decode\": \"^3.1.2\",\n    \"lru-cache\": \"^9.1.1\",\n    \"object-hash\": \"^3.0.0\",\n    \"object-sizeof\": \"^2.6.1\",\n    \"pino\": \"^8.14.1\",\n    \"rotating-file-stream\": \"^3.1.0\",\n    \"uuid\": \"^9.0.0\"\n  }\n}\n","import { name as agentName, version as agentVersion } from \"../package.json\";\nimport { CloudApi } from \"./cloud\";\nimport { v4 as uuid } from \"uuid\";\nimport { isBrowser } from \"./env\";\nimport { rootLogger } from \"./logger\";\nimport { dataStore, DataStore } from \"./dataStore\";\n\nexport class AnonymousUsageLogger {\n  private anonymousUsageTrackingApi = new CloudApi({ BASE: \"https://app.tabbyml.com/api\" });\n  private logger = rootLogger.child({ component: \"AnonymousUsage\" });\n  private systemData = {\n    agent: `${agentName}, ${agentVersion}`,\n    browser: isBrowser ? navigator?.userAgent || \"browser\" : undefined,\n    node: isBrowser\n      ? undefined\n      : `${process.version} ${process.platform} ${require(\"os\").arch()} ${require(\"os\").release()}`,\n  };\n  private dataStore: DataStore | null = null;\n  private anonymousId: string;\n\n  disabled: boolean;\n\n  private constructor() {}\n\n  static async create(options: { dataStore: DataStore }): Promise<AnonymousUsageLogger> {\n    const logger = new AnonymousUsageLogger();\n    logger.dataStore = options.dataStore || dataStore;\n    await logger.checkAnonymousId();\n    return logger;\n  }\n\n  private async checkAnonymousId() {\n    if (this.dataStore) {\n      try {\n        await this.dataStore.load();\n      } catch (error) {\n        this.logger.debug({ error }, \"Error when loading anonymousId\");\n      }\n      if (typeof this.dataStore.data[\"anonymousId\"] === \"string\") {\n        this.anonymousId = this.dataStore.data[\"anonymousId\"];\n      } else {\n        this.anonymousId = uuid();\n        this.dataStore.data[\"anonymousId\"] = this.anonymousId;\n        try {\n          await this.dataStore.save();\n        } catch (error) {\n          this.logger.debug({ error }, \"Error when saving anonymousId\");\n        }\n      }\n    } else {\n      this.anonymousId = uuid();\n    }\n  }\n\n  async event(event: string, data: any) {\n    if (this.disabled) {\n      return;\n    }\n    await this.anonymousUsageTrackingApi.api\n      .usage({\n        distinctId: this.anonymousId,\n        event,\n        properties: {\n          ...this.systemData,\n          ...data,\n        },\n      })\n      .catch((error) => {\n        this.logger.error({ error }, \"Error when sending anonymous usage data\");\n      });\n  }\n}\n","import {\n  CancelablePromise,\n  LogEventRequest as ApiLogEventRequest,\n  CompletionResponse as ApiCompletionResponse,\n} from \"./generated\";\n\nimport { AgentConfig } from \"./AgentConfig\";\n\nexport type AgentInitOptions = {\n  config: Partial<AgentConfig>;\n  client: string;\n};\n\nexport type CompletionRequest = {\n  filepath: string;\n  language: string;\n  text: string;\n  position: number;\n  maxPrefixLines: number;\n  maxSuffixLines: number;\n};\n\nexport type CompletionResponse = ApiCompletionResponse;\n\nexport type LogEventRequest = ApiLogEventRequest;\n\nexport type AgentStatus = \"notInitialized\" | \"ready\" | \"disconnected\" | \"unauthorized\";\n\nexport interface AgentFunction {\n  initialize(options: Partial<AgentInitOptions>): Promise<boolean>;\n  updateConfig(config: Partial<AgentConfig>):  Promise<boolean>;\n  getConfig(): AgentConfig;\n  getStatus(): AgentStatus;\n\n  /**\n   * @returns string auth url if AgentStatus is `unauthorized`, null otherwise\n   * @throws Error if agent is not initialized\n   */\n  startAuth(): CancelablePromise<string | null>;\n\n  /**\n   * @param request \n   * @returns\n   * @throws Error if agent is not initialized\n   */\n  getCompletions(request: CompletionRequest): CancelablePromise<CompletionResponse>;\n\n  /**\n   * @param event \n   * @returns\n   * @throws Error if agent is not initialized\n   */\n  postEvent(event: LogEventRequest): CancelablePromise<boolean>;\n}\n\nexport type StatusChangedEvent = {\n  event: \"statusChanged\";\n  status: AgentStatus;\n};\nexport type ConfigUpdatedEvent = {\n  event: \"configUpdated\";\n  config: AgentConfig;\n};\n\nexport type AgentEvent = StatusChangedEvent | ConfigUpdatedEvent;\nexport const agentEventNames: AgentEvent[\"event\"][] = [\"statusChanged\", \"configUpdated\"];\n\nexport interface AgentEventEmitter {\n  on<T extends AgentEvent>(eventName: T[\"event\"], callback: (event: T) => void): this;\n}\n\nexport type Agent = AgentFunction & AgentEventEmitter;\n"],"mappings":"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","names":["import_events","import_uuid","request","resolve","FormData","process","headers","axios","resolve","resolve","pino","decodeJwt","resolve","sizeOfObject","hashObject","request","resolve","logger","uuid","logger","request","deepMerge","deepEqual","resolve","uuid"]}