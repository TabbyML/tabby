ARG UBUNTU_VERSION=24.04

# Target the VULKAN build image
ARG BASE_VULKAN_DEV_CONTAINER=ubuntu:${UBUNTU_VERSION}
# Target the VULKAN runtime image
ARG BASE_VULKAN_RUN_CONTAINER=ubuntu:${UBUNTU_VERSION}

FROM ${BASE_VULKAN_DEV_CONTAINER} AS build

# Rust toolchain version
ARG RUST_TOOLCHAIN=stable

ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        curl \
        ca-certificates \
        pkg-config \
        libssl-dev \
        libvulkan-dev \
        glslc \
        protobuf-compiler \
        git \
        cmake \
        build-essential \
        && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# setup rust.
RUN curl https://sh.rustup.rs -sSf | bash -s -- --default-toolchain ${RUST_TOOLCHAIN} -y
ENV PATH="/root/.cargo/bin:${PATH}"

WORKDIR /root/workspace

RUN mkdir -p /opt/tabby/bin
RUN mkdir -p /opt/tabby/lib
RUN mkdir -p target

COPY . .

RUN --mount=type=cache,target=/usr/local/cargo/registry \
    --mount=type=cache,target=/root/workspace/target \
    cargo build --no-default-features --features vulkan,prod --release --package tabby && \
    cp target/release/llama-server /opt/tabby/bin/ && \
    cp target/release/tabby /opt/tabby/bin/

# For compatibility with the legacy cpu build.
RUN cp /opt/tabby/bin/tabby /opt/tabby/bin/tabby-cpu

FROM ${BASE_VULKAN_RUN_CONTAINER} AS runtime

ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        git   \
        curl  \
        unzip \
        openssh-client \
        ca-certificates \
        libgomp1 \
        libvulkan1 \
        && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Disable safe directory in docker
# Context: https://github.com/git/git/commit/8959555cee7ec045958f9b6dd62e541affb7e7d9
RUN git config --system --add safe.directory "*"

# Automatic platform ARGs in the global scope
# https://docs.docker.com/engine/reference/builder/#automatic-platform-args-in-the-global-scope
ARG TARGETARCH

COPY --from=build /opt/tabby /opt/tabby

ENV PATH="$PATH:/opt/tabby/bin"
ENV TABBY_ROOT=/data

ENTRYPOINT ["/opt/tabby/bin/tabby"]
